{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-04-27T00:23:39.545818+00:00",
  "repo": "oauth-wg/oauth-identity-chaining",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 7,
      "id": "I_kwDOJubJxM5pfYO0",
      "title": "Processing rule unclear",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/7",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "It is unclear what is meant by this processing rule for token exchange \"In cases where federation to any authorization server is deliberate unknown resource or audience identifiers MAY be allowed.\"",
      "createdAt": "2023-06-22T14:42:24Z",
      "updatedAt": "2023-06-29T12:53:40Z",
      "closedAt": "2023-06-29T12:53:40Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixed in ci=ommit #18 ",
          "createdAt": "2023-06-29T12:53:35Z",
          "updatedAt": "2023-06-29T12:53:35Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOJubJxM5pfaM2",
      "title": "Describe down-scoping scenario",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/8",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Down-scoping is a valid scenario - bot AS in domain A and Domain B may choose to downscope.",
      "createdAt": "2023-06-22T14:46:14Z",
      "updatedAt": "2023-07-07T14:42:03Z",
      "closedAt": "2023-07-07T14:42:03Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Add this to the access token issuance as well",
          "createdAt": "2023-06-29T12:37:31Z",
          "updatedAt": "2023-06-29T12:37:31Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOJubJxM5pfbFV",
      "title": "Clarify which authroization servers transcribe which claims",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/9",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "When does AS in trust domain A transcribe claims, when does AS in trust domain B transcribe claims?",
      "createdAt": "2023-06-22T14:47:57Z",
      "updatedAt": "2023-07-07T14:41:21Z",
      "closedAt": "2023-07-07T14:41:21Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "add \"issuing the grant\" or \"issuing the token\"",
          "createdAt": "2023-06-29T12:34:02Z",
          "updatedAt": "2023-06-29T12:34:02Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Repeat the text used for the assertio to the access token issuances as well.",
          "createdAt": "2023-06-29T12:36:34Z",
          "updatedAt": "2023-06-29T12:36:34Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDOJubJxM5pgwiX",
      "title": "How to transcribe claims",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/10",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "arndt-s"
      ],
      "labels": [],
      "body": "What guidance should be given on transcribing claims (e.g. how should they be namespaced? Is there something we can borrow from OpenID Connect)?",
      "createdAt": "2023-06-22T18:29:36Z",
      "updatedAt": "2023-10-20T11:46:16Z",
      "closedAt": "2023-10-20T11:46:15Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Add disclaimer in 2.4.4 that formatting of transcribed claims is out of scope of this document. We need to add a reference to the Transaction Token spec to clarify this.",
          "createdAt": "2023-06-29T12:29:54Z",
          "updatedAt": "2023-06-29T12:29:54Z"
        },
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "Keeping it open to add reference to transaction token draft",
          "createdAt": "2023-07-07T14:41:05Z",
          "updatedAt": "2023-07-07T14:41:05Z"
        },
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "Discussed offline, we'll leave claim transcription out of scope but will also mention this at IETF 118 in Prague",
          "createdAt": "2023-10-20T11:46:15Z",
          "updatedAt": "2023-10-20T11:46:15Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDOJubJxM5pg8LP",
      "title": "Review use cases",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/12",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Review use cases to make sure they reflect the needs accurately and that the proposed solution works for all the proposed use cases.",
      "createdAt": "2023-06-22T19:04:29Z",
      "updatedAt": "2023-07-07T14:35:01Z",
      "closedAt": "2023-07-07T14:34:37Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Consider collapsing into a single use case to reduce cognitive load/manage expectations.",
          "createdAt": "2023-06-29T12:26:43Z",
          "updatedAt": "2023-06-29T12:26:43Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As discussed with Kelly and Arndt, we will use a single use case (2.1.3 only)",
          "createdAt": "2023-06-29T15:17:36Z",
          "updatedAt": "2023-06-29T15:17:36Z"
        },
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "Resolved with #23 ",
          "createdAt": "2023-07-07T14:35:00Z",
          "updatedAt": "2023-07-07T14:35:00Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "I_kwDOJubJxM5qI9d4",
      "title": "Fix diagrams (main doc and appendix)",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/17",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-29T12:32:41Z",
      "updatedAt": "2023-07-07T14:40:25Z",
      "closedAt": "2023-07-07T14:40:25Z",
      "comments": []
    },
    {
      "number": 21,
      "id": "I_kwDOJubJxM5qKFv9",
      "title": "Remove MITRE from Kelly's contribution",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/21",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-29T15:11:12Z",
      "updatedAt": "2023-07-07T14:38:16Z",
      "closedAt": "2023-07-07T14:38:16Z",
      "comments": [
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "Already done inline",
          "createdAt": "2023-07-07T14:38:16Z",
          "updatedAt": "2023-07-07T14:38:16Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "I_kwDOJubJxM5qKKfj",
      "title": "Type audiencd in 3.5.1",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/22",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "correct typo",
      "createdAt": "2023-06-29T15:21:11Z",
      "updatedAt": "2023-07-21T13:29:30Z",
      "closedAt": "2023-07-21T13:29:30Z",
      "comments": []
    },
    {
      "number": 25,
      "id": "I_kwDOJubJxM5q5T62",
      "title": "Authorization grant = client credentials",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/25",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Is the authorization grant effectively the client credentials ",
      "createdAt": "2023-07-07T11:48:58Z",
      "updatedAt": "2023-07-07T14:35:37Z",
      "closedAt": "2023-07-07T14:35:37Z",
      "comments": [
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "discussed offline",
          "createdAt": "2023-07-07T14:35:37Z",
          "updatedAt": "2023-07-07T14:35:37Z"
        }
      ]
    },
    {
      "number": 29,
      "id": "I_kwDOJubJxM5rEqrc",
      "title": "Remove reference to 2-legged in use case.",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/29",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-10T09:45:17Z",
      "updatedAt": "2023-07-21T13:29:19Z",
      "closedAt": "2023-07-21T13:29:19Z",
      "comments": []
    },
    {
      "number": 31,
      "id": "I_kwDOJubJxM5rEwhr",
      "title": "Additional profile of Token Exchange",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/31",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Comment from Kelly:\r\n\r\nA.2.(A) Maybe we should cover this step (\u201cThe resource server of Domain A requests a token for the protected resource in Domain B from the authorization server in Domain A\u201d)",
      "createdAt": "2023-07-10T09:59:24Z",
      "updatedAt": "2024-02-20T16:16:56Z",
      "closedAt": "2024-02-20T16:16:01Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Could this be the same as for the token exchange between the client and the authorization server in Domain A? The outline then looks like this:\r\n\r\nRS Domain A <-> AS Domain A Token exchange profile in this spec\r\nAS Domain A <-> AS Domain B Token exchange profile in this spec\r\nRS Domain A <-> RS Domain B Assertion flow.",
          "createdAt": "2023-07-10T10:02:00Z",
          "updatedAt": "2023-07-10T10:04:40Z"
        },
        {
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm now happy with the current text. Closing the issue",
          "createdAt": "2024-02-20T16:15:47Z",
          "updatedAt": "2024-02-20T16:15:47Z"
        },
        {
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Current text is sufficient. Saying the first request in the protocol is out of scope is fine",
          "createdAt": "2024-02-20T16:16:55Z",
          "updatedAt": "2024-02-20T16:16:55Z"
        }
      ]
    },
    {
      "number": 32,
      "id": "I_kwDOJubJxM5rEztT",
      "title": "Mandatory text for AS to AS authentication?",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/32",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Comment from Kelly:\r\n\r\nA.2.(D) I think AS in domain A at least SHOULD authenticate to AS in domain B. We have it as a MUST.",
      "createdAt": "2023-07-10T10:05:43Z",
      "updatedAt": "2023-07-21T13:29:47Z",
      "closedAt": "2023-07-21T13:29:47Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Perhaps this can be done in the security considerations. ",
          "createdAt": "2023-07-10T10:06:12Z",
          "updatedAt": "2023-07-10T10:06:23Z"
        }
      ]
    },
    {
      "number": 35,
      "id": "I_kwDOJubJxM5rFC6m",
      "title": "Describe \"audienced\"",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/35",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-10T10:43:21Z",
      "updatedAt": "2023-07-21T13:28:54Z",
      "closedAt": "2023-07-21T13:28:54Z",
      "comments": []
    },
    {
      "number": 36,
      "id": "I_kwDOJubJxM5rFKpo",
      "title": "Suggested editorial changes from Kelly,",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/36",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Original: 10JulyOriginal.md\r\nKelly's editorial changes: identity-chaining-draft-kwb.md\r\n\r\n[identity-chaining-draft-kwb.md](https://github.com/arndt-s/ietf-identity-chaining/files/12001142/identity-chaining-draft-kwb.md)\r\n[10JulyOriginal.md](https://github.com/arndt-s/ietf-identity-chaining/files/12001143/10JulyOriginal.md)\r\n",
      "createdAt": "2023-07-10T11:03:07Z",
      "updatedAt": "2023-07-21T13:28:43Z",
      "closedAt": "2023-07-21T13:28:43Z",
      "comments": []
    },
    {
      "number": 42,
      "id": "I_kwDOJubJxM5rXqzL",
      "title": "Update docname to draft-schwenkschuster-oauth-identity-chaining-00",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/42",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-12T16:41:22Z",
      "updatedAt": "2023-10-17T10:04:17Z",
      "closedAt": "2023-10-17T10:04:17Z",
      "comments": [
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "doc name updated",
          "createdAt": "2023-10-17T10:04:17Z",
          "updatedAt": "2023-10-17T10:04:17Z"
        }
      ]
    },
    {
      "number": 44,
      "id": "I_kwDOJubJxM5sO1yK",
      "title": "Editorial: Remove repetitive text",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/44",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "arndt-s"
      ],
      "labels": [],
      "body": "Feedback from Brian Campbell:\r\n\r\nSection 2 repeats itself with the text  \"A client in trust domain A that needs to access a resource server in trust domain B requests an authorization grant from the authorization server for trust domain A via a token exchange. The client in trust domain A presents the received grant as an assertion to the authorization server in domain B in order to obtain an access token for the protected resource in domain B. The client in domain A may be a resource server, or it may be the authorization server itself.\" occurring twice.",
      "createdAt": "2023-07-21T13:38:52Z",
      "updatedAt": "2023-10-17T10:02:16Z",
      "closedAt": "2023-10-17T10:02:16Z",
      "comments": []
    },
    {
      "number": 45,
      "id": "I_kwDOJubJxM5sO2i1",
      "title": "Consider limiting token formats to JWT",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/45",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "bc-pi"
      ],
      "labels": [],
      "body": "Feedback from Brian Campbell\r\n\r\nConceptually having \"flexibility for authorization servers to change format and content\" sounds nice but I can't help but wonder if that flexibility is actually useful and if this document wouldn't be better served and more straightforward using just JWT authz grants from 7523 (rather than being abstract about using 7521 and the very brief mention of SAML w/out a 7522 ref).",
      "createdAt": "2023-07-21T13:40:57Z",
      "updatedAt": "2024-02-02T19:44:53Z",
      "closedAt": "2024-02-02T19:44:53Z",
      "comments": [
        {
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "body": "I agree that limiting the authorization grant format to JWT is useful. In fact you've almost already done that by adding the `aud` validation to the processing rules here: https://www.ietf.org/archive/id/draft-schwenkschuster-oauth-identity-chaining-00.html#section-2.5.2 ",
          "createdAt": "2023-11-21T16:54:02Z",
          "updatedAt": "2023-11-21T16:54:02Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "As discussed in the meeting with the editors and Aaron, we will make the use of JWT explicit.",
          "createdAt": "2023-12-07T14:17:12Z",
          "updatedAt": "2023-12-07T14:17:12Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "PR #72 would limit the authorization grant format to RFC7523 JWT",
          "createdAt": "2024-01-31T21:39:11Z",
          "updatedAt": "2024-01-31T21:39:36Z"
        }
      ]
    },
    {
      "number": 46,
      "id": "I_kwDOJubJxM5sO3KX",
      "title": "Replace cURL commands with \"on-the-wire\" examples",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/46",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Feedback from Brian Campbell\r\n\r\nSeeing curl commands in the examples is sort of unexpected. Typically these kinds of drafts try to show the \"on the wire\" HTTP message -something like this [https://datatracker.ietf.org/doc/html/rfc8693#figure-2] for example or this [https://www.rfc-editor.org/rfc/rfc7523#section-2.2] or [https://www.ietf.org/archive/id/draft-ietf-oauth-dpop-16.html#figure-7] etc",
      "createdAt": "2023-07-21T13:42:17Z",
      "updatedAt": "2023-10-17T09:59:22Z",
      "closedAt": "2023-10-17T09:59:22Z",
      "comments": []
    },
    {
      "number": 47,
      "id": "I_kwDOJubJxM5sO4Q9",
      "title": "Correct/Update Authorization Server Discovery",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/47",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "arndt-s"
      ],
      "labels": [],
      "body": "Feedback from Brian Campbell\r\n\r\nThere are a few places that mention using the WWW-Authenticate header a la RFC6750 to figure out the AS. But RFC6750 doesn't provide any AS info so that doesn't work. There's something along those lines being proposed in [https://datatracker.ietf.org/doc/draft-jones-oauth-resource-metadata/] that could get to AS info from RS info returned as a param of the WWW-Authenticate header but it's still just an individual draft currently.",
      "createdAt": "2023-07-21T13:45:20Z",
      "updatedAt": "2023-11-02T20:18:34Z",
      "closedAt": "2023-11-02T20:18:34Z",
      "comments": []
    },
    {
      "number": 48,
      "id": "I_kwDOJubJxM5sO5IN",
      "title": "Add correct reference for RFC 7523",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/48",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Feedback from Brian Campbell\r\n\r\nThe reference in the first sentence of [https://www.ietf.org/archive/id/draft-identity-chaining-00.html#name-request-2] would be 7523 rather than 7521 (I got rather confused reading that paragraph :-) ).",
      "createdAt": "2023-07-21T13:47:38Z",
      "updatedAt": "2023-10-17T09:53:16Z",
      "closedAt": "2023-10-17T09:53:16Z",
      "comments": []
    },
    {
      "number": 49,
      "id": "I_kwDOJubJxM5sO6Ly",
      "title": "Clarify requirements for \"aud\" claim",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/49",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "PieterKas"
      ],
      "labels": [],
      "body": "Feedback from Brian Campbell\r\n\r\nThis requirement for the audience [https://www.ietf.org/archive/id/draft-identity-chaining-00.html#section-2.5.2-2.1] is already a requirement of [https://www.rfc-editor.org/rfc/rfc7521#section-5.2] (3rd bullet) and also [https://www.rfc-editor.org/rfc/rfc7523#section-3] (also 3rd bullet). But the way it's listed here makes it sound like an additional thing. It might be worthwhile to use the bullet here to be more specific about the aud value (it's been a bit of an interop pain point w/ JWT client auth fwiw) and say that it has to be the token endpoint or AS issuer identifier.",
      "createdAt": "2023-07-21T13:50:17Z",
      "updatedAt": "2023-11-02T20:17:44Z",
      "closedAt": "2023-11-02T20:17:44Z",
      "comments": []
    },
    {
      "number": 50,
      "id": "I_kwDOJubJxM5sO6k2",
      "title": "Update Acknowledgements",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/50",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Add Brian Campbell to acknowledgements for his contributions prior to drafting the proposal as well as detailed feedback on the initial draft.",
      "createdAt": "2023-07-21T13:51:12Z",
      "updatedAt": "2023-10-06T16:26:33Z",
      "closedAt": "2023-10-06T16:26:33Z",
      "comments": []
    },
    {
      "number": 51,
      "id": "I_kwDOJubJxM5v6YsJ",
      "title": "RS A always sends token exchange request",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/51",
      "state": "CLOSED",
      "author": "kburgin3",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "arndt-s"
      ],
      "labels": [],
      "body": "In the \"Authorization sever acting as a client\" section, suggest having RS A make a token exchange request to AS A instead of a regular token request. ",
      "createdAt": "2023-09-01T14:53:26Z",
      "updatedAt": "2023-11-02T20:18:00Z",
      "closedAt": "2023-11-02T20:18:00Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@kburgin3 can you create a PR or this issue?\r\n",
          "createdAt": "2023-10-03T08:32:24Z",
          "updatedAt": "2023-10-03T08:32:24Z"
        },
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "Discussed with Pieter, will update flow and rename step A to `request or exchange token ..` - in the description RFC8693 is linked. ",
          "createdAt": "2023-10-17T09:44:33Z",
          "updatedAt": "2023-10-17T09:44:33Z"
        }
      ]
    },
    {
      "number": 60,
      "id": "I_kwDOJubJxM52IXsB",
      "title": "example response missing issued_token_type",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/60",
      "state": "CLOSED",
      "author": "bc-pi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "bc-pi"
      ],
      "labels": [],
      "body": "issued_token_type (a required parameter of a token exchange response https://www.rfc-editor.org/rfc/rfc8693#name-successful-response) is missing from the example response at https://www.ietf.org/archive/id/draft-schwenkschuster-oauth-identity-chaining-00.html#name-token-exchange-response ",
      "createdAt": "2023-11-07T17:48:57Z",
      "updatedAt": "2024-02-02T19:44:53Z",
      "closedAt": "2024-02-02T19:44:53Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@arndt-s can you prepare a PR with an updated example?",
          "createdAt": "2024-01-26T20:33:11Z",
          "updatedAt": "2024-01-26T20:33:11Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "example would be fixed by PR #72 ",
          "createdAt": "2024-01-31T21:38:18Z",
          "updatedAt": "2024-01-31T21:38:18Z"
        }
      ]
    },
    {
      "number": 61,
      "id": "I_kwDOJubJxM53fin4",
      "title": "authorization grant type can't be the same as the issued token type",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/61",
      "state": "CLOSED",
      "author": "aaronpk",
      "authorAssociation": "MEMBER",
      "assignees": [
        "bc-pi"
      ],
      "labels": [],
      "body": "[Section 2.4.3](https://www.ietf.org/archive/id/draft-schwenkschuster-oauth-identity-chaining-00.html#section-2.4.3) says this:\r\n\r\n> The issued_token_type parameter in the response indicates the type and SHOULD be passed into the assertion request.\r\n\r\nHowever, if the authorization grant is a JWT (which it always should be, but see #45 for details), then [RFC7523](https://www.rfc-editor.org/rfc/rfc7523#section-2.1) defines the grant type of the request to be:\r\n\r\n```\r\nurn:ietf:params:oauth:grant-type:jwt-bearer\r\n```\r\n\r\nThe other implication of this is that the only way to distinguish the type of JWT assertion is in the JWT itself, which can be done using the `typ` field in the JWT header.\r\n\r\n",
      "createdAt": "2023-11-21T16:59:58Z",
      "updatedAt": "2024-02-02T19:44:53Z",
      "closedAt": "2024-02-02T19:44:53Z",
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Per [RFC8693](https://www.rfc-editor.org/rfc/rfc8693#name-successful-response) `issued_token_type` is an \"identifier [...] for the representation of the issued security token\" and I think it's admittedly a bit odd but perfectly reasonable to use the URN of the grant type that the token is intended for as the value conveying the representation that token. \r\n\r\n",
          "createdAt": "2023-11-29T20:38:39Z",
          "updatedAt": "2023-11-29T20:38:39Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "With that said however, I do kinda think that'd it be better to limit to JWT authz grant only (a la #45) and not tie the issued_token_type to the grant type. ",
          "createdAt": "2023-11-30T20:28:03Z",
          "updatedAt": "2023-11-30T20:28:03Z"
        },
        {
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "body": "My point was more about the grant type of the request as described by RFC7523.\r\n\r\n> To use a Bearer JWT as an authorization grant, the client uses an\r\n   access token request as defined in [Section 4](https://www.rfc-editor.org/rfc/rfc7523#section-4) of the OAuth Assertion\r\n   Framework [[RFC7521](https://www.rfc-editor.org/rfc/rfc7521)] with the following specific parameter values and\r\n   encodings.\r\n\r\n  > The value of the \"grant_type\" is \"urn:ietf:params:oauth:grant-type:jwt-bearer\".\r\n\r\nSo if the request contains a JWT, then the grant type value has to be `urn:ietf:params:oauth:grant-type:jwt-bearer`. Which means according to Section 2.4.3 of this spec the issued_token_type \"SHOULD\" be `urn:ietf:params:oauth:grant-type:jwt-bearer`, which is silly. \r\n\r\nSo my proposal is to remove the \"and SHOULD be passed into the assertion request\" part, so that issued_token_type can be a value that makes sense, and use `urn:ietf:params:oauth:grant-type:jwt-bearer` as the grant type. As I said in the original comment, the implication is then that the JWT header itself would need to include something that indicates the type of JWT it is, otherwise all token exchange requests look the same.",
          "createdAt": "2024-01-12T00:18:41Z",
          "updatedAt": "2024-01-12T00:18:41Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I might argue that it's not actually silly but I won't b/c it'll be moot as PR #72 addresses this with the removal of the \"issued_token_type parameter in the response indicates the type and SHOULD be passed into the assertion request\" https://github.com/oauth-wg/oauth-identity-chaining/pull/72/files#diff-e5caa2dbf96b2e1e809b4a7c4197220c2a302ecd0b0d9c4a5c47968d6e8c94b7L171",
          "createdAt": "2024-01-31T21:43:54Z",
          "updatedAt": "2024-01-31T21:43:54Z"
        }
      ]
    },
    {
      "number": 66,
      "id": "I_kwDOJubJxM55DHGD",
      "title": "Clarify that draft is not limited to the use cases",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/66",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Reword/refine use cases and restructure text in a way that it is clear to a reader that the spec can be used for use cases other than the ones in the spec.",
      "createdAt": "2023-12-07T14:19:38Z",
      "updatedAt": "2024-02-16T09:19:34Z",
      "closedAt": "2024-02-16T09:19:34Z",
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Looks like PR #78 makes this clarification. ",
          "createdAt": "2024-02-15T15:09:10Z",
          "updatedAt": "2024-02-15T15:09:10Z"
        }
      ]
    },
    {
      "number": 67,
      "id": "I_kwDOJubJxM55DI5W",
      "title": "Change spec name to focus on Authz",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/67",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Change name to focus on authorization (e.g. cross-domain authorization). Purpose of renaming is to create clarity that this is a mechanism for cross domain authz and that identity flows with the authorization. Add text to make it clear how identity chaining is achieved as a result of using this spec (the idea that the identity is following the authorization).",
      "createdAt": "2023-12-07T14:23:30Z",
      "updatedAt": "2024-02-16T22:55:37Z",
      "closedAt": "2024-02-16T22:55:37Z",
      "comments": [
        {
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "body": "My suggestion: \"OAuth Cross-Domain Authorization Framework\"\r\n\r\nIt focuses on the cross-domain authorization aspect, and also makes it clear this is a framework that will need to be profiled to be implemented.",
          "createdAt": "2023-12-07T14:53:40Z",
          "updatedAt": "2023-12-07T14:53:40Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Some discussion has happened elsewhere (email and webex) with apparent consensus forming around \u201cOAuth Identity and Authorization Chaining Across Domains\u201d as the proposed name. ",
          "createdAt": "2024-02-02T21:21:48Z",
          "updatedAt": "2024-02-02T21:39:19Z"
        }
      ]
    },
    {
      "number": 68,
      "id": "I_kwDOJubJxM55DJxT",
      "title": "Add use case to the appendix",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/68",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "@aaronpk described an additional use case which should be added to the appendix. ",
      "createdAt": "2023-12-07T14:25:22Z",
      "updatedAt": "2024-12-06T14:37:24Z",
      "closedAt": "2024-12-06T14:37:23Z",
      "comments": []
    },
    {
      "number": 69,
      "id": "I_kwDOJubJxM55LLvW",
      "title": "Add Aaron Parecki to acknowledgements section",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/69",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Add Aaron Parecki to acknowledgements section",
      "createdAt": "2023-12-08T16:29:50Z",
      "updatedAt": "2024-02-02T20:20:00Z",
      "closedAt": "2024-02-02T20:20:00Z",
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "done w/ merge of #71 ",
          "createdAt": "2024-02-02T20:20:00Z",
          "updatedAt": "2024-02-02T20:20:00Z"
        }
      ]
    },
    {
      "number": 75,
      "id": "I_kwDOJubJxM5-ldyJ",
      "title": "Describe or give examples of what kinds of tokens a client would exchange",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/75",
      "state": "CLOSED",
      "author": "aaronpk",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Currently the text says \"its token\" without giving any guidance on where this token came from or what kind of token it is. (ID token? access token? refresh token?) While not being prescriptive about the type of token is useful to enable more use cases, there should at least be some clues about how this token was obtained in the first place.",
      "createdAt": "2024-02-07T19:44:36Z",
      "updatedAt": "2025-02-14T15:49:28Z",
      "closedAt": "2025-02-14T15:49:28Z",
      "comments": [
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "I agree that the text is not clear here.\r\n\r\nA few questions arise to me when thinking about it:\r\n- Does it make sense to limit the subject_token to access tokens? Are there reasons to allow id or refresh tokens?\r\n- Should we further specify the other parameters, in particular \"actor_token\" and \"actor_token_type\"? Allowing everyone to exchange access_tokens to an authorization_grant of another domain can be critical and I believe the spec would benefit of making the actor parameters required in this case.",
          "createdAt": "2024-02-16T11:34:15Z",
          "updatedAt": "2024-02-16T11:34:15Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@aaronpk and @bc-pi would there ever be a use case for using the refresh token? \r\n\r\nI think this is either the access or the ID token (what would be the use case for ID Tokens in this case and would it be an abuse of the ID Token if we allowed it)?\r\n\r\nThe other thing to clarify is whether this is the subject or actor token in the token exchange protocol. The subject token (per RFC rfc8693) is mandatory, but the way this is written suggest that it is the client's token (\"It's token\"), which raises the question if this is the actor token and if we need to make the actor token mandatory. \r\n\r\nIf the client is running without user interaction (batch job), it would need to submit the same token for both the subject token and the actor token. ",
          "createdAt": "2024-02-16T11:36:46Z",
          "updatedAt": "2024-02-16T11:37:07Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't think we should be prescriptive or restrictive about the kinds token(s) a client would exchange. Rather maybe just provide a bit more context and explanation about some of the situations and how the client might have come by the \"initial\" token(s).  ",
          "createdAt": "2024-02-16T22:19:52Z",
          "updatedAt": "2024-02-16T22:19:52Z"
        },
        {
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "body": "My use case involves ID tokens and SAML assertions. I can easily imagine a use case for refresh tokens (basically any time you would exchange an access token but the access token might be expired, e.g. long running tasks, etc). I don't think this spec should add any restrictions on token types, since the Token Exchange spec already provides the flexibility needed. My original comment was more that a reader would have no context for how an initial token would be obtained by reading the current text. (Also \"its token\" is slightly misleading because it might be a delegated token in which case who does the token actually belong to? the client or the user?)",
          "createdAt": "2024-02-16T22:52:00Z",
          "updatedAt": "2024-02-16T22:52:00Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree we don't need to be more prescriptive here and leave it to profiles to be specific about how certain tokens are handled. I suggest we close this issue. @aaronpk do you agree?",
          "createdAt": "2024-12-06T14:39:19Z",
          "updatedAt": "2024-12-06T14:39:19Z"
        },
        {
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "body": "I agree with Brian's comment earlier. We don't need to be prescriptive, but my initial comment was that there is no context for what the text is describing at that point in the document. Also I'd like to reiterate my comment above that \"its token\" isn't even accurate since the token doesn't necessarily belong to the client using it at this stage.",
          "createdAt": "2024-12-06T15:00:29Z",
          "updatedAt": "2024-12-06T15:01:25Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@aaronpk - I proposed some text - take a look and see if helps. If not, please suggest alternative text.",
          "createdAt": "2024-12-06T16:34:52Z",
          "updatedAt": "2024-12-06T16:34:52Z"
        }
      ]
    },
    {
      "number": 79,
      "id": "I_kwDOJubJxM5_dbrY",
      "title": "Should we allow identity chaining with DPoP tokens?",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/79",
      "state": "CLOSED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [
        "PieterKas"
      ],
      "labels": [],
      "body": "If the user's token is a sender constraint token \"DPoP\", can it be exchanged by the client to an authorization grant for another domain? Does the authorization server verify proof of possession?",
      "createdAt": "2024-02-16T11:36:39Z",
      "updatedAt": "2025-04-04T15:00:18Z",
      "closedAt": "2025-04-04T15:00:16Z",
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't think we should disallow it but I also I don't know what or how much we can or should say about it in the draft. Also DPoP isn't the only key-binding / proof-of-possession / sender constraining mechanism for OAuth tokens (there's also RFC8705 for MTLS, for example). All the sender constraining mechanisms can be tricky in the context of any kind of exchange. \r\n  \r\nIn the case that the client making the token exchange request is an RS that'd received a sender constrained access token on an inbound API call, I imagine it similar to how Introspection works with sender constrained tokens - the RS does the PoP validation locally but sends the token to the AS who does not verify proof of possession. \r\n\r\nDPoP (or MTLS FWIW) could reasonably be used to bind the access token returned from the JWT authz grant call. \r\n\r\nSome of the other cases are harder to nail down and/or not feasible due to sender-constrained being sender constrained. \r\n\r\nSorry, I'm not sure if any of the above rambling is helpful. But it's what I could come with. ",
          "createdAt": "2024-02-20T21:32:01Z",
          "updatedAt": "2024-02-20T21:32:01Z"
        },
        {
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'd like mTLS sender constrained tokens. Can we consider adding sender constraining mechanisms to the draft?",
          "createdAt": "2024-03-01T15:18:03Z",
          "updatedAt": "2024-03-01T15:18:03Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "some more related discussion in \"Add sender constraining mechanisms #86\" ",
          "createdAt": "2024-04-26T16:52:41Z",
          "updatedAt": "2024-04-26T16:52:41Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I a don't think we should disallow this. The constrained access token is being used for another purpose. I would also argue the constrain was introduced to prevent it from being replayed as an access token. In this case it is. being used for something different. I imagine it will also be impractical to require proof of the sender constraining as the key bound to the token is probably not be under control of the resource server. ",
          "createdAt": "2025-01-10T20:06:15Z",
          "updatedAt": "2025-01-10T20:06:15Z"
        },
        {
          "author": "martin-lindstrom",
          "authorAssociation": "NONE",
          "body": "The [Authorization server acting as client](https://www.ietf.org/archive/id/draft-ietf-oauth-identity-chaining-03.html#name-authorization-server-acting) example is a pretty appealing use case, where much of the inter-organization configuration and trust can be handled by the Authorization Servers in domain A and B, and the clients and resources servers can stay pretty \"simple\". However, what if the resource server in B requires DPoP?\nI saw a comment about the difficulties concerning using DPoP for this example in #86 but I haven't seen any further discussions about it.\n\nBefore people start inventing their own solutions to this, wouldn't it be a good idea to define a mechanism for including some sort of DPop-related info in the authorization grant JWT issued by AS A? ",
          "createdAt": "2025-02-24T14:56:07Z",
          "updatedAt": "2025-02-24T14:56:07Z"
        },
        {
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> The [Authorization server acting as client](https://www.ietf.org/archive/id/draft-ietf-oauth-identity-chaining-03.html#name-authorization-server-acting) example is a pretty appealing use case, where much of the inter-organization configuration and trust can be handled by the Authorization Servers in domain A and B, and the clients and resources servers can stay pretty \"simple\". However, what if the resource server in B requires DPoP? I saw a comment about the difficulties concerning using DPoP for this example in [#86](https://github.com/oauth-wg/oauth-identity-chaining/issues/86) but I haven't seen any further discussions about it.\n> \n> Before people start inventing their own solutions to this, wouldn't it be a good idea to define a mechanism for including some sort of DPop-related info in the authorization grant JWT issued by AS A?\n\nSpeaking for myself (other co-authors can reply if they disagree), defining a mechanism is left to implementations. If you would like to define such a mechanism, I suggest taking this to the list or creating a draft, maybe a profile of this document?",
          "createdAt": "2025-02-27T08:03:51Z",
          "updatedAt": "2025-02-27T08:03:51Z"
        },
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "@martin-lindstrom we spent a lot of time talking about this and while we see value in this there's plenty of work that needs to happen in order to standardize it in a way that it can be \"easily picked up and implemented\". I believe we could have done a better job keeping issues up to date with it, sorry about that.\n\nOur main reasons we don't define it as such in this document:\n- Delegated key binding: AS A would need to request access_token from AS B that is bound to the client, not AS A. Related to this, how would AS A present proof of possession to AS B if it doesn't have the key in it's possession?\n- We would need to specify the token exchange between client and AS A that results in the access_token from AS B and not in the assertion. This would be a 2nd profile of token exchange on top of the existing profile defined in this specification. I believe this would cause a lot of confusion.\n- Neither token exchange RFC8693  nor the assertion flow RFC7523 define PoP - something that we believe should be addressed more \"globally\" - not hidden behind ID chaining.\n\nWe decided that this document should rather be a \"framework\" and profiles of it can go into the details of deployment variations. We already have one going into a totally different deployment direction. As @kburgin3 mentioned, if you have need to define this we believe that this should be a dedicated profile of this document solving the unique challenges I described. ",
          "createdAt": "2025-02-27T09:04:18Z",
          "updatedAt": "2025-02-27T09:04:18Z"
        },
        {
          "author": "brockallen",
          "authorAssociation": "NONE",
          "body": "~I spoke to Kelley at OSW and promised I'd put my idea somewhere, just to add to the conversation (albeit late and likely already identified and discussed by others), so sorry if this is redundant.\nIn short it seems given the \"physics\" of mTLS it doesn't seem possible to support that as an approach where AS(A) is acting as the client to AS(B) and trying to obtain PoP access tokens. Given that, it seems fair to call that out in the document and not try to solve it.\nBut it does seem that DPoP is possible (in a variety of ways), so that could either be described in this document or left to an extension doc (I don't know which makes the most sense from a IETF procedure process).\nI know some approaches were floated for making DPoP work (*ahem* `tmb`), but one that I didn't hear (but again, doesn't mean it hasn't been identified/discussed elsewhere) was it seems that given that the params from AS(A) to AS(B) to the token endpoint are fairly well-known and expected values, then why can't the RS(A) provide that proof as part of its request to AS(A) when it needs the proxying behavior? IOW, RS(A) creates a DPoP proof token as part of the request to AS(A), but with all the values that AS(A) will be sending to AS(B). Then with this proof token, AS(A) can just pass it along in its request to AS(B). \nThis is different than the approach mentioned in the current document where RS(A) only provides a proof for the direct request to AS(A).\nMy thinking was that if RS(A), acting as the real client, knows all the details of AS(B) then it can create the proof as part of it's initial request to AS(A). But if it doesn't, or if AS(B) requires a DPoP nonce, then there could be an error response all the way back to RS(A) including the information it needs (e.g. the `htu`, and/or the `nonce`, and where `htm` is assumed to always be `POST`). So in this proxying architecture, some error response would need to be defined to identify the values needed to be provided in the proof token.\nI know just sending stuff to RS(A) to sign feels like maybe some attack vector, but the RS(A) trusts the AS(A), right? Also, what I've not thought about is there some additional detached signature needed with this idea (similar to the `ath`)?\nAlso, I know the back-and-forth perf aspects of this approach are not ideal, but if you're stuck in an architecture given your other constraints where you have to proxy, then you're already resigned to the extra hops. \nIs this idea just too far out there?~\n\nOk, I see there was an update at IETF122 on this, so that sounds like the best approach. Also, it sounds like there will be some effort along these lines from Justin's Deferred Key Binding proposal (which was a more serious version of the original half-joking `tmb` idea). ",
          "createdAt": "2025-03-14T11:16:23Z",
          "updatedAt": "2025-03-21T19:42:13Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks @brockallen for your thoughtful comment and input. I believe the best venue for continuing to explore this idea is in the discussions Justin Richer (@jricher) is leading in the OAuth working group (perhaps something to contribute to the upcoming interim)",
          "createdAt": "2025-04-04T15:00:16Z",
          "updatedAt": "2025-04-04T15:00:16Z"
        }
      ]
    },
    {
      "number": 82,
      "id": "I_kwDOJubJxM5_3cD7",
      "title": "relax recommendation against requested_token_type use",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/82",
      "state": "CLOSED",
      "author": "bc-pi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Placeholder issue noting that @aaronpk's use case utilizes `requested_token_type` while the the current text https://www.ietf.org/archive/id/draft-ietf-oauth-identity-chaining-01.html#section-2.3.1-1 has a `SHOULD NOT`.  With the recent change to limit token types to JWTs https://github.com/oauth-wg/oauth-identity-chaining/issues/45 that `SHOULD NOT` isn't as meaningful/useful. Suggestion (from me) is to remove mention/treatment of the parameter from 2.3.1 https://www.ietf.org/archive/id/draft-ietf-oauth-identity-chaining-01.html#name-token-exchange-request",
      "createdAt": "2024-02-20T20:42:27Z",
      "updatedAt": "2024-04-24T19:04:54Z",
      "closedAt": "2024-04-24T19:04:53Z",
      "comments": [
        {
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "body": "We discussed on the Feb 23 call and there was general agreement that removing the parameter is the right call, and won't have any negative consequences on implementations of this draft.",
          "createdAt": "2024-02-23T17:20:33Z",
          "updatedAt": "2024-02-23T17:20:33Z"
        }
      ]
    },
    {
      "number": 84,
      "id": "I_kwDOJubJxM6Ai2BR",
      "title": "How does the AS know it should generate a JWT Authorization Grant formatted token?",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/84",
      "state": "CLOSED",
      "author": "gffletch",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "In reading through section 2.3.1 it's unclear to me how the AS knows it should be generating a token for the purposes of chaining to a new domain other than the specification of the audience/resource. \n\nAre we sure that this is sufficient given the other profiles of token exchange that exist? Could there be cases where the AS is generating a token for the AS in domain B and the desired response token is NOT a JWT Authorization Grant formatted token?",
      "createdAt": "2024-02-27T13:37:29Z",
      "updatedAt": "2024-04-24T19:05:49Z",
      "closedAt": "2024-04-24T19:05:49Z",
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think audience/resource will be sufficient for the majority of cases. And the ([soon more allowed](https://github.com/oauth-wg/oauth-identity-chaining/pull/83)) requested_token_type can be used to differentiate, if needed. ",
          "createdAt": "2024-02-27T22:57:26Z",
          "updatedAt": "2024-02-27T23:40:56Z"
        },
        {
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "body": "We had the same problem with our implementation, and are using the `requested_token_type` parameter to indicate that this is a cross-domain authorization JWT instead of other uses of token exchange.",
          "createdAt": "2024-02-27T23:36:21Z",
          "updatedAt": "2024-02-27T23:36:21Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "https://github.com/oauth-wg/oauth-identity-chaining/pull/83 was merged  ",
          "createdAt": "2024-04-24T19:05:49Z",
          "updatedAt": "2024-04-24T19:05:49Z"
        }
      ]
    },
    {
      "number": 85,
      "id": "I_kwDOJubJxM6AnP_D",
      "title": "Recommended media type for JWT Authorization Grant",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/85",
      "state": "CLOSED",
      "author": "aaronpk",
      "authorAssociation": "MEMBER",
      "assignees": [
        "PieterKas"
      ],
      "labels": [],
      "body": "There should probably be a recommendation for a media type for the JWT Authorization Grant, because:\r\n\r\n* cross-JWT confusion\r\n* the token request `grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer` needs to know how to process the JWT authorization differently from other uses of JWT-Bearer\r\n\r\nRFC 7523 was published before the more recent recommendation of [explicit typing](https://datatracker.ietf.org/doc/html/rfc8725#name-use-explicit-typing)\r\n\r\nI don't think this draft needs to _define_ one, but it should at least recommend that an implementation uses one.",
      "createdAt": "2024-02-27T23:12:57Z",
      "updatedAt": "2025-02-27T09:51:46Z",
      "closedAt": "2025-02-27T09:51:46Z",
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In my own defense - RFC 7523 was published _several years_ before RFC8725...\r\n\r\nAnyway, such a recommendation (and maybe even definition of one) seems reasonable as long as it doesn't suggest or imply that plain vanilla RFC 7523 implementations/deployments (new or existing) can't function as-is or are problematic security-wise or otherwise somehow deficient. ",
          "createdAt": "2024-03-01T22:17:31Z",
          "updatedAt": "2024-03-01T22:17:45Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Following discussion with editors, we will add a sentence to suggest it should be done.",
          "createdAt": "2025-02-21T15:58:58Z",
          "updatedAt": "2025-02-21T15:58:58Z"
        }
      ]
    },
    {
      "number": 86,
      "id": "I_kwDOJubJxM6BV2kE",
      "title": "Add sender constraining mechanisms",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/86",
      "state": "CLOSED",
      "author": "kburgin3",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Add mTLS and DPoP",
      "createdAt": "2024-03-05T19:24:43Z",
      "updatedAt": "2025-02-14T15:48:38Z",
      "closedAt": "2025-02-14T15:48:35Z",
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "A rough sketch of things that likely need to be accounted for or a least considered in this effort:\r\n\r\n* checking the binding on inbound token of [Token Exchange](https://www.ietf.org/archive/id/draft-ietf-oauth-identity-chaining-01.html#name-token-exchange) request. No standard defined here. Might not even be feasible or make sense depending on deployment (i.e. the RS acting as the client doesn't have access to the bound key)\r\n* binding the token returned from Token Exchange. The request could be MTLS or have a DPoP header, which is kinda implied per standards. And the returned JWT could be bound with the respective `cnf` claim and method, which is maybe implied by standards but not explicitly written down anywhere (that I know of).\r\n* checking the binding on inbound token/assertion of the [Access Token Request](https://www.ietf.org/archive/id/draft-ietf-oauth-identity-chaining-01.html#name-access-token-request). The request could be MTLS or have a DPoP header, which is kinda implied per standards but kinda leaves much to the imagination, and checked against the `cnf` claim of the JWT authz grant. The presence of the `cnf` claim might be sufficient to say the thing is bound and suggest/require checking it (implementations I know about would just ignore it, however). But maybe a new grant type would make sense to clearly convey the intent (also using `urn:ietf:params:oauth:grant-type:jwt-bearer` for a non-bearer thing is awkward). \r\n* binding the resultant access token. The request could be MTLS or have a DPoP header and I think this is covered/implied by the existing specs to say that the issued access token should/could be bound a la [DPoP Access Token Request](https://www.rfc-editor.org/rfc/rfc9449.html#name-dpop-access-token-request) and [Mutual-TLS Client Certificate-Bound Access Tokens](https://www.rfc-editor.org/rfc/rfc8705.html#name-mutual-tls-client-certifica). \r\n\r\nThe [Authorization server acting as client](https://www.ietf.org/archive/id/draft-ietf-oauth-identity-chaining-01.html#name-authorization-server-acting) flips around nearly all of the pieces above to make them unworkable. I guess it'd need separate treatment with the definition of something like a proxied \"trust me\" this is the cnf I need in the final access token. IIRC Kelley had some prior work toward this end somewhere but I can't seem to find it at the moment. Or maybe sender constraining is just out of scope in the AS as client proxy case. \r\n\r\n\r\n",
          "createdAt": "2024-04-25T19:10:41Z",
          "updatedAt": "2024-04-25T19:10:41Z"
        },
        {
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Text around this added",
          "createdAt": "2025-02-14T15:48:35Z",
          "updatedAt": "2025-02-14T15:48:35Z"
        }
      ]
    },
    {
      "number": 88,
      "id": "I_kwDOJubJxM6BfNut",
      "title": "Figure 6 step naming misalignment (off-by-one error)",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/88",
      "state": "CLOSED",
      "author": "dhs-aws",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "bc-pi"
      ],
      "labels": [],
      "body": "Figure 6 in Appendix B.1 skips from step A to step C.  I believe a correct rendering of the diagram would takes steps C through G and translate them to steps B through F to correspond with the text.",
      "createdAt": "2024-03-06T21:18:16Z",
      "updatedAt": "2024-07-08T19:07:35Z",
      "closedAt": "2024-07-08T19:07:35Z",
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks Dean, I believe you are correct here. ",
          "createdAt": "2024-03-06T21:48:40Z",
          "updatedAt": "2024-03-06T21:48:40Z"
        }
      ]
    },
    {
      "number": 89,
      "id": "I_kwDOJubJxM6DTt3J",
      "title": "JWT Authorization Grant allows broadening the scope",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/89",
      "state": "CLOSED",
      "author": "obfuscoder",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I followed the presentation at the IETF 119 for this topic. The profile describes how an ID Token is used to get a JWT Authorization Grant and then to get an Access Token for that JWT Authorization Grant. The scope can be defined by the client when requesting the access token.\r\n\r\nAs the JWT Authorization Grant profile is designed to allow interop across several domains, each AS in the participating domain will support creating authorization grant JWTs as well as accepting authorization grant JWTs to issue access tokens.\r\n\r\nUsually a client receives an access token alongside the ID Token and the client can use Token Exchange to get additional access tokens with equal or narrowed down scope.\r\n\r\nThe ID Token does not contain any scope. So even if a client only received an Access Token with a specific narrow scope, the client could abuse this grant by asking AS of domain A for an authorization grant JWT based on the Id Token and then use this authz grant JWT at the AS of domain A again to obtain a new access token with arbitrary scope (up to what is allowed for the client as per policy).\r\n\r\nAlthough this could be prohibited by the AS not accepting authorization grant JWTs it issued itself, the client could request the authorization grant JWT from the AS of domain B with just a couple more steps.\r\n\r\nGranted, this may not be relevant for the enterprise environment the JWT authorization grant profile is meant for as the End-User is usually not asked for giving consent to the scope requested by clients and instead the allowed scope in defined by policies within the AS configs. However, I'd like to ask if this is something worth to consider.\r\n",
      "createdAt": "2024-03-22T17:33:36Z",
      "updatedAt": "2024-03-25T07:25:54Z",
      "closedAt": "2024-03-25T07:25:54Z",
      "comments": [
        {
          "author": "obfuscoder",
          "authorAssociation": "NONE",
          "body": "Just realized that the Identity Assertion Authz Grant profile has its own github issue tracker. Closing this one.",
          "createdAt": "2024-03-25T07:25:54Z",
          "updatedAt": "2024-03-25T07:25:54Z"
        }
      ]
    },
    {
      "number": 92,
      "id": "I_kwDOJubJxM6RI1ff",
      "title": "Single hop federation",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/92",
      "state": "CLOSED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [
        "arndt-s"
      ],
      "labels": [],
      "body": "Deployment may want to do federation in a single hop. Currently, the document describes a 2 hop federation (First get assertion grant, then present assertion to domain B).\r\n\r\nDo we have specific warnings, drawbacks, etc. for this use case? Do we want to describe it?\r\n\r\nJust writing down what comes into my head:\r\n\r\nDrawbacks\r\n- AS of domain A loses control \r\n- Domain B does not know if federation is intended\r\n- Presented assertion may have been stolen (if not key bound)\r\n\r\nHowever:\r\n- federation is more resilient (AS of domain A does not need to be available)\r\n- COGS of AS in Domain A can go down significantly (if federation is primary use case for example)\r\n- Privacy?! AS of domain A does not know what clients federate to",
      "createdAt": "2024-07-29T10:12:55Z",
      "updatedAt": "2025-04-04T14:57:35Z",
      "closedAt": "2025-04-04T14:57:33Z",
      "comments": [
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "Agreed that amongst the authors that this topic is out of scope at the moment and would bring more confusion into the work.",
          "createdAt": "2025-04-04T14:57:34Z",
          "updatedAt": "2025-04-04T14:57:34Z"
        }
      ]
    },
    {
      "number": 93,
      "id": "I_kwDOJubJxM6RvScj",
      "title": "Security consideration for id_chaining",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/93",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": ">* If the authorization server issues sender constrained tokens, the authorization server MUST include the \"cnf\" sub-claim from the \"chained_id\" claim from the issued JWT assertion.\r\n\r\nAdd security considerations for why the authorization server MUST include the \"cnf\" claim.",
      "createdAt": "2024-08-02T14:33:00Z",
      "updatedAt": "2024-12-06T14:48:22Z",
      "closedAt": "2024-12-06T14:48:22Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closing following IETF 121 discussions and removal of this sentence.",
          "createdAt": "2024-12-06T14:48:22Z",
          "updatedAt": "2024-12-06T14:48:22Z"
        }
      ]
    },
    {
      "number": 98,
      "id": "I_kwDOJubJxM6c7nBi",
      "title": "Security Considerations on Client authentication",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/98",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As discussed at IETF 121\r\n\r\nAdd security considerations outlining the importance of using client authentication when using the Access Token (sender constrained, or as bearer token) as Subject Token. Points to cover include:\r\n\r\n1. Implications of a stolen access token - mitigated by client authentication\r\n2. Limitations on preserving the binding (key is not under control of the entity requesting an assertion)",
      "createdAt": "2024-11-04T13:48:06Z",
      "updatedAt": "2025-04-04T14:58:04Z",
      "closedAt": "2025-04-04T14:58:02Z",
      "comments": [
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "PR has been merged.",
          "createdAt": "2025-04-04T14:58:02Z",
          "updatedAt": "2025-04-04T14:58:02Z"
        }
      ]
    },
    {
      "number": 99,
      "id": "I_kwDOJubJxM6c7obU",
      "title": "Using different keys for sender constrained tokens",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/99",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Add text, possibly as a security consideration, but also as part of the main text to make it clear the key of an OAuth client presenting a sender constrained token cannot be used for proof of possession by a resource server acting as a client when requesting an assertion from the authorisation server. Instead the resource server will use their own key to perform PoP and obtain an assertion with a requested_cnf claim.",
      "createdAt": "2024-11-04T13:50:30Z",
      "updatedAt": "2025-02-21T17:43:02Z",
      "closedAt": "2025-02-21T17:43:00Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "closed as we changed the use of requested_cnf",
          "createdAt": "2025-02-21T17:43:00Z",
          "updatedAt": "2025-02-21T17:43:00Z"
        }
      ]
    },
    {
      "number": 100,
      "id": "I_kwDOJubJxM6c7qFT",
      "title": "Clarify client terminology",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/100",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As Discussed at IETF 121, Introduce or clarify terminology to make it clear when we are referring to the original client that starts the OAuth flow vs the Resources Server or Authorisation Server acting as the client (e.g. initiating client, originating client, secondary client, ID chaining initiating client etc)",
      "createdAt": "2024-11-04T13:53:21Z",
      "updatedAt": "2025-02-27T09:51:33Z",
      "closedAt": "2025-02-27T09:51:33Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@arndt-s",
          "createdAt": "2024-12-06T16:44:07Z",
          "updatedAt": "2024-12-06T16:44:07Z"
        }
      ]
    },
    {
      "number": 101,
      "id": "I_kwDOJubJxM6c7sEk",
      "title": "Remove need for additional metadata",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/101",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As discussed at IETF 121, the editors concluded that there is no need for additional metadata and that the trust decisions (e.g. expect the authorization server to always bind tokens) is a policy and configuration issue that should be handled outside the spec.",
      "createdAt": "2024-11-04T13:56:12Z",
      "updatedAt": "2024-12-06T14:50:20Z",
      "closedAt": "2024-12-06T14:50:20Z",
      "comments": []
    },
    {
      "number": 103,
      "id": "I_kwDOJubJxM6dNsr_",
      "title": "Remove references to Federation ",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/103",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Should we remove references to federation an instead refer to access ing resources across trust domains? \r\n\r\nPoint of View: Federation is a bigger topic and I think we are really just looking at the mechanisms for cross domain access and authorisation chaining.",
      "createdAt": "2024-11-06T10:10:39Z",
      "updatedAt": "2025-01-09T14:24:52Z",
      "closedAt": "2025-01-09T14:24:52Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Incorrectly closed",
          "createdAt": "2024-12-06T14:45:36Z",
          "updatedAt": "2024-12-06T14:48:12Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Incorrectly closed",
          "createdAt": "2024-12-06T14:47:57Z",
          "updatedAt": "2024-12-06T14:47:57Z"
        }
      ]
    },
    {
      "number": 104,
      "id": "I_kwDOJubJxM6dNwD-",
      "title": "Figure 1 Decription update",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/104",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Step F:\r\n\r\nThe diagram show the client accessing the resource in domain B. Update langugage to say:\r\n\r\nThe client use the access token to access the protected resource in Domain B.",
      "createdAt": "2024-11-06T10:16:56Z",
      "updatedAt": "2025-02-13T15:29:14Z",
      "closedAt": "2025-02-13T15:29:14Z",
      "comments": []
    },
    {
      "number": 105,
      "id": "I_kwDOJubJxM6dN4Rb",
      "title": "Do we need additional clarification on re-using sender constraining mechanisms?",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/105",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Processing rule 2.3.2 requires PoP - how should PoP be done for token exchange? Is this defined in MTLS or DPoP (I am unable to find a specific reference in DPoP on how this should be used with Token Exchange specifically).",
      "createdAt": "2024-11-06T10:29:06Z",
      "updatedAt": "2024-12-06T15:00:31Z",
      "closedAt": "2024-12-06T15:00:31Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closing based on discussions at IETF 121 where this was removed from the text.",
          "createdAt": "2024-12-06T15:00:31Z",
          "updatedAt": "2024-12-06T15:00:31Z"
        }
      ]
    },
    {
      "number": 106,
      "id": "I_kwDOJubJxM6dN_WY",
      "title": "Confirmation key transfer",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/106",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "If we choose to keep this section in this part off the spec, should we add more clarification on why the \"requested_cnf\" claim may have to be included in the assertion grant (e.g. make it clear the purpose of this claim is allow the Authorization Server in Domain B to bind the key to the requested_cnf claim)?  \r\n\r\n",
      "createdAt": "2024-11-06T10:38:37Z",
      "updatedAt": "2024-12-06T16:54:00Z",
      "closedAt": "2024-12-06T16:53:59Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closed following discussions at IETF 121 to remove requested_cnf.",
          "createdAt": "2024-12-06T16:53:59Z",
          "updatedAt": "2024-12-06T16:53:59Z"
        }
      ]
    },
    {
      "number": 107,
      "id": "I_kwDOJubJxM6dOLLJ",
      "title": "Editorial Changes Requested",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/107",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Section 2.1\r\nDelete (there is not enough context at this point for the reader to understand why the examples are being described here):  In one example, the resource server acts as the client and in the other, the authorization server acts as the client.\r\n\r\nSection 2.4.2\r\nFrom: If the assertion contains a requested_cnf claim and any other way of proof of possession has been supplied by the caller the correspond information MUST be equal.\r\n\r\nTo: If the assertion contains a requested_cnf claim and any other way of proof of possession has been supplied by the caller the corresponding information MUST be equal.",
      "createdAt": "2024-11-06T10:51:48Z",
      "updatedAt": "2025-02-21T17:42:02Z",
      "closedAt": "2025-02-21T17:42:02Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Editorial clarifications for Section 2.4.2 nbc longer needed following IETF 121.",
          "createdAt": "2024-12-06T17:32:59Z",
          "updatedAt": "2024-12-06T17:32:59Z"
        }
      ]
    },
    {
      "number": 108,
      "id": "I_kwDOJubJxM6dOOR8",
      "title": "How would SD-JWT be used in claims transcription",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/108",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "PieterKas"
      ],
      "labels": [],
      "body": "The claims transcription section suggest that SD-JWT can be used for selective disclosure, but does not provide additional information nohow to combine this draft with something like SD-JWT. Do we need to provide more information on how this could be done (e.g. would the SD-JWT be requested using the assertion grant)?",
      "createdAt": "2024-11-06T10:57:01Z",
      "updatedAt": "2025-01-10T20:00:05Z",
      "closedAt": "2025-01-10T20:00:05Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@bc-pi @kburgin3 @arndt-s although I agree that SD-JWT could be used, it is not clear to me how that would be achieved in the context of the identity chaining draft. I am worried that this may be quite a bit of scope expansion if we try to explain how it gets done, and not altogether certain we need it as a part of a \"basic framework\". Perhaps if someone feels they need to support SD-JWTs with identity chaining, they should create aa profile or extension.",
          "createdAt": "2024-12-06T17:43:10Z",
          "updatedAt": "2024-12-06T17:43:10Z"
        },
        {
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I agree we do not need to include text around SD-JWT and rather leave it to a profile or extension.",
          "createdAt": "2024-12-06T17:50:58Z",
          "updatedAt": "2024-12-06T17:50:58Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "After discussion amongst editors, it was decide to remove this reference as the underlying specifications for assertion grant is scoped to JWT and using SD-JWTs for access tokens is undefined, and also incompatible with the idea of opaque tokens since clients are not meant to be inspecting or selectively disclosing them.",
          "createdAt": "2025-01-10T15:57:10Z",
          "updatedAt": "2025-01-10T15:57:10Z"
        }
      ]
    },
    {
      "number": 109,
      "id": "I_kwDOJubJxM6dOPiP",
      "title": "Controlling Scope",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/109",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Which authorisation server is responsible for verifying that scopes do not exceed the privilege over that in the subject_token? Is that the authorization server in domain A only?",
      "createdAt": "2024-11-06T10:59:11Z",
      "updatedAt": "2024-12-06T18:45:06Z",
      "closedAt": "2024-12-06T18:45:06Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closing given this sentence in the current draft provides clarity that both servers have a responsibility to ensure privelage is not increased:\r\n\r\n\"Authorization servers MAY transcribe claims when either producing JWT authorization grants in the token exchange flow or access tokens in the assertion flow.\"",
          "createdAt": "2024-12-06T18:44:56Z",
          "updatedAt": "2024-12-06T18:44:56Z"
        }
      ]
    },
    {
      "number": 110,
      "id": "I_kwDOJubJxM6dOQ2Y",
      "title": "Client Authentication Security Considerations",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/110",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Expand client authentication security considerations to provide rationale for MUST use when a bound subjecct_token is presented.",
      "createdAt": "2024-11-06T11:01:44Z",
      "updatedAt": "2025-02-21T17:41:35Z",
      "closedAt": "2025-02-21T17:41:33Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@kburgin3 - I am keeping this issue open so that we can move this to an appropriate section in the delegated key binding spec (or section) depending which way things go in the working group meeting.",
          "createdAt": "2024-12-06T18:46:34Z",
          "updatedAt": "2024-12-06T18:46:34Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@kburgin3 I think we can close this issue. ",
          "createdAt": "2025-02-21T17:41:33Z",
          "updatedAt": "2025-02-21T17:41:33Z"
        }
      ]
    },
    {
      "number": 111,
      "id": "I_kwDOJubJxM6eTBWh",
      "title": "Required `requested_token_type` parameter",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/111",
      "state": "OPEN",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [
        "arndt-s"
      ],
      "labels": [],
      "body": "Issue to track email sent to the authors\r\n\r\n> Hello All,\r\nI would like to propose below suggestion for  https://datatracker.ietf.org/doc/html/draft-ietf-oauth-identity-chaining\r\nSection 2.3.1 Token Exchange Request\r\nAs per my understanding the Token exchange request in this proposed RFC will always expect JWT token (urn:ietf:params:oauth:token-type:jwt) as clearly mentioned in the \u2018section 2.3.4 Example\u2019 with Figure 3: Token exchange response with claim \u2018issued_token_type\u2019 and also mentioned in section 2.4.1 Access Token Request (where only JWT token/assertion is sent to Authorization Server in Domain B as Authorization grant) .\r\nHence my suggestion is to enforce it in the Token exchange request itself (as REQUIRED) parameter by using the \u2018requested_token_type\u2019 parameter of OAuth 2.0 Token Exchange RFC 8693 section 2.1 with value \u2018urn:ietf:params:oauth:token-type:jwt\u2019 as per section 3 of RFC 8693 (OAuth 2.0 Token Exchange). This could prevent the Authorization server in Domain A to respond with another other type of tokens/assertions (like access_token , refresh_token , id_token , saml1 , saml2 as other possible values as per section 3 of RFC 8693 OAuth 2.0 Token Exchange) by mistake or other reasons, which could break this (draft) specification inadvertently.\r\nBest Regards,\r\nRandip Malakar\r\nSTMicroelectronics",
      "createdAt": "2024-11-13T14:54:38Z",
      "updatedAt": "2025-04-25T15:07:55Z",
      "closedAt": null,
      "comments": [
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "> Thank you for your email Randip! \r\nI agree to talk more about the requested_token_type parameter of the token exchange request. I personally don't see a problem setting it as required, but will my co-authors chime in if they see something I don't.\r\nRegarding the value, yes, \"urn:ietf:params:oauth:token-type:jwt\" seems the one at hand. Personally, I would also like to discuss to introduce a new type here to be able to differentiate ID chaining from other token exchange use cases on the authorization server. For example something like \"urn:ietf:params:oauth:token-type:assertion+jwt\"?\r\nWhat do you think? (@randip and co-authors)\r\n-Arndt",
          "createdAt": "2024-11-13T14:55:13Z",
          "updatedAt": "2024-11-13T14:55:52Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think making the requested_token_type REQUIRED makes sense (we already restrict it to JWT in any event).\r\n\r\nAlthough JWT is pretty generic (access and ID tokens can be JWTs as well, but they do have their own identifiers), restricting it further may cause adoption issues for existing token Exchange implementations, who do not support a new type like \"urn:ietf:params:oauth:token-type:assertion+jwt\".\r\n\r\nLooking at section 2 of RFC 7523 (https://datatracker.ietf.org/doc/html/rfc7523#section-2.1), it does define a \"urn:ietf:params:oauth:grant-type:jwt-bearer\", which we could possibly use.\r\n\r\n@bc-pi would love your thoughts on this.",
          "createdAt": "2024-12-06T19:05:20Z",
          "updatedAt": "2024-12-06T19:05:20Z"
        },
        {
          "author": "randipmalakar",
          "authorAssociation": "NONE",
          "body": "> I think making the requested_token_type REQUIRED makes sense (we already restrict it to JWT in any event).\r\n> \r\n> Although JWT is pretty generic (access and ID tokens can be JWTs as well, but they do have their own identifiers), restricting it further may cause adoption issues for existing token Exchange implementations, who do not support a new type like \"urn:ietf:params:oauth:token-type:assertion+jwt\".\r\n> \r\n> Looking at section 2 of RFC 7523 (https://datatracker.ietf.org/doc/html/rfc7523#section-2.1), it does define a \"urn:ietf:params:oauth:grant-type:jwt-bearer\", which we could possibly use.\r\n> \r\n> @bc-pi would love your thoughts on this.\r\n\r\nDear @PieterKas Just a feedback on your proposal (unless it's a typo or a copy/paste error),  my understanding is that \"urn:ietf:params:oauth:grant-type:jwt-bearer\" is defined to be used for grant type and in Token exchange request (in the proposed identity-chaining flow) we would use the grant type \"urn:ietf:params:oauth:grant-type:token-exchange\" and if so, we are left to use \"urn:ietf:params:oauth:token-type:jwt\" in requested_token_type parameter (unless we define a new token type like \"urn:ietf:params:oauth:token-type:assertion+jwt\" )\r\n",
          "createdAt": "2024-12-10T14:02:08Z",
          "updatedAt": "2024-12-10T14:02:08Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Good catch @randipmalakar. I was looking at RFC 7523 to see if a token type was defined there that might be more specific that we can use, but you are right, it's a grant type, not a token type. \r\n\r\nReading a bit on, there is section 8 which defines urn:ietf:params:oauth:client-assertion-type:jwt-bearer - not a token type, but to be used when presenting the assertion https://datatracker.ietf.org/doc/html/rfc7523#section-8.2\r\n\r\nSo, it may well be that our best option here is urn:ietf:params:oauth:token-type:jwt unless we define a new token type. Immediate pros that come to mind is it would be more specific and less overloaded. The con would be that it is a new token type and would delay or impede adoption. I would like to hear from others on whether urn:ietf:params:oauth:token-type:jwt is a sufficient restriction, or if we need to be more specific. ",
          "createdAt": "2024-12-10T14:35:31Z",
          "updatedAt": "2024-12-10T14:59:54Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "requested_token_type can be used now but making it required is IMHO a non starter ",
          "createdAt": "2024-12-19T17:05:40Z",
          "updatedAt": "2024-12-19T17:05:40Z"
        }
      ]
    },
    {
      "number": 120,
      "id": "I_kwDOJubJxM6ij78O",
      "title": "OAuth client acting as a client",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/120",
      "state": "OPEN",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [
        "arndt-s"
      ],
      "labels": [],
      "body": "@PieterKas mentioned that it may just be a non-defined OAuth client, not a resource server and not an authorization server. While the abstract flow stays the same we should maybe mention this somewhere in the text as a possible deployment.",
      "createdAt": "2024-12-09T15:00:08Z",
      "updatedAt": "2025-04-25T15:07:37Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 122,
      "id": "I_kwDOJubJxM6jcbjk",
      "title": "Review usage of \"one domain\" and \"another domain\"",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/122",
      "state": "OPEN",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "PieterKas"
      ],
      "labels": [],
      "body": "Editorial review on the use of language of \"one domain\" and \"another domain\" and replacing it with \"Domain A\" and \"Domain B\" for clarity and consistency.",
      "createdAt": "2024-12-16T11:37:33Z",
      "updatedAt": "2025-04-25T14:35:14Z",
      "closedAt": null,
      "comments": [
        {
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Editorial review on the use of language of \"one domain\" and \"another domain\" and replacing it with \"Domain A\" and \"Domain B\" for clarity and consistency.\r\n\r\nI'm in favor of this",
          "createdAt": "2025-01-06T15:39:30Z",
          "updatedAt": "2025-01-06T15:39:30Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I will prepare a PR :)",
          "createdAt": "2025-01-06T17:04:30Z",
          "updatedAt": "2025-01-06T17:04:30Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Also see PR #138 ",
          "createdAt": "2025-02-14T14:34:27Z",
          "updatedAt": "2025-02-14T14:34:27Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Main text has been updated - separate PR for appendixes needed.",
          "createdAt": "2025-02-27T09:51:06Z",
          "updatedAt": "2025-02-27T09:51:06Z"
        }
      ]
    },
    {
      "number": 125,
      "id": "I_kwDOJubJxM6luznN",
      "title": "Add sender constraining of tokens to the security considerations",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/125",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "PieterKas"
      ],
      "labels": [],
      "body": "Narrowly describe the use of mTLS and DpoP to sender constrain tokens requested by the client.",
      "createdAt": "2025-01-10T15:58:17Z",
      "updatedAt": "2025-02-13T15:28:15Z",
      "closedAt": "2025-02-13T15:28:13Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Addressed in issue #132 ",
          "createdAt": "2025-02-13T15:28:13Z",
          "updatedAt": "2025-02-13T15:28:13Z"
        }
      ]
    },
    {
      "number": 126,
      "id": "I_kwDOJubJxM6lu1OO",
      "title": "Privacy considerations",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/126",
      "state": "OPEN",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Review draft for privacy considerations and suggest alternative text or an additional section to aggregate privacy considerations - @gffletch\r\n",
      "createdAt": "2025-01-10T16:00:48Z",
      "updatedAt": "2025-01-10T16:02:34Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 130,
      "id": "I_kwDOJubJxM6neYFC",
      "title": "Add security consideration on refresh tokens?",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/130",
      "state": "OPEN",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "arndt-s"
      ],
      "labels": [],
      "body": "Based on discussion with Brian - should we give guidance on refresh tokens?\n\nWe should only add anything if there is new information. Currently it is not clear that we should. RFC 7521 already defines this. \n\n\"Implementation of this specification should treat refresh tokens in accordance with RFC 7521\"",
      "createdAt": "2025-01-24T15:44:00Z",
      "updatedAt": "2025-04-25T15:06:48Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 131,
      "id": "I_kwDOJubJxM6neb5c",
      "title": "Security Considerations",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/131",
      "state": "OPEN",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "PieterKas"
      ],
      "labels": [],
      "body": "Should we add language that the assertion is not constrained and should be protected. \n\nPoint out that this is a risk if no client authentication.\n\nAaron addresses it in his profile (client_id is included as a claim in the assertion claim). ",
      "createdAt": "2025-01-24T15:51:40Z",
      "updatedAt": "2025-04-25T14:30:13Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 136,
      "id": "I_kwDOJubJxM6qGYE2",
      "title": "Simplify text in section on JWT Authorization Grant",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/136",
      "state": "OPEN",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "kburgin3"
      ],
      "labels": [],
      "body": "## JWT Authorization Grant\n\nThe client presents the JWT authorization grant it received from the authorization server in trust domain A as an authorization grant to the authorization server in trust domain B to obtain an access token for a resource server in trust domain B. The authorization grant is presented as defined inthe JWT Profile for OAuth 2.0 Client Authentication and Authorization Grants {{RFC7523}}.\n\n### Access Token Request\n\nThe authorization grant is a JWT bearer token, which the client in trust domain A uses to request an access token from the authorization server in trust domain B as described in the JWT Profile for OAuth 2.0 Client Authentication and Authorization Grants {{RFC7523}}. For the purpose of this specification the following descriptions apply:",
      "createdAt": "2025-02-14T13:58:24Z",
      "updatedAt": "2025-04-25T14:54:41Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 137,
      "id": "I_kwDOJubJxM6qGgJj",
      "title": "Claims transcription",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/137",
      "state": "OPEN",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "kburgin3"
      ],
      "labels": [],
      "body": "Consider re-workding and providing motivation for why claims transcription may be required.\n\n1. Should reference be made tot he different trust domains (for consistency)\n2. Should examples or reasons/use cases be provided to explain what this may be required.",
      "createdAt": "2025-02-14T14:12:49Z",
      "updatedAt": "2025-04-25T14:54:07Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 139,
      "id": "I_kwDOJubJxM6qHipS",
      "title": "Updates to reflect changes to RFC7523 (jwt_privatekey attack)",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/139",
      "state": "OPEN",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Remove reference to token endpoint in JWT authorization grant section to protect against malicious authorization servers (see https://github.com/selfissued/draft-jones-oauth-rfc7523bis )",
      "createdAt": "2025-02-14T15:57:08Z",
      "updatedAt": "2025-04-21T03:32:05Z",
      "closedAt": null,
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "let's be somewhat restrained in what is applied in this context and when. Some further refs:\n\nhttps://github.com/selfissued/draft-jones-oauth-rfc7523bis/issues/5\n\nhttps://mailarchive.ietf.org/arch/msg/oauth/rZBbsr3TXkgK5bCrxRpdiRv2QVU/ \n\nhttps://mailarchive.ietf.org/arch/msg/oauth/v8wte0UT0-Is4DNEnTSFRNOReKs/\n\nhttps://mailarchive.ietf.org/arch/msg/oauth/Zxf3rV07zut1Ix2KBih1jlcYLkU/\n\n",
          "createdAt": "2025-02-21T13:07:21Z",
          "updatedAt": "2025-02-21T13:07:21Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks Brian. \n\nHere is the text we already have: \n\n\"The \"aud\" claim included in the returned JWT authorization grant MAY identify multiple authorization servers, provided that trust relationships exist with them (e.g. through federation). It is RECOMMENDED that the \"aud\" claim is restricted to a single authorization server in trust domain B to prevent an authorization server from presenting the client's authorization grant to an authorization server in a different trust domain. For example, this will prevent the authorization server in trust domain B from presenting the authorization grant it received from the client in trust domain A to the authorization server for trust domain C.\"\n\nBased on what I understand of the attack (i.e. a compromised or malicious AS gets hold of a JWT that includes an aud value that is not intended for it and then replays it to another AS - this may be a gross oversimplification), we already try to prevent that with the current text as we already caution against having multiple \"aud\" values, to avoid something somewhat equivalent to the attack that has lead to the RFC7523-bis proposal. We don't say anything about it being restricted to the issuer identifier of the Authorisation server though.\n\nKeeping with the spirit of lesss is more, perhaps the following approach is appropriate:\n\nIf RFC 7523bis gets adopted, we may just remove this text completely and say \"do what RFC7523-bis does\". If it does not get adopted, I think the current text pushes implementors to have a strong preference for a single aud value in the authorization grant while keeping backwarrds compatibility.\n\n",
          "createdAt": "2025-02-21T13:59:16Z",
          "updatedAt": "2025-02-21T13:59:16Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There's also https://www.ietf.org/archive/id/draft-ietf-oauth-identity-chaining-03.html#section-2.4.2 with some treatment of aud just for posterity \n\n> The \"aud\" claim MUST identify the Authorization Server as a valid intended audience of the assertion using either the token endpoint as described Section 3 [[RFC7523](https://www.ietf.org/archive/id/draft-ietf-oauth-identity-chaining-03.html#RFC7523)] or the issuer identifier as defined in Section 2 of [[RFC8414](https://www.ietf.org/archive/id/draft-ietf-oauth-identity-chaining-03.html#RFC8414)].",
          "createdAt": "2025-02-21T14:46:08Z",
          "updatedAt": "2025-02-21T14:46:08Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks Brain - so the additional restriction on that text would be that the token endpoint would be removed as a valid \"aud\" claim?",
          "createdAt": "2025-02-21T15:00:46Z",
          "updatedAt": "2025-02-21T15:00:46Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Following conversation between editors, we concluded that we will defer taking action on this issue until there was an opportunity to further clarify the relevance of the attack or necessity of the mitigations.",
          "createdAt": "2025-02-21T15:48:22Z",
          "updatedAt": "2025-02-21T15:48:22Z"
        },
        {
          "author": "kook125125",
          "authorAssociation": "NONE",
          "body": "mti",
          "createdAt": "2025-04-21T03:32:04Z",
          "updatedAt": "2025-04-21T03:32:04Z"
        }
      ]
    },
    {
      "number": 143,
      "id": "I_kwDOJubJxM6wrodP",
      "title": "Introduction text clarity",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/143",
      "state": "CLOSED",
      "author": "dhs-BI",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "PieterKas"
      ],
      "labels": [],
      "body": "At IETF122, @bc-pi described the draft as describing patterns based on RFCs 7523 and 8693 to provide best practices and bring clarity to the implementation of the pattern.  I recommend that a statement is included in the introduction to provide this context to the document.  Currently, the intro contains references to these two RFCs, but no clear statement that the document is designed to bring clarity to the recommended pattern.\n",
      "createdAt": "2025-04-01T18:13:59Z",
      "updatedAt": "2025-04-25T18:17:04Z",
      "closedAt": "2025-04-25T18:17:04Z",
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "story checks out ",
          "createdAt": "2025-04-23T11:33:51Z",
          "updatedAt": "2025-04-23T11:33:51Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Prepared a PR: https://github.com/oauth-wg/oauth-identity-chaining/pulls\n",
          "createdAt": "2025-04-24T11:54:05Z",
          "updatedAt": "2025-04-24T11:54:05Z"
        }
      ]
    },
    {
      "number": 146,
      "id": "I_kwDOJubJxM6xLnwT",
      "title": "Improve examples in the appendix",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/146",
      "state": "OPEN",
      "author": "aaronpk",
      "authorAssociation": "MEMBER",
      "assignees": [
        "aaronpk"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2025-04-04T14:47:43Z",
      "updatedAt": "2025-04-04T14:47:43Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 147,
      "id": "I_kwDOJubJxM6zi5GU",
      "title": "Authorization server metadata to enable discovery of grant/token type",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/issues/147",
      "state": "OPEN",
      "author": "aaronpk",
      "authorAssociation": "MEMBER",
      "assignees": [
        "aaronpk"
      ],
      "labels": [],
      "body": "Please refer to this issue for the full context: https://github.com/aaronpk/draft-parecki-oauth-identity-assertion-authz-grant/issues/16\n\nShould this specification define Authorization Server Metadata for this purpose, or should it be left to profiles like the Identity Assertion Authorization Grant?",
      "createdAt": "2025-04-22T22:30:48Z",
      "updatedAt": "2025-04-25T14:50:49Z",
      "closedAt": null,
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@aaronpk will take the issue.\n\nConclusion from discussion with editors is that the registry and concepts are defined in identity chaining draft and specific values defined in the profiles.\n\nBrian's feedback is that it should be scoped narrowly to these use cases.\n\nSuggests additional wording that lack of a value does not mean it is not supported.",
          "createdAt": "2025-04-25T14:47:49Z",
          "updatedAt": "2025-04-25T14:50:48Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOJubJxM5THMPs",
      "title": "Add github action",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/1",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Adds github action that deploys rendered html to github pages.",
      "createdAt": "2023-06-15T15:51:28Z",
      "updatedAt": "2023-06-15T15:52:43Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "1797c8aaf08abb27a94f580cd54b3585eaacf166",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "add_gh_action",
      "headRefOid": "2f1d51f0c6e58a30c4c8bfbdc5162e855b7a4d0d",
      "closedAt": "2023-06-15T15:52:38Z",
      "mergedAt": "2023-06-15T15:52:38Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "e23e3308b096f8a6db4e9b353d880a690ace7ad3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOJubJxM5TdQ0t",
      "title": "Fix appendix list not rendered correctly",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/2",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-20T16:36:46Z",
      "updatedAt": "2023-06-20T16:37:49Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "e23e3308b096f8a6db4e9b353d880a690ace7ad3",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "fix/appendix-list-not-rendered",
      "headRefOid": "dd32a13e0634bc7baf4045fe17c18216b74b2355",
      "closedAt": "2023-06-20T16:37:48Z",
      "mergedAt": "2023-06-20T16:37:48Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "ab13dd93a2ed645abe6b32a5f8d75a5e35aa0864"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDOJubJxM5TdVBX",
      "title": "Small corrections",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/3",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "- `subject_token` parameter removed from token exchange request section as this is already specified in RFC8693\r\n- Resource/audience section merged into request section.\r\n- added more author details",
      "createdAt": "2023-06-20T16:51:25Z",
      "updatedAt": "2023-06-20T16:51:55Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "ab13dd93a2ed645abe6b32a5f8d75a5e35aa0864",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndts/small-corrections",
      "headRefOid": "756aaa9f72147b43bed3a52e6b8720770790562b",
      "closedAt": "2023-06-20T16:51:54Z",
      "mergedAt": "2023-06-20T16:51:54Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "2ddac6d063b55a7375b48c9cbc96bdb20bd459dc"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 4,
      "id": "PR_kwDOJubJxM5TqbJG",
      "title": "Updates for abstract, introduction and overview.",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/4",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Editorial suggestion for abstract, introduction and overview sections.",
      "createdAt": "2023-06-22T14:23:13Z",
      "updatedAt": "2023-06-23T10:15:32Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "2ddac6d063b55a7375b48c9cbc96bdb20bd459dc",
      "headRepository": "PieterKas/ietf-identity-chaining",
      "headRefName": "patch-1",
      "headRefOid": "a1cd2ae16d24766f7fc9b03d462b93379c98a951",
      "closedAt": "2023-06-23T10:15:31Z",
      "mergedAt": "2023-06-23T10:15:31Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "c8a4a8d7ce13148c8950487ffbe9d5cf84dc4698"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5ZGee7",
          "commit": {
            "abbreviatedOid": "a1cd2ae"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-23T10:15:01Z",
          "updatedAt": "2023-06-23T10:15:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOJubJxM5Tqb5E",
      "title": "Minor edits to diagram",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/5",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-22T14:25:09Z",
      "updatedAt": "2023-06-23T10:26:14Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "2ddac6d063b55a7375b48c9cbc96bdb20bd459dc",
      "headRepository": "PieterKas/ietf-identity-chaining",
      "headRefName": "patch-2",
      "headRefOid": "fc0306446e5a976484edc7777e31d9cdf4a9c689",
      "closedAt": "2023-06-23T10:26:14Z",
      "mergedAt": "2023-06-23T10:26:14Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "6ed278358d16375aebe340e469bc26229032b098"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5ZGiJ6",
          "commit": {
            "abbreviatedOid": "fc03064"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-23T10:26:08Z",
          "updatedAt": "2023-06-23T10:26:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOJubJxM5Tqcz6",
      "title": "Edits to diagram descriptions",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/6",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Edits to diagram descriptions",
      "createdAt": "2023-06-22T14:27:26Z",
      "updatedAt": "2023-06-23T10:25:13Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "2ddac6d063b55a7375b48c9cbc96bdb20bd459dc",
      "headRepository": "PieterKas/ietf-identity-chaining",
      "headRefName": "patch-3",
      "headRefOid": "3de0d00aa9f803ef400fc2209cdd635b677f209e",
      "closedAt": "2023-06-23T10:25:13Z",
      "mergedAt": "2023-06-23T10:25:13Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "deb6f927dc837ab97ab5d23f7fd80a1cb2ed9651"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5ZGh0a",
          "commit": {
            "abbreviatedOid": "3de0d00"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-23T10:25:07Z",
          "updatedAt": "2023-06-23T10:25:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 11,
      "id": "PR_kwDOJubJxM5Tr3HG",
      "title": "Editorial updates to the description of the flow",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/11",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Editorial updates to the description of the flow",
      "createdAt": "2023-06-22T18:50:57Z",
      "updatedAt": "2023-06-23T10:33:42Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "2ddac6d063b55a7375b48c9cbc96bdb20bd459dc",
      "headRepository": "PieterKas/ietf-identity-chaining",
      "headRefName": "patch-4",
      "headRefOid": "ebffe9d3ee9379003e32a9302edfe1ef884c452e",
      "closedAt": "2023-06-23T10:33:41Z",
      "mergedAt": "2023-06-23T10:33:41Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "542aa1d9d734162afa51165b067e6e7fd22a0eee"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5ZGfTj",
          "commit": {
            "abbreviatedOid": "ebffe9d"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-23T10:17:28Z",
          "updatedAt": "2023-06-23T10:17:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 13,
      "id": "PR_kwDOJubJxM5TvGuC",
      "title": "Fix reference",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/13",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-23T10:36:25Z",
      "updatedAt": "2023-06-23T10:37:12Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "542aa1d9d734162afa51165b067e6e7fd22a0eee",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "fix_reference",
      "headRefOid": "1016c047f0332d311ff7c870ea127ac55fc603ff",
      "closedAt": "2023-06-23T10:37:11Z",
      "mergedAt": "2023-06-23T10:37:11Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "9710792ccc4b2b28b06239528ef338b0c3b3168b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 14,
      "id": "PR_kwDOJubJxM5UIPyh",
      "title": "Add sentence regarding resource identifier and audience indication",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/14",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-28T10:59:30Z",
      "updatedAt": "2023-06-29T12:11:08Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "9710792ccc4b2b28b06239528ef338b0c3b3168b",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "audience-indication",
      "headRefOid": "5ea08aa927a16d40605120fa2f455351f411f7d1",
      "closedAt": "2023-06-29T12:11:07Z",
      "mergedAt": "2023-06-29T12:11:07Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "ff2c8ee6961bcac60b9affea2f258dbfbfd458d6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5Zn-WG",
          "commit": {
            "abbreviatedOid": "5ea08aa"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Looks good.",
          "createdAt": "2023-06-28T17:40:08Z",
          "updatedAt": "2023-06-28T17:40:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOJubJxM5ULnVB",
      "title": "Added Uses Cases",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/15",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Added uses cases",
      "createdAt": "2023-06-28T20:12:50Z",
      "updatedAt": "2023-06-29T14:59:11Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "9710792ccc4b2b28b06239528ef338b0c3b3168b",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-1",
      "headRefOid": "3727a148b3849ab2a6a89f61760ca8cbbc44f07a",
      "closedAt": "2023-06-29T14:59:10Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Dupe - No longer needed",
          "createdAt": "2023-06-29T14:59:10Z",
          "updatedAt": "2023-06-29T14:59:10Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 16,
      "id": "PR_kwDOJubJxM5UPEsY",
      "title": "Added Uses Cases",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/16",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Added use cases. We may want to refine these, or move them into a non-normative section later.",
      "createdAt": "2023-06-29T12:14:57Z",
      "updatedAt": "2023-06-29T12:15:18Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "ff2c8ee6961bcac60b9affea2f258dbfbfd458d6",
      "headRepository": "PieterKas/ietf-identity-chaining",
      "headRefName": "patch-5",
      "headRefOid": "31fd9bc55c0e01ca6fbdb3b95b69d9026b72b681",
      "closedAt": "2023-06-29T12:15:18Z",
      "mergedAt": "2023-06-29T12:15:17Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "2d86cffb0dc603043f724f65892e4897d1c08188"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 18,
      "id": "PR_kwDOJubJxM5UPSV7",
      "title": "Refine token exchange processing rules",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/18",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-29T12:53:19Z",
      "updatedAt": "2023-06-29T14:04:13Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "2d86cffb0dc603043f724f65892e4897d1c08188",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "refine-tx-processing-rules",
      "headRefOid": "e052fecdee80b52c7ad3ae5708ed51d37475e416",
      "closedAt": "2023-06-29T14:04:12Z",
      "mergedAt": "2023-06-29T14:04:12Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "ce2b856c1c2fc8a05610c016ed59a9838ea8ceef"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 19,
      "id": "PR_kwDOJubJxM5UPUQK",
      "title": "Add contributors",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/19",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-29T12:59:06Z",
      "updatedAt": "2023-06-29T14:04:22Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "2d86cffb0dc603043f724f65892e4897d1c08188",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "add-contributors",
      "headRefOid": "5cfaedabed5f54f06ec719ec91d5fa481b7b2ec1",
      "closedAt": "2023-06-29T14:04:21Z",
      "mergedAt": "2023-06-29T14:04:20Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "11dc51d16efb79f0d002ce356636d4e8502cfd7b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 20,
      "id": "PR_kwDOJubJxM5UP80j",
      "title": "Editorial changes",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/20",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "- fixes diagram line (missing whitespace)\r\n- moves claims transcription and token format into own section",
      "createdAt": "2023-06-29T14:32:31Z",
      "updatedAt": "2023-06-29T15:02:45Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "11dc51d16efb79f0d002ce356636d4e8502cfd7b",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "editorial-changes",
      "headRefOid": "091b0c6c1acb97407e13e218c63084644d143eda",
      "closedAt": "2023-06-29T15:02:44Z",
      "mergedAt": "2023-06-29T15:02:44Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "eded4360ababbaea7714ccb3efec238f844d01b6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5ZvBD4",
          "commit": {
            "abbreviatedOid": "091b0c6"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-29T15:01:20Z",
          "updatedAt": "2023-06-29T15:01:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 23,
      "id": "PR_kwDOJubJxM5UzLnn",
      "title": "Reduced number of use cases, editorial changes",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/23",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-06T11:15:14Z",
      "updatedAt": "2023-07-07T14:07:59Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "5f26f04e7dec9ddb4f9d06fe8735d27f7658c3a4",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-2",
      "headRefOid": "b0b4a8dd6c50f41bc2e406495f9904441002660c",
      "closedAt": "2023-07-07T14:07:58Z",
      "mergedAt": "2023-07-07T14:07:58Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "dfef388c17817bbf4aa2a1ab455fe9d73d250e20"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5aih9w",
          "commit": {
            "abbreviatedOid": "b0b4a8d"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-07T14:07:53Z",
          "updatedAt": "2023-07-07T14:07:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 24,
      "id": "PR_kwDOJubJxM5U6EOt",
      "title": "Update to diagram description",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/24",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Attempt at aligning with terminology used in other standards.",
      "createdAt": "2023-07-07T11:18:16Z",
      "updatedAt": "2023-07-07T14:16:08Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "5f26f04e7dec9ddb4f9d06fe8735d27f7658c3a4",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-3",
      "headRefOid": "442f1351c6b24410fb6805142a2d0085dfd5b737",
      "closedAt": "2023-07-07T14:16:07Z",
      "mergedAt": "2023-07-07T14:16:07Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "ab942b704c2ef3b41ffcc87d0d4f41f98e154427"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5ailPP",
          "commit": {
            "abbreviatedOid": "442f135"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-07T14:12:22Z",
          "updatedAt": "2023-07-07T14:12:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 26,
      "id": "PR_kwDOJubJxM5U6RoI",
      "title": "Edits and updates to the main description following the diagram",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/26",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-07T11:53:35Z",
      "updatedAt": "2023-07-07T14:32:12Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "ab942b704c2ef3b41ffcc87d0d4f41f98e154427",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-4",
      "headRefOid": "ceffa160646878473a0bd64c526a693048b5d419",
      "closedAt": "2023-07-07T14:32:11Z",
      "mergedAt": "2023-07-07T14:32:11Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "d6616752d0b7b9d3eff73155c0e6675f9235a26e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5aivi7",
          "commit": {
            "abbreviatedOid": "2d03880"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-07T14:28:13Z",
          "updatedAt": "2023-07-07T14:28:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 27,
      "id": "PR_kwDOJubJxM5U6Vbg",
      "title": "Updated appendix to match main text",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/27",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-07T12:04:34Z",
      "updatedAt": "2023-07-07T14:34:18Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "d6616752d0b7b9d3eff73155c0e6675f9235a26e",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-5",
      "headRefOid": "bf1ec11309355e47cd2b8876189f941c6c74abf6",
      "closedAt": "2023-07-07T14:34:17Z",
      "mergedAt": "2023-07-07T14:34:17Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "a90805e34ceaf9e0682d0a669f14518eab05767b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5aixM-",
          "commit": {
            "abbreviatedOid": "f45ea26"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-07T14:31:59Z",
          "updatedAt": "2023-07-07T14:31:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 28,
      "id": "PR_kwDOJubJxM5U7HP8",
      "title": "Editorial changes",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/28",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-07T14:37:20Z",
      "updatedAt": "2023-07-07T14:53:52Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "a90805e34ceaf9e0682d0a669f14518eab05767b",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndts/editorial-changes",
      "headRefOid": "d7cb4afaca3c38a92a6344f9fc26dbee4a2b2ca6",
      "closedAt": "2023-07-07T14:53:51Z",
      "mergedAt": "2023-07-07T14:53:51Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "ecf9d1c4eaf3e20532d31f19128512af2d8823a4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5ai5-o",
          "commit": {
            "abbreviatedOid": "d7cb4af"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-07T14:52:45Z",
          "updatedAt": "2023-07-07T14:52:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 30,
      "id": "PR_kwDOJubJxM5VEPMf",
      "title": "Remove reference to 2-legged OAuth in use case",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/30",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See issue #29",
      "createdAt": "2023-07-10T09:45:51Z",
      "updatedAt": "2023-07-10T13:12:49Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "ecf9d1c4eaf3e20532d31f19128512af2d8823a4",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-2",
      "headRefOid": "297863be45e8dca001bdca18088a79e1cf9ab725",
      "closedAt": "2023-07-10T13:12:48Z",
      "mergedAt": "2023-07-10T13:12:48Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "153b2f8d1399925a4dde8ab7f6c435727772cf81"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5auLR0",
          "commit": {
            "abbreviatedOid": "297863b"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T13:12:43Z",
          "updatedAt": "2023-07-10T13:12:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDOJubJxM5VEYgM",
      "title": "Small editorial/typo updates",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/33",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-10T10:09:22Z",
      "updatedAt": "2023-07-10T13:18:18Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "ecf9d1c4eaf3e20532d31f19128512af2d8823a4",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-3",
      "headRefOid": "7464bf9768469abc031bfb9e6e69abd47c71ec09",
      "closedAt": "2023-07-10T13:18:17Z",
      "mergedAt": "2023-07-10T13:18:17Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "5a0953c4cd4975ca9fce489f55495cc59678c9c8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5auN5i",
          "commit": {
            "abbreviatedOid": "7464bf9"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T13:18:12Z",
          "updatedAt": "2023-07-10T13:18:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 34,
      "id": "PR_kwDOJubJxM5VEcmp",
      "title": "Guidance on client authentication",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/34",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Added a section in the security considerations to address topic raised by #32",
      "createdAt": "2023-07-10T10:21:14Z",
      "updatedAt": "2023-07-10T13:32:12Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "ecf9d1c4eaf3e20532d31f19128512af2d8823a4",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-4",
      "headRefOid": "3e441739dc96954f36f57aaaad4a88834d19f81d",
      "closedAt": "2023-07-10T13:32:11Z",
      "mergedAt": "2023-07-10T13:32:11Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "9deef8a36c39024f34c01c410a1e51a4937c81b2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5auSXe",
          "commit": {
            "abbreviatedOid": "7cb3241"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T13:24:36Z",
          "updatedAt": "2023-07-10T13:24:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM5auT-2",
          "commit": {
            "abbreviatedOid": "3e44173"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T13:26:51Z",
          "updatedAt": "2023-07-10T13:26:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 37,
      "id": "PR_kwDOJubJxM5VErvL",
      "title": "Editorial changes suggested by Kelly",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/37",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Includes updates based on #36",
      "createdAt": "2023-07-10T11:03:32Z",
      "updatedAt": "2023-07-10T13:36:42Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "9deef8a36c39024f34c01c410a1e51a4937c81b2",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-5",
      "headRefOid": "7bce3e1035ada48e0da04d2b39363ccf37c65ce7",
      "closedAt": "2023-07-10T13:36:41Z",
      "mergedAt": "2023-07-10T13:36:41Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "df9191a49c84fc4a297629777373c388f58209f1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5auWhl",
          "commit": {
            "abbreviatedOid": "b8aab84"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T13:31:55Z",
          "updatedAt": "2023-07-10T13:31:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 38,
      "id": "PR_kwDOJubJxM5VEumx",
      "title": "Add Kellys changes",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/38",
      "state": "CLOSED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-10T11:11:33Z",
      "updatedAt": "2023-07-10T13:32:30Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "ecf9d1c4eaf3e20532d31f19128512af2d8823a4",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndts/kellys-notes",
      "headRefOid": "93f8aaf1342857f16cb6ac5db16e5375f800d15c",
      "closedAt": "2023-07-10T13:32:30Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "Duplicate to #37",
          "createdAt": "2023-07-10T13:32:30Z",
          "updatedAt": "2023-07-10T13:32:30Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 39,
      "id": "PR_kwDOJubJxM5VEvA6",
      "title": "Removed reference to \"audienced\"",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/39",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Described what audienced means instead. (see #35 )",
      "createdAt": "2023-07-10T11:12:35Z",
      "updatedAt": "2023-07-10T13:43:37Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "df9191a49c84fc4a297629777373c388f58209f1",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-6",
      "headRefOid": "12223fadad4ca6290102f2ed66048e0bd50906a5",
      "closedAt": "2023-07-10T13:43:36Z",
      "mergedAt": "2023-07-10T13:43:36Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "639dc25e123744200f9086e24371925b3c8ea9ad"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5auY4E",
          "commit": {
            "abbreviatedOid": "895472a"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T13:36:31Z",
          "updatedAt": "2023-07-10T13:36:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM5aubUL",
          "commit": {
            "abbreviatedOid": "73b4fc5"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T13:41:24Z",
          "updatedAt": "2023-07-10T13:41:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM5auchE",
          "commit": {
            "abbreviatedOid": "12223fa"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T13:43:24Z",
          "updatedAt": "2023-07-10T13:43:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 40,
      "id": "PR_kwDOJubJxM5VGQ4I",
      "title": "Update diagrams",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/40",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Only use ASCII",
      "createdAt": "2023-07-10T15:04:11Z",
      "updatedAt": "2023-07-10T15:12:25Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "639dc25e123744200f9086e24371925b3c8ea9ad",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndts/update-diagrams",
      "headRefOid": "11a38e71277bb8fc8d791e0db971d89ea7ee5cec",
      "closedAt": "2023-07-10T15:12:24Z",
      "mergedAt": "2023-07-10T15:12:24Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "0d5a243f26de03ddb1b1842e05a64420586fddb2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5avNhi",
          "commit": {
            "abbreviatedOid": "11a38e7"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:12:18Z",
          "updatedAt": "2023-07-10T15:12:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 41,
      "id": "PR_kwDOJubJxM5VGX0d",
      "title": "Update emails",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/41",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-10T15:21:50Z",
      "updatedAt": "2023-07-10T15:22:55Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "0d5a243f26de03ddb1b1842e05a64420586fddb2",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndts/update-emails",
      "headRefOid": "f2a5be0058f8b76cb5daf19b55502d044858395d",
      "closedAt": "2023-07-10T15:22:54Z",
      "mergedAt": "2023-07-10T15:22:54Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "08c948436f86b9bdd7ae143adf7cec1303be157a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5avSfX",
          "commit": {
            "abbreviatedOid": "f2a5be0"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-10T15:22:48Z",
          "updatedAt": "2023-07-10T15:22:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 43,
      "id": "PR_kwDOJubJxM5VVQJ3",
      "title": "Update doc name",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/43",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Update doc name to adhere convention",
      "createdAt": "2023-07-12T16:42:01Z",
      "updatedAt": "2023-07-12T17:13:37Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "08c948436f86b9bdd7ae143adf7cec1303be157a",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndts/update_doc_name",
      "headRefOid": "e91e49056f84f2e691e54b4e75375dc5f27471e1",
      "closedAt": "2023-07-12T17:13:35Z",
      "mergedAt": "2023-07-12T17:13:35Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "adfcd2c1221ea1c33c68f1d70a26104a94a49998"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5bAaj2",
          "commit": {
            "abbreviatedOid": "e91e490"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-12T17:13:13Z",
          "updatedAt": "2023-07-12T17:13:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 52,
      "id": "PR_kwDOJubJxM5a2w1G",
      "title": "#44 remove duplicated lines",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/52",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Removes a duplicated section from the introduction",
      "createdAt": "2023-09-21T07:52:55Z",
      "updatedAt": "2023-10-03T08:34:15Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "adfcd2c1221ea1c33c68f1d70a26104a94a49998",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndts/44-remove-duplicated-lines",
      "headRefOid": "e451b73de74918495668fadb3c6e5106ff47937a",
      "closedAt": "2023-10-03T08:34:14Z",
      "mergedAt": "2023-10-03T08:34:14Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "af2e68b49b0015788c66b03b4eb7ed78589f8669"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5in3qg",
          "commit": {
            "abbreviatedOid": "e451b73"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-03T08:20:58Z",
          "updatedAt": "2023-10-03T08:20:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 53,
      "id": "PR_kwDOJubJxM5a9ssf",
      "title": "Replace cURLs with on-the-wire examples",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/53",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Replaces examples and add response examples",
      "createdAt": "2023-09-22T08:02:06Z",
      "updatedAt": "2023-10-17T09:59:04Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "adfcd2c1221ea1c33c68f1d70a26104a94a49998",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndts/46-replace-curls",
      "headRefOid": "2013a77341fe0ddce7267f9d15bc55ef20d9f165",
      "closedAt": "2023-10-17T09:59:03Z",
      "mergedAt": "2023-10-17T09:59:03Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "3a635b1c43725095e3a017c85f5476b507bf6ee2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5isJtd",
          "commit": {
            "abbreviatedOid": "dd4486e"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "DISMISSED",
          "body": "just some formatting nits in the examples ",
          "createdAt": "2023-10-03T17:18:00Z",
          "updatedAt": "2023-10-17T09:58:58Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "probably shouldn't have that leading space in HTTP examples \r\n```suggestion\r\nPOST /auth/token HTTP/1.1\r\nHost: as.a.org\r\nContent-Type: application/x-www-form-urlencoded\r\n\r\ngrant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Atoken-exchange\r\n&resource=https%3A%2F%2Fas.b.org%2Fauth\r\n&subject_token=ey...\r\n&subject_token_type=urn%3Aietf%3Aparams%3Aoauth%3Atoken-type%3Aaccess_token\r\n```",
              "createdAt": "2023-10-03T17:18:00Z",
              "updatedAt": "2023-10-03T17:21:12Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nPOST /auth/token HTTP/1.1\r\nHost: as.b.org\r\nContent-Type: application/x-www-form-urlencoded\r\n\r\ngrant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer\r\n&assertion=ey...\r\n```",
              "createdAt": "2023-10-03T17:19:52Z",
              "updatedAt": "2023-10-03T17:21:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5kP6e4",
          "commit": {
            "abbreviatedOid": "2013a77"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-17T09:57:42Z",
          "updatedAt": "2023-10-17T09:57:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 54,
      "id": "PR_kwDOJubJxM5a9ut7",
      "title": "#48 Fix RFC7523 reference",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/54",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Fixes RFC7523 reference (was RFC7521)",
      "createdAt": "2023-09-22T08:08:28Z",
      "updatedAt": "2023-10-03T08:34:24Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "adfcd2c1221ea1c33c68f1d70a26104a94a49998",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndts/48-fix-reference",
      "headRefOid": "02563e9a924e0215bdf739839e40d3b8a08ea830",
      "closedAt": "2023-10-03T08:34:23Z",
      "mergedAt": "2023-10-03T08:34:23Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "a309e13ae6bda67f8bb5cbdfdcb8cd00264749b5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5in4jJ",
          "commit": {
            "abbreviatedOid": "02563e9"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-03T08:22:29Z",
          "updatedAt": "2023-10-03T08:22:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 55,
      "id": "PR_kwDOJubJxM5bw0v_",
      "title": "Added Brian Campbell as an Editor",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/55",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Brian has made considerable contributions to the development of this spec and was omitted in error in the earlier drafts.\r\n\r\nIssue #50",
      "createdAt": "2023-10-03T08:30:40Z",
      "updatedAt": "2023-10-06T16:24:40Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "adfcd2c1221ea1c33c68f1d70a26104a94a49998",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-2",
      "headRefOid": "200ef9871376f5fdc3dcacfaaa26553d3380325a",
      "closedAt": "2023-10-06T16:24:39Z",
      "mergedAt": "2023-10-06T16:24:39Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "4a526053b24938bb89e8c13a62a573eb59cf7463"
      },
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Brian Campbell to review and approve.",
          "createdAt": "2023-10-03T08:31:38Z",
          "updatedAt": "2023-10-03T08:31:38Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5ioYef",
          "commit": {
            "abbreviatedOid": "200ef98"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-03T09:23:23Z",
          "updatedAt": "2023-10-03T09:23:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM5isMxk",
          "commit": {
            "abbreviatedOid": "200ef98"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "somewhat reluctantly :) ",
          "createdAt": "2023-10-03T17:22:34Z",
          "updatedAt": "2023-10-03T17:22:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 56,
      "id": "PR_kwDOJubJxM5dAPKU",
      "title": "Update processing rules",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/56",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See #49",
      "createdAt": "2023-10-17T11:13:42Z",
      "updatedAt": "2023-10-23T13:44:26Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "3a635b1c43725095e3a017c85f5476b507bf6ee2",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-2",
      "headRefOid": "a9ad12da380805d52389b8c0ebf73b9237ba5272",
      "closedAt": "2023-10-23T13:44:25Z",
      "mergedAt": "2023-10-23T13:44:25Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "32a99900a74b8113c1649171f9963519db6af432"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5kVVZK",
          "commit": {
            "abbreviatedOid": "dd77bdf"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-17T20:26:43Z",
          "updatedAt": "2023-10-17T20:26:43Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "idetifier -> identifier  \r\n\r\nbut Section 5.2 of RFC7521 doesn't define the issuer identifier, does it? I think \"issuer identifier\" is defined first in AS Metadata RFC8414\r\n\r\n",
              "createdAt": "2023-10-17T20:26:43Z",
              "updatedAt": "2023-10-17T20:26:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5kVVz6",
          "commit": {
            "abbreviatedOid": "dd77bdf"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-17T20:27:54Z",
          "updatedAt": "2023-10-17T20:27:55Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "https://datatracker.ietf.org/doc/html/rfc9126#section-2-5 or https://www.rfc-editor.org/rfc/rfc9207#section-1.1-2 are examples of places that cite it ",
              "createdAt": "2023-10-17T20:27:55Z",
              "updatedAt": "2023-10-17T20:27:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5kp7oA",
          "commit": {
            "abbreviatedOid": "dd77bdf"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T21:39:04Z",
          "updatedAt": "2023-10-19T21:39:04Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Aha! That makes a lot more sense, thanks Brian. Let me try again.",
              "createdAt": "2023-10-19T21:39:04Z",
              "updatedAt": "2023-10-19T21:39:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5kqEOB",
          "commit": {
            "abbreviatedOid": "dd77bdf"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T21:56:37Z",
          "updatedAt": "2023-10-19T21:56:37Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "@bc-pi I made updates to try and clarify that:\r\n\r\n1. The aud claim should identify the token endpoint or the authorization server\r\n2. The issuer identifier should follow the format defined in RFC 8414\r\n\r\nThanks for pointing that out, I would never have known to look there otherwise.\r\n\r\nPlease suggest alternative text in case the change is not clear.",
              "createdAt": "2023-10-19T21:56:37Z",
              "updatedAt": "2023-10-19T21:56:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5kwrA9",
          "commit": {
            "abbreviatedOid": "dd77bdf"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T16:33:54Z",
          "updatedAt": "2023-10-20T16:33:55Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Thinking about it a bit more and this is trickier than it should be- sorry! But I think the language you had before is preferable with just getting the reference and spelling right. I'll suggest some text",
              "createdAt": "2023-10-20T16:33:54Z",
              "updatedAt": "2023-10-20T16:33:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5kw2mY",
          "commit": {
            "abbreviatedOid": "a24d8c1"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T16:47:07Z",
          "updatedAt": "2023-10-20T16:47:08Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n* The \"aud\" claim MUST identify the Authorization Server as a valid intended audience of the assertion using either the token endpoint as described Section 3 {{RFC7523}} or the issuer identifier as defined in Section 2 of {{RFC8414}}.\r\n```",
              "createdAt": "2023-10-20T16:47:07Z",
              "updatedAt": "2023-10-20T16:51:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5kw4zq",
          "commit": {
            "abbreviatedOid": "dd77bdf"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T16:51:04Z",
          "updatedAt": "2023-10-20T16:51:04Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I'm even kinda having second thoughts about the value/appropriateness of bringing up RFC 8414 here but it's probably okay... ",
              "createdAt": "2023-10-20T16:51:04Z",
              "updatedAt": "2023-10-20T16:51:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5k37YP",
          "commit": {
            "abbreviatedOid": "a9ad12d"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T12:16:06Z",
          "updatedAt": "2023-10-23T12:16:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 57,
      "id": "PR_kwDOJubJxM5dW2hp",
      "title": "#51 Update diagram label to indicate that also token exchange may be used",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/57",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Based on Kelly's feedback changing a label in the diagram in the appendix to indicate that also token exchange may be used. This is at the step when the client request a token for a protected resource in a different domain from its own authorization server. ",
      "createdAt": "2023-10-20T08:39:16Z",
      "updatedAt": "2023-10-20T11:48:21Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "3a635b1c43725095e3a017c85f5476b507bf6ee2",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndts/51-update-diagram-naming",
      "headRefOid": "8c65c07a0482a9a6cf1e5a4c5c08a3ca1b606db4",
      "closedAt": "2023-10-20T11:48:19Z",
      "mergedAt": "2023-10-20T11:48:19Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "1de9528db71001a3b5327ca304c4312be6e93d5b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5kt2nS",
          "commit": {
            "abbreviatedOid": "8c65c07"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-20T10:30:56Z",
          "updatedAt": "2023-10-20T10:30:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 58,
      "id": "PR_kwDOJubJxM5dW_8w",
      "title": "#47 Update authorization server discovery usage",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/58",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Based on Brians feedback WWW-Authenticate cannot be used as it does not contain authorization server information.\r\nHe suggested to use https://datatracker.ietf.org/doc/html/[draft-ietf-oauth-resource-metadata-00](https://datatracker.ietf.org/doc/html/draft-ietf-oauth-resource-metadata-00) instead.\r\n\r\nThis PR is removing WWW-Authenticate from the draft and suggest the reader to use protected resource metadata instead when authorization server discovery is needed.",
      "createdAt": "2023-10-20T09:05:20Z",
      "updatedAt": "2023-10-23T13:44:39Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "23534aab1494c748e75277a24c90cbd7723e518d",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndts/47-correct-as-discovery",
      "headRefOid": "1cb40d95c2bb3628f9e7da335911889aea53e77f",
      "closedAt": "2023-10-23T13:44:38Z",
      "mergedAt": "2023-10-23T13:44:38Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "81e9ed378818bbf68e15cf3403a276f6ec6cfaf1"
      },
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I didn't mean to suggest the use of protected resource metadata.  I only mentioned it's existence as the only thing I'm aware of currently that touches on that kind of discovery. Honestly I think it might be a bit premature to reference it at this point. But I suppose it's okay given it's described as just one option to identify the authorization server.",
          "createdAt": "2023-10-20T17:19:20Z",
          "updatedAt": "2023-10-20T17:19:20Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5kxHQ-",
          "commit": {
            "abbreviatedOid": "8abc746"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T17:22:24Z",
          "updatedAt": "2023-10-20T17:22:24Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "\" Step A and B MAY be skipped\" - with this change it's just Step A now, right? ",
              "createdAt": "2023-10-20T17:22:24Z",
              "updatedAt": "2023-10-20T17:22:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5kxv1R",
          "commit": {
            "abbreviatedOid": "8abc746"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:05:24Z",
          "updatedAt": "2023-10-20T19:05:25Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "also noticed a typo. So suggest maybe:\r\n```suggestion\r\n(A) The resource server of domain A needs to access protected resource in Domain B. It requires an access token to do so which it does not possess. In this example {{OAUTH2-PROTECTED-RESOURCE-METADATA}} is used to receive information about the authorization server which protects the resource in domain B. This step MAY be skipped if discovery is not needed and other means of discovery MAY be used. The protected resource returns its metadata along with the authorization server information.\r\n```",
              "createdAt": "2023-10-20T19:05:25Z",
              "updatedAt": "2023-10-20T19:28:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5kx3Ao",
          "commit": {
            "abbreviatedOid": "8abc746"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:26:14Z",
          "updatedAt": "2023-10-20T19:26:14Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "I think with kramdown, rather than repeating all this reference info, you can have just `  I-D.ietf-oauth-resource-metadata:` here and use `{{I-D.ietf-oauth-resource-metadata}}` later in the content ",
              "createdAt": "2023-10-20T19:26:14Z",
              "updatedAt": "2023-10-21T22:08:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5kx3Wb",
          "commit": {
            "abbreviatedOid": "8abc746"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T19:27:25Z",
          "updatedAt": "2023-10-20T19:27:25Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "for example, the use of `I-D.ietf-core-coap` in https://raw.githubusercontent.com/cabo/kramdown-rfc/master/examples/draft-ietf-core-block-xx.mkd ",
              "createdAt": "2023-10-20T19:27:25Z",
              "updatedAt": "2023-10-20T19:27:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5kz9dz",
          "commit": {
            "abbreviatedOid": "8abc746"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-21T22:09:27Z",
          "updatedAt": "2023-10-21T22:09:27Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "another example see the `I-D.ietf-httpbis-message-signatures` and `display: HTTPSIG` in https://raw.githubusercontent.com/httpwg/http-extensions/main/archive/draft-ietf-httpbis-client-cert-field.md ",
              "createdAt": "2023-10-21T22:09:27Z",
              "updatedAt": "2023-10-21T22:10:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5k3uOq",
          "commit": {
            "abbreviatedOid": "8abc746"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T11:42:56Z",
          "updatedAt": "2023-10-23T11:42:57Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "Thank you, applied your suggestions",
              "createdAt": "2023-10-23T11:42:57Z",
              "updatedAt": "2023-10-23T11:42:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5k346R",
          "commit": {
            "abbreviatedOid": "8abc746"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-23T12:10:07Z",
          "updatedAt": "2023-10-23T12:10:07Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "I did not know this, thank you! I updated the other references too.",
              "createdAt": "2023-10-23T12:10:07Z",
              "updatedAt": "2023-10-23T12:10:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5k4k7p",
          "commit": {
            "abbreviatedOid": "1cb40d9"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T13:28:17Z",
          "updatedAt": "2023-10-23T13:28:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 59,
      "id": "PR_kwDOJubJxM5dXWJ3",
      "title": "Corrected typo",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/59",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-20T10:07:23Z",
      "updatedAt": "2023-10-23T12:15:26Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "3a635b1c43725095e3a017c85f5476b507bf6ee2",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-3",
      "headRefOid": "190a021839254c60a009e537ea2783f284b0f0dc",
      "closedAt": "2023-10-23T12:15:25Z",
      "mergedAt": "2023-10-23T12:15:25Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "23534aab1494c748e75277a24c90cbd7723e518d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5k37B4",
          "commit": {
            "abbreviatedOid": "190a021"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T12:15:16Z",
          "updatedAt": "2023-10-23T12:15:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 62,
      "id": "PR_kwDOJubJxM5gtVb_",
      "title": "update Kelley's info",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/62",
      "state": "MERGED",
      "author": "bc-pi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-11-29T19:52:53Z",
      "updatedAt": "2023-11-30T08:13:54Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "81e9ed378818bbf68e15cf3403a276f6ec6cfaf1",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "kelley-email-org",
      "headRefOid": "43a1e5c6fde388ba4f06db8275990555cf91bc0d",
      "closedAt": "2023-11-30T08:13:53Z",
      "mergedAt": "2023-11-30T08:13:53Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "0fe5679260bdd6b996da8e38084476e669dbd20a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5ot59v",
          "commit": {
            "abbreviatedOid": "43a1e5c"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-30T08:13:48Z",
          "updatedAt": "2023-11-30T08:13:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 63,
      "id": "PR_kwDOJubJxM5gwCjA",
      "title": "Marking docname as adopted by the oauth working group",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/63",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "removing schwenkschuster from docname to indicate it has been WG-adopted",
      "createdAt": "2023-11-30T08:19:02Z",
      "updatedAt": "2023-11-30T13:39:13Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "0fe5679260bdd6b996da8e38084476e669dbd20a",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndts/update_docname",
      "headRefOid": "76fb2f675234b64d7ffb5bcbb936d99cdb393b61",
      "closedAt": "2023-11-30T13:39:12Z",
      "mergedAt": "2023-11-30T13:39:12Z",
      "mergedBy": "bc-pi",
      "mergeCommit": {
        "oid": "22f61295fd0e7d4b3a815cc94aeb17392284382a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5owSkR",
          "commit": {
            "abbreviatedOid": "76fb2f6"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-30T13:38:09Z",
          "updatedAt": "2023-11-30T13:38:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 64,
      "id": "PR_kwDOJubJxM5g0dou",
      "title": "Update the docname to (for real this time) reflect WG adoption",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/64",
      "state": "MERGED",
      "author": "bc-pi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-11-30T19:52:44Z",
      "updatedAt": "2023-12-01T13:16:47Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "22f61295fd0e7d4b3a815cc94aeb17392284382a",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "bc-docname-redux",
      "headRefOid": "c644b276f134ca364b203d162b7b31eb3400e204",
      "closedAt": "2023-12-01T13:16:47Z",
      "mergedAt": "2023-12-01T13:16:47Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "42c43fc8bd02f2e80f027d86de84fef6539df0eb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5o5E6-",
          "commit": {
            "abbreviatedOid": "c644b27"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-01T13:16:42Z",
          "updatedAt": "2023-12-01T13:16:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 65,
      "id": "PR_kwDOJubJxM5g5q0N",
      "title": "Some house keeping after -00 publication",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/65",
      "state": "CLOSED",
      "author": "bc-pi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-12-01T13:50:09Z",
      "updatedAt": "2024-10-31T16:56:28Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "42c43fc8bd02f2e80f027d86de84fef6539df0eb",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "after-00",
      "headRefOid": "03b41905a7225803713abb57ec3cdd976bce1b6d",
      "closedAt": "2024-01-14T16:42:45Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5sTcD2",
          "commit": {
            "abbreviatedOid": "0966584"
          },
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-01-11T23:53:53Z",
          "updatedAt": "2024-01-11T23:53:58Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "this should actually be `-latest` and the build tool will do the right thing",
              "createdAt": "2024-01-11T23:53:54Z",
              "updatedAt": "2024-01-11T23:53:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5sfv8v",
          "commit": {
            "abbreviatedOid": "0966584"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-14T16:24:16Z",
          "updatedAt": "2024-01-14T16:24:16Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\ndocname: draft-ietf-oauth-identity-chaining-latest\r\n```",
              "createdAt": "2024-01-14T16:24:16Z",
              "updatedAt": "2024-01-14T16:24:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5sfv-a",
          "commit": {
            "abbreviatedOid": "0966584"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-14T16:25:05Z",
          "updatedAt": "2024-01-14T16:25:05Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "right, thanks. you'd think i'd be able to remember that... ",
              "createdAt": "2024-01-14T16:25:05Z",
              "updatedAt": "2024-01-14T16:25:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5sfwbK",
          "commit": {
            "abbreviatedOid": "0966584"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-14T16:33:36Z",
          "updatedAt": "2024-01-14T16:33:36Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "actually, this PR predates the move to that build tool and should probably just be closed with a new PR to fix the id nits non-asciii per 82a4600efce97500f5b128e46e7c0e6a42ab0b4d ",
              "createdAt": "2024-01-14T16:33:36Z",
              "updatedAt": "2024-01-14T16:33:36Z"
            }
          ]
        }
      ]
    },
    {
      "number": 70,
      "id": "PR_kwDOJubJxM5kBuoy",
      "title": "Idnits Check was complaining about non-ascii characters in the document.",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/70",
      "state": "MERGED",
      "author": "bc-pi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-14T16:42:28Z",
      "updatedAt": "2024-01-26T17:08:32Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "cfac000a0c5c955b39b8ad73735aa5343d84d063",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "idnitsnonascii",
      "headRefOid": "9f6da23f415ab70325acbd6c8b03b66b0de09897",
      "closedAt": "2024-01-26T17:08:32Z",
      "mergedAt": "2024-01-26T17:08:32Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "25e632aa54b49c8623a50759880fe61f4be9561a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5uChtv",
          "commit": {
            "abbreviatedOid": "9f6da23"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-26T17:08:24Z",
          "updatedAt": "2024-01-26T17:08:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 71,
      "id": "PR_kwDOJubJxM5lMZCP",
      "title": "Added acknowledgement for Aaron Parecki",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/71",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See #69",
      "createdAt": "2024-01-26T20:31:02Z",
      "updatedAt": "2024-02-02T20:02:55Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "bef79bc76f9bd83a7cf00e2a1d276504315a10c0",
      "headRepository": "PieterKas/ietf-identity-chaining",
      "headRefName": "patch-6",
      "headRefOid": "c2b4f5905dafd90891e755f0ec661cdcd80ad6d4",
      "closedAt": "2024-02-02T20:02:55Z",
      "mergedAt": "2024-02-02T20:02:55Z",
      "mergedBy": "bc-pi",
      "mergeCommit": {
        "oid": "4b1b5dacb352e8f4220bf7bec1eb077bac253f17"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5uEFJw",
          "commit": {
            "abbreviatedOid": "e10d049"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-26T21:16:44Z",
          "updatedAt": "2024-01-26T21:16:44Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "I think you need/want to just use the actual draft number here.\r\n\r\n```suggestion\r\n   -01\r\n```",
              "createdAt": "2024-01-26T21:16:44Z",
              "updatedAt": "2024-01-26T21:20:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5u3R5H",
          "commit": {
            "abbreviatedOid": "72d5722"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-02T17:46:50Z",
          "updatedAt": "2024-02-02T17:46:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM5u4Rlb",
          "commit": {
            "abbreviatedOid": "c2b4f59"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-02T20:02:25Z",
          "updatedAt": "2024-02-02T20:02:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 72,
      "id": "PR_kwDOJubJxM5lnq0Z",
      "title": "limit authorization grant format to RFC7523 JWT ",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/72",
      "state": "MERGED",
      "author": "bc-pi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "and minor other little fixes to fix issues #45, #60, #61\r\n\r\nan editor's draft preview of these changes here: https://drafts.oauth.net/oauth-identity-chaining/bc/just-jwt/draft-ietf-oauth-identity-chaining.html",
      "createdAt": "2024-01-31T21:36:37Z",
      "updatedAt": "2024-02-02T19:44:52Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "25e632aa54b49c8623a50759880fe61f4be9561a",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "bc/just-jwt",
      "headRefOid": "4ea826a1c2b5edd139bde76c273c6f3d2840cfe3",
      "closedAt": "2024-02-02T19:44:52Z",
      "mergedAt": "2024-02-02T19:44:52Z",
      "mergedBy": "bc-pi",
      "mergeCommit": {
        "oid": "bef79bc76f9bd83a7cf00e2a1d276504315a10c0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5u3Oo1",
          "commit": {
            "abbreviatedOid": "4ea826a"
          },
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-02T17:40:41Z",
          "updatedAt": "2024-02-02T17:40:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 73,
      "id": "PR_kwDOJubJxM5l4m6H",
      "title": "More specific headers",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/73",
      "state": "MERGED",
      "author": "aaronpk",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Renamed the \"Authorization Grant\" header to \"Access Token Request\". This makes it match with the other grant types in OAuth that use \"Access Token Request\" as the header for their sections. https://datatracker.ietf.org/doc/html/rfc6749#section-4",
      "createdAt": "2024-02-02T22:26:56Z",
      "updatedAt": "2024-02-02T23:42:39Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "4b1b5dacb352e8f4220bf7bec1eb077bac253f17",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "access-token-request",
      "headRefOid": "67dafc3485ff7c11bed70a2bcc5e94bbb6ef45b4",
      "closedAt": "2024-02-02T23:42:39Z",
      "mergedAt": "2024-02-02T23:42:39Z",
      "mergedBy": "bc-pi",
      "mergeCommit": {
        "oid": "88ee20a23c7ec689992b8e26c80ea9cbfe30e56d"
      },
      "comments": [
        {
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "body": "Agreed. I also made the token exchange request/response headers more explicit so that there are no headers just called \"Request\" anymore",
          "createdAt": "2024-02-02T23:27:55Z",
          "updatedAt": "2024-02-02T23:27:55Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5u5sae",
          "commit": {
            "abbreviatedOid": "d121e8b"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "if the intent is to match better w/ 6749, I think renaming subsection 2.5.1 to \"Access Token Request\" and 2.5.3 to \"Access Token Response\" would be more better matching. \r\nLike Access Token Request https://datatracker.ietf.org/doc/html/rfc6749#section-4.1.3 and Access Token Response https://datatracker.ietf.org/doc/html/rfc6749#section-4.1.4 are subsections of Authorization Code Grant https://datatracker.ietf.org/doc/html/rfc6749#section-4.1\r\nAnd then maybe rename 2.5 \"Authorization Grant\" to \"JWT Authorization Grant\"",
          "createdAt": "2024-02-02T23:19:38Z",
          "updatedAt": "2024-02-02T23:27:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM5u5viD",
          "commit": {
            "abbreviatedOid": "91cae4d"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-02T23:37:15Z",
          "updatedAt": "2024-02-02T23:37:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM5u5wB0",
          "commit": {
            "abbreviatedOid": "67dafc3"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-02T23:41:24Z",
          "updatedAt": "2024-02-02T23:41:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 74,
      "id": "PR_kwDOJubJxM5l49Zk",
      "title": "use more specific term \"JWT authorization grant\"",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/74",
      "state": "MERGED",
      "author": "aaronpk",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "when \"authorization grant\" refers to the actual JWT being passed around, it is clearer to call it \"JWT authorization grant\". RFC6749 uses \"authorization grant\" to refer to the general concept of any grant",
      "createdAt": "2024-02-02T23:47:36Z",
      "updatedAt": "2024-02-02T23:58:48Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "88ee20a23c7ec689992b8e26c80ea9cbfe30e56d",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "jwt-authorization-grant",
      "headRefOid": "9add3502d123538d68f68beb7f070906f9a3f364",
      "closedAt": "2024-02-02T23:58:48Z",
      "mergedAt": "2024-02-02T23:58:48Z",
      "mergedBy": "bc-pi",
      "mergeCommit": {
        "oid": "ef69bf6001c3fd0265b605a4e17a52d05b1194aa"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5u5ybJ",
          "commit": {
            "abbreviatedOid": "9add350"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-02T23:56:27Z",
          "updatedAt": "2024-02-02T23:56:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 76,
      "id": "PR_kwDOJubJxM5mTPNq",
      "title": "update draft name",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/76",
      "state": "MERGED",
      "author": "aaronpk",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "closes #67",
      "createdAt": "2024-02-07T19:47:05Z",
      "updatedAt": "2024-02-19T19:55:45Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "95a954d90e9d39d3b445014a871fce04b739e233",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "rename",
      "headRefOid": "ba8373116c32adc7cf035a2ee3969c7e0e2eec88",
      "closedAt": "2024-02-16T22:55:36Z",
      "mergedAt": "2024-02-16T22:55:36Z",
      "mergedBy": "bc-pi",
      "mergeCommit": {
        "oid": "d05faa5891a52783b35fe7623abcc54e1e2f7998"
      },
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "an editor's copy preview of this PR can be seen at https://drafts.oauth.net/oauth-identity-chaining/rename/draft-ietf-oauth-identity-chaining.html ",
          "createdAt": "2024-02-07T21:11:34Z",
          "updatedAt": "2024-02-07T21:11:34Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Going to go ahead and merge this one as Pieter said we'd do today https://mailarchive.ietf.org/arch/msg/oauth/_nRDh3ciXDk1A9H_3CAs1DwPV5g/, which also says we'll publish a new draft but we can do that next week or so. ",
          "createdAt": "2024-02-16T22:55:20Z",
          "updatedAt": "2024-02-16T22:55:20Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5vYXgK",
          "commit": {
            "abbreviatedOid": "e8878bb"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-07T19:55:23Z",
          "updatedAt": "2024-02-07T19:55:23Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "we can probably do without the capitalization in regular text \r\n```suggestion\r\nThe identity and authorization chaining flow outlined below describes how a combination of OAuth 2.0 Token Exchange {{RFC8693}} and JWT Profile for OAuth 2.0 Client Authentication and Authorization Grants {{RFC7523}} are used to address the use cases identified. The appendix include two additional examples that describe how this flow is used. In one example, the resource server acts as the client and in the other, the authorization server acts as the client.\r\n```",
              "createdAt": "2024-02-07T19:55:23Z",
              "updatedAt": "2024-02-07T19:55:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5vYZs4",
          "commit": {
            "abbreviatedOid": "e8878bb"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-07T20:00:44Z",
          "updatedAt": "2024-02-07T20:00:45Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "I realize the capitalization predates your PR @aaronpk and you were just being consistent with the text immediately at hand. But your change made me notice it and seems like as good a time as any to fix it.  ",
              "createdAt": "2024-02-07T20:00:45Z",
              "updatedAt": "2024-02-07T20:00:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5vY0je",
          "commit": {
            "abbreviatedOid": "8cded4f"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Looks good to me. Thanks for doing the work! ",
          "createdAt": "2024-02-07T20:55:24Z",
          "updatedAt": "2024-02-07T20:55:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM5vl9YE",
          "commit": {
            "abbreviatedOid": "8cded4f"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "LGTM, feel free to just close my comment and merge if you disagree.",
          "createdAt": "2024-02-09T11:56:04Z",
          "updatedAt": "2024-02-09T11:56:38Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "I'm unfortunately not able to comment on the introduction section but we write there:\r\n> Preserving this information is referred to as identity chaining. This document defines a mechanism for preserving identity chaining information across trust domains using a combination of ...\r\n\r\nI believe with this change we should also change that section for example to\r\n> This document referrers to this as \"chaining\" and defines a mechanism for preserving identity and authorization information across Domains.",
              "createdAt": "2024-02-09T11:56:05Z",
              "updatedAt": "2024-02-09T11:56:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5vnoO6",
          "commit": {
            "abbreviatedOid": "8cded4f"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T15:28:01Z",
          "updatedAt": "2024-02-09T15:28:01Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Yeah, agree we should also probably update that section somewhat. ",
              "createdAt": "2024-02-09T15:28:01Z",
              "updatedAt": "2024-02-09T15:28:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5vpE69",
          "commit": {
            "abbreviatedOid": "8cded4f"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-09T19:10:15Z",
          "updatedAt": "2024-02-09T19:10:15Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "686f2d28f51470e86c8e7a0d90a989e6debd0b49 makes the update suggested by @arndt-s ",
              "createdAt": "2024-02-09T19:10:15Z",
              "updatedAt": "2024-02-09T19:10:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5wmVzc",
          "commit": {
            "abbreviatedOid": "ba83731"
          },
          "author": "kamronbatman",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-19T19:55:45Z",
          "updatedAt": "2024-02-19T19:55:45Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "@aaronpk should this match the title field on line 11? Same for L117",
              "createdAt": "2024-02-19T19:55:45Z",
              "updatedAt": "2024-02-19T19:56:04Z"
            }
          ]
        }
      ]
    },
    {
      "number": 77,
      "id": "PR_kwDOJubJxM5mUu_k",
      "title": "Consistent spacing in examples",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/77",
      "state": "MERGED",
      "author": "kamronbatman",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Made the spacing consistent in the examples.",
      "createdAt": "2024-02-08T01:15:27Z",
      "updatedAt": "2024-02-09T00:21:53Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "ef69bf6001c3fd0265b605a4e17a52d05b1194aa",
      "headRepository": "kamronbatman/oauth-identity-chaining",
      "headRefName": "kbatman/consistent-spacing",
      "headRefOid": "7aa21c7af7fb05ed0e89bc574d650f45e2e374b7",
      "closedAt": "2024-02-08T23:39:25Z",
      "mergedAt": "2024-02-08T23:39:25Z",
      "mergedBy": "bc-pi",
      "mergeCommit": {
        "oid": "efd7703a3c2dac68f00a0cdc04548d3926542fe3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5vaGIv",
          "commit": {
            "abbreviatedOid": "35591e9"
          },
          "author": "kamronbatman",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-08T01:16:10Z",
          "updatedAt": "2024-02-08T01:16:10Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Note that this already had a space. I assume we should have spaces, but if not, then we can do it the other way around. I am not married to either style.",
              "createdAt": "2024-02-08T01:16:10Z",
              "updatedAt": "2024-02-08T01:16:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5vi08m",
          "commit": {
            "abbreviatedOid": "35591e9"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-08T22:51:51Z",
          "updatedAt": "2024-02-08T22:51:51Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Adding a space on the two lines with `\"access_token\":` kinda throws off the formatting of the right side of the example. I'd want to avoid that by re-flowing the JWT in them to have uniform line breaks on that side and still stay under the line length (suggested) limit. Or just go with the no spaces style throughout. The latter is probably easier/better anyway. If we even really need to have consistent spacing... ",
              "createdAt": "2024-02-08T22:51:51Z",
              "updatedAt": "2024-02-08T22:51:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5vi4mF",
          "commit": {
            "abbreviatedOid": "35591e9"
          },
          "author": "kamronbatman",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-08T23:07:29Z",
          "updatedAt": "2024-02-08T23:07:29Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "yeah, I am ok with no spaces if that is easier and ok.",
              "createdAt": "2024-02-08T23:07:29Z",
              "updatedAt": "2024-02-08T23:07:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5vi8Xl",
          "commit": {
            "abbreviatedOid": "7aa21c7"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Thanks for the update - LGTM now. ",
          "createdAt": "2024-02-08T23:24:00Z",
          "updatedAt": "2024-02-08T23:24:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 78,
      "id": "PR_kwDOJubJxM5mxJ2w",
      "title": "Add continuous integration example and move use cases to the appendix",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/78",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "* Moves use cases to the appendix\r\n* Adds new continuous integration use case\r\n\r\nLet me know what you think!",
      "createdAt": "2024-02-13T15:44:01Z",
      "updatedAt": "2024-02-16T11:09:50Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "efd7703a3c2dac68f00a0cdc04548d3926542fe3",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndt-s/add-ci-use-case",
      "headRefOid": "fb9f794305d865f0aaca958126e6b5920cd891f4",
      "closedAt": "2024-02-16T09:19:33Z",
      "mergedAt": "2024-02-16T09:19:33Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "2e30a3d1dbb9d093a23a0c3f99821e0e5dd1a08d"
      },
      "comments": [
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "rendered preview of this PR can be seen https://drafts.oauth.net/oauth-identity-chaining/arndt-s/add-ci-use-case/draft-ietf-oauth-identity-chaining.html ",
          "createdAt": "2024-02-15T00:01:56Z",
          "updatedAt": "2024-02-15T00:01:56Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5wJZ80",
          "commit": {
            "abbreviatedOid": "c2bd0de"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks @arndt-s, I've got a small editorial suggestion but otherwise think the use case is definitely a worthwhile addition. \r\n",
          "createdAt": "2024-02-14T23:48:01Z",
          "updatedAt": "2024-02-14T23:52:01Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Suggest a minor change in wording here (that also anticipates the likely merge of #76):\r\n\r\n```suggestion\r\nThis sections outlines some use cases where the identity and authorization chaining described in this document can be applied. This section is not complete and other use cases not mentioned here are also valid.\r\n```",
              "createdAt": "2024-02-14T23:48:01Z",
              "updatedAt": "2024-02-14T23:52:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5wJcFv",
          "commit": {
            "abbreviatedOid": "5126851"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-14T23:59:29Z",
          "updatedAt": "2024-02-14T23:59:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM5wOuna",
          "commit": {
            "abbreviatedOid": "5126851"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-15T14:20:45Z",
          "updatedAt": "2024-02-15T14:20:45Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "per Dr. Kelley W Burgin:\r\n\r\n```suggestion\r\n## Continuous Integration Accessing External Resources\r\n```",
              "createdAt": "2024-02-15T14:20:45Z",
              "updatedAt": "2024-02-15T14:20:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM5wWMtJ",
          "commit": {
            "abbreviatedOid": "fb9f794"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-16T11:09:29Z",
          "updatedAt": "2024-02-16T11:09:50Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "replace \"fined\" with \"fine\"",
              "createdAt": "2024-02-16T11:09:29Z",
              "updatedAt": "2024-02-16T11:09:50Z"
            }
          ]
        }
      ]
    },
    {
      "number": 80,
      "id": "PR_kwDOJubJxM5nFAQB",
      "title": "Fix typos",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/80",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Fixes some typos ",
      "createdAt": "2024-02-16T11:47:38Z",
      "updatedAt": "2024-02-16T13:22:18Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "2e30a3d1dbb9d093a23a0c3f99821e0e5dd1a08d",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndt-s/fix_typos",
      "headRefOid": "0594c0ed7f4e0ec77f1907c8d79c381e141be7b9",
      "closedAt": "2024-02-16T13:22:17Z",
      "mergedAt": "2024-02-16T13:22:17Z",
      "mergedBy": "bc-pi",
      "mergeCommit": {
        "oid": "95a954d90e9d39d3b445014a871fce04b739e233"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5wWcz6",
          "commit": {
            "abbreviatedOid": "0594c0e"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-16T11:50:09Z",
          "updatedAt": "2024-02-16T11:50:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM5wXRq5",
          "commit": {
            "abbreviatedOid": "0594c0e"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-16T13:22:08Z",
          "updatedAt": "2024-02-16T13:22:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 81,
      "id": "PR_kwDOJubJxM5nFCTz",
      "title": "Add CODEOWNERS file",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/81",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Adds a CODEOWNERS file with the authors of this draft.",
      "createdAt": "2024-02-16T11:53:17Z",
      "updatedAt": "2024-03-08T14:54:23Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "2e30a3d1dbb9d093a23a0c3f99821e0e5dd1a08d",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndt-s/add_codeowners",
      "headRefOid": "385eeddb9aa78300ac4e854bb7a1acdd6d6539a3",
      "closedAt": "2024-03-08T14:54:22Z",
      "mergedAt": "2024-03-08T14:54:22Z",
      "mergedBy": "aaronpk",
      "mergeCommit": {
        "oid": "8854b16fb25dfeaa0026ba4927ba26336f573f54"
      },
      "comments": [
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "@aaronpk can you please add Kelly and Pieter into the identity-chaining team?",
          "createdAt": "2024-02-16T11:54:44Z",
          "updatedAt": "2024-02-16T11:54:44Z"
        },
        {
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "body": "I need them to accept the invites to the org before I can add them into the team.",
          "createdAt": "2024-02-16T17:18:29Z",
          "updatedAt": "2024-02-16T17:18:29Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There's also already a [CODEOWNERS](https://github.com/oauth-wg/oauth-identity-chaining/blob/main/.github/CODEOWNERS) file (that has errors) in the [.github/](https://github.com/oauth-wg/oauth-identity-chaining/tree/main/.github) directory that the I-D template repo setup process put there. We should probably get that one fixed up with the right people/accounts rather than add a new one? ",
          "createdAt": "2024-02-16T22:07:09Z",
          "updatedAt": "2024-02-16T22:18:04Z"
        },
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "@aaronpk @bc-pi I updated the PR with the github handles we have available.",
          "createdAt": "2024-03-08T11:58:25Z",
          "updatedAt": "2024-03-08T11:58:25Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5yvex6",
          "commit": {
            "abbreviatedOid": "385eedd"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-08T14:50:42Z",
          "updatedAt": "2024-03-08T14:50:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 83,
      "id": "PR_kwDOJubJxM5nyfXf",
      "title": "remove recommendation to not use requested_token_type",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/83",
      "state": "MERGED",
      "author": "bc-pi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "remove recommendation to not use RFC8693's requested_token_type (fix issue #82)\r\n\r\npreview of editor's copy https://drafts.oauth.net/oauth-identity-chaining/relax-should-not-request-token-type/draft-ietf-oauth-identity-chaining.html ",
      "createdAt": "2024-02-23T19:52:55Z",
      "updatedAt": "2024-04-24T19:04:53Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "d05faa5891a52783b35fe7623abcc54e1e2f7998",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "relax-should-not-request-token-type",
      "headRefOid": "db226093158a4a79613788efc2a92b39c074af48",
      "closedAt": "2024-04-24T19:04:53Z",
      "mergedAt": "2024-04-24T19:04:52Z",
      "mergedBy": "bc-pi",
      "mergeCommit": {
        "oid": "781eeea1760504477fd37b0e7a666650775f8346"
      },
      "comments": [
        {
          "author": "gffletch",
          "authorAssociation": "NONE",
          "body": "I\u2019m good with this as well as it will close issue #84 :)",
          "createdAt": "2024-03-06T17:27:54Z",
          "updatedAt": "2024-03-06T17:27:54Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5xqNZU",
          "commit": {
            "abbreviatedOid": "db22609"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "I have no problems with this",
          "createdAt": "2024-02-28T17:44:54Z",
          "updatedAt": "2024-02-28T17:44:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM5ydtWI",
          "commit": {
            "abbreviatedOid": "db22609"
          },
          "author": "gffletch",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-06T17:28:15Z",
          "updatedAt": "2024-03-06T17:28:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM5yuNwq",
          "commit": {
            "abbreviatedOid": "db22609"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-08T11:50:48Z",
          "updatedAt": "2024-03-08T11:50:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 87,
      "id": "PR_kwDOJubJxM5o41N5",
      "title": "Nitpick - referrers -> refers in the intro",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/87",
      "state": "MERGED",
      "author": "dhs-aws",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fix a minor spelling mistake.",
      "createdAt": "2024-03-06T20:51:41Z",
      "updatedAt": "2024-04-24T19:04:27Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "d05faa5891a52783b35fe7623abcc54e1e2f7998",
      "headRepository": "dhs-aws/oauth-identity-chaining",
      "headRefName": "patch-1",
      "headRefOid": "d8deecf626c8d52a2d953e2727072f8bb47561ff",
      "closedAt": "2024-04-24T19:04:27Z",
      "mergedAt": "2024-04-24T19:04:27Z",
      "mergedBy": "bc-pi",
      "mergeCommit": {
        "oid": "9c5e06622ed6a3c29fe08591045de2ba2a4c6244"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM5yfRy2",
          "commit": {
            "abbreviatedOid": "d8deecf"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-06T20:57:00Z",
          "updatedAt": "2024-03-06T20:57:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM5yfmXB",
          "commit": {
            "abbreviatedOid": "d8deecf"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-06T21:42:43Z",
          "updatedAt": "2024-03-06T21:42:43Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM5yuNc2",
          "commit": {
            "abbreviatedOid": "d8deecf"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-08T11:50:08Z",
          "updatedAt": "2024-03-08T11:50:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 90,
      "id": "PR_kwDOJubJxM50cPEi",
      "title": "[Kelley] add sender constraints",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/90",
      "state": "CLOSED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-04T12:35:23Z",
      "updatedAt": "2024-10-08T14:56:53Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "781eeea1760504477fd37b0e7a666650775f8346",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "kelley/add-sender-constraints",
      "headRefOid": "565530b7ad394734b48152918b858069766f5790",
      "closedAt": "2024-10-08T14:56:53Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6AsiaD",
          "commit": {
            "abbreviatedOid": "43fc5d6"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-04T15:23:46Z",
          "updatedAt": "2024-07-04T15:23:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6AsjfV",
          "commit": {
            "abbreviatedOid": "43fc5d6"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "There appears to be issues on lines 140,142 163 and 241 (I suspect trailing whitespaces). @arndt-s can you update the PR with these changes (I don't seem to be able to edit it).",
          "createdAt": "2024-07-04T15:26:42Z",
          "updatedAt": "2024-07-04T15:26:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6AxDeo",
          "commit": {
            "abbreviatedOid": "43fc5d6"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T09:30:49Z",
          "updatedAt": "2024-07-05T09:30:50Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Is this in regards to authorization server in Domain A or B or both? ",
              "createdAt": "2024-07-05T09:30:50Z",
              "updatedAt": "2024-07-05T09:30:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6AyUnL",
          "commit": {
            "abbreviatedOid": "43fc5d6"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T12:57:33Z",
          "updatedAt": "2024-07-05T12:57:34Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "RFC8693 does not specify a `chained_in` parameter. Do I understand correctly that this is rather a claim within the JWT assertion used to transfer cnf information from Authorization Server in domain A to Authorization Server in domain B?",
              "createdAt": "2024-07-05T12:57:33Z",
              "updatedAt": "2024-07-05T12:57:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6AyU4O",
          "commit": {
            "abbreviatedOid": "43fc5d6"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T12:58:12Z",
          "updatedAt": "2024-07-05T12:58:12Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "This seems duplicated. In the overview section we already have \r\n\r\n> Section [Examples](#examples) includes two additional examples that describe how this flow is used. In one example, the resource server acts as the client and in the other, the authorization server acts as the client.",
              "createdAt": "2024-07-05T12:58:12Z",
              "updatedAt": "2024-07-05T12:58:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6AyWH5",
          "commit": {
            "abbreviatedOid": "43fc5d6"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T13:01:11Z",
          "updatedAt": "2024-07-05T13:01:11Z",
          "comments": [
            {
              "originalPosition": 107,
              "body": "Does this work if the resource server acts as a client? Thinking out loud:\r\n\r\n```\r\nT0: AS1 issues AT to Alice.\r\nT1: Alice presents AT to R1. R1 needs to call R2 (in domain 2).\r\nT2: performs token exchange to AS1 (fails as AT is bound).\r\n```",
              "createdAt": "2024-07-05T13:01:11Z",
              "updatedAt": "2024-07-05T13:01:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6A1sTs",
          "commit": {
            "abbreviatedOid": "43fc5d6"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T17:49:52Z",
          "updatedAt": "2024-07-06T17:49:52Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Both",
              "createdAt": "2024-07-06T17:49:52Z",
              "updatedAt": "2024-07-06T17:49:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6A1sWx",
          "commit": {
            "abbreviatedOid": "43fc5d6"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T17:52:08Z",
          "updatedAt": "2024-07-06T17:52:08Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Suggest deleting this",
              "createdAt": "2024-07-06T17:52:08Z",
              "updatedAt": "2024-07-06T17:52:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6A1sZQ",
          "commit": {
            "abbreviatedOid": "43fc5d6"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T17:53:54Z",
          "updatedAt": "2024-07-06T17:53:54Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "I invented \"chained_id\" to carry the \"cnf\" claim. And yes, you understand correctly",
              "createdAt": "2024-07-06T17:53:54Z",
              "updatedAt": "2024-07-06T17:53:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6A-eYn",
          "commit": {
            "abbreviatedOid": "565530b"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T16:45:10Z",
          "updatedAt": "2024-07-08T16:45:10Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "I think I don't understand. This is in a list of token request parameters but is supposed to be a JWT claim? ",
              "createdAt": "2024-07-08T16:45:10Z",
              "updatedAt": "2024-07-08T16:53:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6A-hz8",
          "commit": {
            "abbreviatedOid": "565530b"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "In the related issue #86 I'd left [a comment](https://github.com/oauth-wg/oauth-identity-chaining/issues/86#issuecomment-2077999207) with a number of things that'd need to be accounted for or a least considered in adding support for sender constraining to this draft, which I don't believe have been addressed in this PR.  That aforementioned comment copied below for ease of access. \r\n\r\n> A rough sketch of things that likely need to be accounted for or a least considered in this effort:\r\n>\r\n> * checking the binding on inbound token of [Token Exchange](https://www.ietf.org/archive/id/draft-ietf-oauth-identity-chaining-01.html#name-token-exchange) request. No standard defined here. Might not even be feasible or make sense depending on deployment (i.e. the RS acting as the client doesn't have access to the bound key)\r\n> * binding the token returned from Token Exchange. The request could be MTLS or have a DPoP header, which is kinda implied per standards. And the returned JWT could be bound with the respective `cnf` claim and method, which is maybe implied by standards but not explicitly written down anywhere (that I know of).\r\n> * checking the binding on inbound token/assertion of the [Access Token Request](https://www.ietf.org/archive/id/draft-ietf-oauth-identity-chaining-01.html#name-access-token-request). The request could be MTLS or have a DPoP header, which is kinda implied per standards but kinda leaves much to the imagination, and checked against the `cnf` claim of the JWT authz grant. The presence of the `cnf` claim might be sufficient to say the thing is bound and suggest/require checking it (implementations I know about would just ignore it, however). But maybe a new grant type would make sense to clearly convey the intent (also using `urn:ietf:params:oauth:grant-type:jwt-bearer` for a non-bearer thing is awkward). \r\n> * binding the resultant access token. The request could be MTLS or have a DPoP header and I think this is covered/implied by the existing specs to say that the issued access token should/could be bound a la [DPoP Access Token Request](https://www.rfc-editor.org/rfc/rfc9449.html#name-dpop-access-token-request) and [Mutual-TLS Client Certificate-Bound Access Tokens](https://www.rfc-editor.org/rfc/rfc8705.html#name-mutual-tls-client-certifica). \r\n>\r\n> The [Authorization server acting as client](https://www.ietf.org/archive/id/draft-ietf-oauth-identity-chaining-01.html#name-authorization-server-acting) flips around nearly all of the pieces above to make them unworkable. I guess it'd need separate treatment with the definition of something like a proxied \"trust me\" this is the cnf I need in the final access token. IIRC Kelley had some prior work toward this end somewhere but I can't seem to find it at the moment. Or maybe sender constraining is just out of scope in the AS as client proxy case. \r\n\r\n\r\n",
          "createdAt": "2024-07-08T16:52:21Z",
          "updatedAt": "2024-07-08T16:52:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6A-i77",
          "commit": {
            "abbreviatedOid": "565530b"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T16:54:48Z",
          "updatedAt": "2024-07-08T16:54:48Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "I think this would preclude the RS acting as the client case ",
              "createdAt": "2024-07-08T16:54:48Z",
              "updatedAt": "2024-07-08T16:54:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 91,
      "id": "PR_kwDOJubJxM50u8Mj",
      "title": "fix discrepancy between alphabetic numbering of the diagram and text in the resource acting as client example",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/91",
      "state": "MERGED",
      "author": "bc-pi",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "fix #88 Figure 6 step naming misalignment ",
      "createdAt": "2024-07-08T19:01:58Z",
      "updatedAt": "2024-07-08T19:07:35Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "781eeea1760504477fd37b0e7a666650775f8346",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "fix-off-by-one-88",
      "headRefOid": "a7a7d61b6a8ec269b6ccc5a3c09bc7020835cb87",
      "closedAt": "2024-07-08T19:07:34Z",
      "mergedAt": "2024-07-08T19:07:34Z",
      "mergedBy": "bc-pi",
      "mergeCommit": {
        "oid": "01a562ffb53f91db9781c282477275007c930b68"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 94,
      "id": "PR_kwDOJubJxM539sdT",
      "title": "Added use cases",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/94",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Added uses cases to the appendix (see issue #68 )",
      "createdAt": "2024-08-09T15:53:32Z",
      "updatedAt": "2024-10-04T10:01:03Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "13e44f9936b1db71b591f91526f4bd7be5898dd3",
      "headRepository": "PieterKas/ietf-identity-chaining",
      "headRefName": "patch-7",
      "headRefOid": "2db0e45383e53079f87a90aa704744590af298fd",
      "closedAt": "2024-10-04T10:01:03Z",
      "mergedAt": "2024-10-04T10:01:03Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "598fcb8bff96c3d49c88bd5f2c585089425994e6"
      },
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@aaronpk please review this PR - I added the use cases relevant to your draft.",
          "createdAt": "2024-08-09T15:54:22Z",
          "updatedAt": "2024-08-09T15:54:22Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@aaronpk, @bc-pi I added some additional details to the use cases to illustrate the use cases Aaron describes in his identity assertion authz draft.",
          "createdAt": "2024-09-20T15:42:01Z",
          "updatedAt": "2024-09-20T15:42:01Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@arndt-s can you merge this pull request? I don't have write permissions.",
          "createdAt": "2024-09-30T19:30:49Z",
          "updatedAt": "2024-09-30T19:30:49Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6E97t8",
          "commit": {
            "abbreviatedOid": "8aa30cd"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-09T18:31:06Z",
          "updatedAt": "2024-08-09T18:31:07Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I must admit that it's not obvious to me how the use-case described is facilitated by the functionality in the document. ",
              "createdAt": "2024-08-09T18:31:06Z",
              "updatedAt": "2024-08-09T18:31:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6E-FTQ",
          "commit": {
            "abbreviatedOid": "8aa30cd"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-09T18:59:38Z",
          "updatedAt": "2024-08-09T18:59:38Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Yeah. I went back and forth about how much the use case had to be focused on the scenarios as opposed to describing how the mechanism enables it. I decided to be consistent with the other use cases (which actually pre-dated the spec).\r\n\r\nPerhaps this section needs to be expanded to explain how the spec address the use cases as well (and that needs to be done for all the use cases I think). \r\n\r\nWhat do you think?",
              "createdAt": "2024-08-09T18:59:38Z",
              "updatedAt": "2024-08-09T18:59:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6FJRkN",
          "commit": {
            "abbreviatedOid": "8aa30cd"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-08-12T18:55:29Z",
          "updatedAt": "2024-08-12T18:55:30Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "To be honest, my comment was made in the context of reading/reviewing this PR in isolation. I could not clearly make the mental connection myself between the described use case and the details of the spec. I don't recall encountering the same thing previously when reading the other use cases. ",
              "createdAt": "2024-08-12T18:55:30Z",
              "updatedAt": "2024-08-12T18:55:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6LLUum",
          "commit": {
            "abbreviatedOid": "2db0e45"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-28T13:08:44Z",
          "updatedAt": "2024-09-28T13:08:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 95,
      "id": "PR_kwDOJubJxM55-M2s",
      "title": "Add sender constrained tokens (redo)",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/95",
      "state": "CLOSED",
      "author": "kburgin3",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Add sender constrained/proof of possession tokens if the initial inbound token had a proof of possession ",
      "createdAt": "2024-08-30T12:55:36Z",
      "updatedAt": "2024-11-04T14:06:25Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "598fcb8bff96c3d49c88bd5f2c585089425994e6",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "add-sender-constrained-tokens",
      "headRefOid": "d8aa7c171ac2d1fb652bc9bfdbff7752db61b16f",
      "closedAt": "2024-11-04T14:06:25Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "Closing this in favour of https://github.com/oauth-wg/oauth-identity-chaining/pull/102",
          "createdAt": "2024-11-04T14:06:23Z",
          "updatedAt": "2024-11-04T14:06:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6IR5PY",
          "commit": {
            "abbreviatedOid": "60a0379"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-06T14:14:01Z",
          "updatedAt": "2024-09-06T14:43:16Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Readers may think this includes the assertion token. I believe limiting this to access tokens makes it more clear.\r\n```suggestion\r\nEither authorization server MAY issue sender constrained access tokens. There are currently two options for sender constrained tokens: Mutually Authenticated TLS (mTLS) {{RFC8705}} and Demonstrating Proof of Possessions (DPoP) {{RFC9449}}.\r\n```",
              "createdAt": "2024-09-06T14:14:01Z",
              "updatedAt": "2024-09-06T14:43:16Z"
            },
            {
              "originalPosition": 41,
              "body": "I'm not sure how AS-A would be able to verify the proof of possession:\r\n- If mTLS is used the connecting peer of AS-A is RS-A, which key would differ to the one present in the cnf claim (\"clients\" key in \"cnf\" vs \"RS\" key in mTLS)\r\n- If DPoP the proof could be \"forwarded\" but how would AS-A know what audience, htm, htu to expect? And they'll differ to the endpoint and method used during token exchange.",
              "createdAt": "2024-09-06T14:28:28Z",
              "updatedAt": "2024-09-06T14:43:16Z"
            },
            {
              "originalPosition": 55,
              "body": "If AS of domain B does not support sender constraining tokens it should still be able to issue an access token (but without 'cnf'). Otherwise, chaining from sender constraint domain to non-constraint domain won't be possible.",
              "createdAt": "2024-09-06T14:41:49Z",
              "updatedAt": "2024-09-06T14:43:16Z"
            },
            {
              "originalPosition": 55,
              "body": "Pieter suggested to add a metadata field to authorization server metadata that indicates if sender constraint tokens are supported or not. \r\n\r\n@PieterKas would that field be general about \"cnf\" is supported or should it rather be \"assertion with requested_cnf is supported\"?\r\n\r\nUpdate (discussed during the call): It should be the latter. Maybe \r\n```\r\n{\r\n   \"requested_cnf_supported\": true\r\n}\r\n```\r\n?",
              "createdAt": "2024-09-06T14:43:02Z",
              "updatedAt": "2024-09-06T15:06:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6ISM-E",
          "commit": {
            "abbreviatedOid": "60a0379"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-06T14:49:56Z",
          "updatedAt": "2024-09-06T15:04:57Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "If domain A doesn't sent `requested_cnf` but domain B requires it we should fail (and I guess state that rule in the draft)",
              "createdAt": "2024-09-06T14:49:56Z",
              "updatedAt": "2024-09-06T15:04:57Z"
            },
            {
              "originalPosition": 41,
              "body": "I only realized during the meeting that the `cnf` key of the resulting access token will not be the same as the `cnf` key of the incoming access tokens.\r\nMaybe it would be good to mention this in the draft. E.g. \r\n\r\n```\r\n* If the JWT authorization grant in the access token request contains a \"requested_cnf\" claim **with the key of the client performing the token exchange. This will bind the access token for domain B to the client planning to use it.**\r\n```",
              "createdAt": "2024-09-06T15:04:40Z",
              "updatedAt": "2024-09-06T15:04:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6JSMnH",
          "commit": {
            "abbreviatedOid": "822d6d7"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-13T14:10:26Z",
          "updatedAt": "2024-09-13T14:10:26Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "requested_cnf_supported_dpop\r\nrequested_cnf_supported_mtls",
              "createdAt": "2024-09-13T14:10:26Z",
              "updatedAt": "2024-09-13T14:10:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6JSQid",
          "commit": {
            "abbreviatedOid": "822d6d7"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-13T14:17:25Z",
          "updatedAt": "2024-09-13T14:17:25Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "\"of its private key..\"\r\nAdd to security considerations: why?: for consistency of end-to-end sender constrained tokens\r\n\"Step (B)\" to maintain the practice of sender constraining tokens throughout, or something like that",
              "createdAt": "2024-09-13T14:17:25Z",
              "updatedAt": "2024-09-13T14:17:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6JSWZQ",
          "commit": {
            "abbreviatedOid": "822d6d7"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-13T14:27:21Z",
          "updatedAt": "2024-09-13T14:27:21Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "supports -> requires",
              "createdAt": "2024-09-13T14:27:21Z",
              "updatedAt": "2024-09-13T14:27:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6JSY4q",
          "commit": {
            "abbreviatedOid": "822d6d7"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-13T14:31:53Z",
          "updatedAt": "2024-09-13T14:31:54Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "AS MUST verify the pop for the private key corresponding to the cnf claim",
              "createdAt": "2024-09-13T14:31:53Z",
              "updatedAt": "2024-09-13T14:31:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6KGAoF",
          "commit": {
            "abbreviatedOid": "bca89c6"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Getting the document rendering fixed and maybe talking about some of this seems needed before more review or commenting here is productive. ",
          "createdAt": "2024-09-19T22:06:14Z",
          "updatedAt": "2024-09-19T22:47:06Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "https://drafts.oauth.net/oauth-identity-chaining/kelley/add-sender-constraints/draft-ietf-oauth-identity-chaining.html#name-overview this currently shows up as \r\n\r\n> Section [Appendix B](https://drafts.oauth.net/oauth-identity-chaining/kelley/add-sender-constraints/draft-ietf-oauth-identity-chaining.html#examples) includes two additional",
              "createdAt": "2024-09-19T22:06:15Z",
              "updatedAt": "2024-09-19T22:47:06Z"
            },
            {
              "originalPosition": 23,
              "body": "also Possession is singular \r\n```suggestion\r\nEither authorization server MAY issue sender constrained access tokens. There are currently two options for sender constrained tokens: Mutually Authenticated TLS (mTLS) {{RFC8705}} and Demonstrating Proof of Possession (DPoP) {{RFC9449}}.\r\n```",
              "createdAt": "2024-09-19T22:06:18Z",
              "updatedAt": "2024-09-19T22:47:06Z"
            },
            {
              "originalPosition": 14,
              "body": "Actually that's the preview for a different branch and I don't see one for this branch and I don't know why \r\n\r\nhttps://drafts.oauth.net/oauth-identity-chaining/",
              "createdAt": "2024-09-19T22:15:14Z",
              "updatedAt": "2024-09-19T22:47:06Z"
            },
            {
              "originalPosition": 14,
              "body": "oh, it's because the \"build\" for this PR failed \r\n\r\nhttps://github.com/oauth-wg/oauth-identity-chaining/actions/runs/10864604120/job/30150062041?pr=95\r\n\r\n```\r\n...\r\n/github/workspace/draft-ietf-oauth-identity-chaining.xml(654): Warning: Artwork too wide, reducing indentation from 0 to 0\r\n/github/workspace/draft-ietf-oauth-identity-chaining.xml(652): Warning: Figure too wide, reducing indentation from 3 to 1\r\n/github/workspace/draft-ietf-oauth-identity-chaining.xml(716): Warning: Artwork too wide, reducing indentation from 0 to 0\r\n/github/workspace/draft-ietf-oauth-identity-chaining.xml(714): Warning: Figure too wide, reducing indentation from 3 to 1\r\n/github/workspace/draft-ietf-oauth-identity-chaining.xml(232): Warning: Too long line found (L361), 3 characters longer than 72 characters: \r\n&subject_token_type=urn%3Aietf%3Aparams%3Aoauth%3Atoken-type%3Aaccess_token\r\nlib/trace.sh draft-ietf-oauth-identity-chaining.html -s xml2rfc-html xml2rfc -q --rfc-base-url https://www.rfc-editor.org/rfc/ --id-base-url https://datatracker.ietf.org/doc/html/ --cache=/github/workspace/.refcache --html --css=lib/v3.css --metadata-js-url=/dev/null draft-ietf-oauth-identity-chaining.xml -o draft-ietf-oauth-identity-chaining.html\r\n/github/workspace/draft-ietf-oauth-identity-chaining.xml(13): Warning: Expected a title or title abbreviation of not more than 40 character for the page header, found 56 characters\r\n147:requested_cnf_supported_mtls \r\n188:  * AS-A MUST verify the proof of possession in the token exchange request. \r\n485:  \r\ndraft-ietf-oauth-identity-chaining.md contains trailing whitespace\r\n*** Run 'make fix-lint' to automatically fix some errors\r\nmake[1]: *** [lib/main.mk:202: lint-whitespace] Error 1\r\nmake[1]: Target 'lint' not remade because of errors.\r\nrm draft-ietf-oauth-identity-chaining.xml\r\nmake: *** [lib/main.mk:16: all] Error 2\r\n```",
              "createdAt": "2024-09-19T22:18:29Z",
              "updatedAt": "2024-09-19T22:47:06Z"
            },
            {
              "originalPosition": 37,
              "body": "I'm not sure about this whole section TBH for a number of reasons that escape my ability to articulate easily or meaningfully. ",
              "createdAt": "2024-09-19T22:18:53Z",
              "updatedAt": "2024-09-19T22:47:06Z"
            },
            {
              "originalPosition": 46,
              "body": "I'm admittedly a bit confused at present but I think the \"the inbound token is sender constrained and the resource server is acting as the Client, the Client MUST provide proof of possession of its private key, using either mTLS or DPoP, in the token exchange request to AS-A in Step (B)\" part isn't possible?",
              "createdAt": "2024-09-19T22:20:41Z",
              "updatedAt": "2024-09-19T22:47:06Z"
            },
            {
              "originalPosition": 56,
              "body": "I suspect that the smart quotes on `\u201ccnf\u201d` and `\u201crequested_cnf\u201d` and elsewhere might be cause of some issues. Maybe. \r\n\r\nAlso a new claim like `requested_cnf` needs to be defined somewhere rather than just casually introduced. And also request to be registered but let's ignore that for the time being. \r\n\r\n",
              "createdAt": "2024-09-19T22:31:02Z",
              "updatedAt": "2024-09-19T22:47:06Z"
            },
            {
              "originalPosition": 79,
              "body": "```suggestion\r\n* If Domain B does not support sender constrained tokens and the Access Token Request is sender constrained, AS-B MAY issue access tokens that are not sender constrained.\r\n```",
              "createdAt": "2024-09-19T22:34:19Z",
              "updatedAt": "2024-09-19T22:47:06Z"
            },
            {
              "originalPosition": 65,
              "body": "wait... what?",
              "createdAt": "2024-09-19T22:35:04Z",
              "updatedAt": "2024-09-19T22:47:06Z"
            },
            {
              "originalPosition": 77,
              "body": "how?",
              "createdAt": "2024-09-19T22:35:51Z",
              "updatedAt": "2024-09-19T22:47:06Z"
            },
            {
              "originalPosition": 79,
              "body": "but what is a sender constrained Access Token Request? ",
              "createdAt": "2024-09-19T22:39:48Z",
              "updatedAt": "2024-09-19T22:47:06Z"
            },
            {
              "originalPosition": 80,
              "body": "would need to request registration of a new error code... ",
              "createdAt": "2024-09-19T22:41:24Z",
              "updatedAt": "2024-09-19T22:47:06Z"
            },
            {
              "originalPosition": 14,
              "body": "that makes it hard to review ",
              "createdAt": "2024-09-19T22:42:32Z",
              "updatedAt": "2024-09-19T22:47:06Z"
            },
            {
              "originalPosition": 80,
              "body": "and we should really try to be consistent with how protocol elements are quoted or ticked or what. Or at least try not to more inconsistent :) ",
              "createdAt": "2024-09-19T22:44:59Z",
              "updatedAt": "2024-09-19T22:47:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6KGKdQ",
          "commit": {
            "abbreviatedOid": "bca89c6"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "non exhaustive review ",
          "createdAt": "2024-09-19T22:50:35Z",
          "updatedAt": "2024-09-19T22:53:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6LGCay",
          "commit": {
            "abbreviatedOid": "bca89c6"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T12:35:44Z",
          "updatedAt": "2024-09-27T12:35:44Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I'm struggling with the web interface that I'm stuck using. Will continue working to resolve ",
              "createdAt": "2024-09-27T12:35:44Z",
              "updatedAt": "2024-09-27T12:35:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6LHIrN",
          "commit": {
            "abbreviatedOid": "bca89c6"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-27T14:29:26Z",
          "updatedAt": "2024-09-27T14:29:27Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "@bc-pi Pieter figured it out. Take a look now",
              "createdAt": "2024-09-27T14:29:26Z",
              "updatedAt": "2024-09-27T14:29:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6L214I",
          "commit": {
            "abbreviatedOid": "eafb88b"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-03T18:29:21Z",
          "updatedAt": "2024-10-03T18:29:22Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "That part doesn't look like it renders like you'd want \r\nhttps://drafts.oauth.net/oauth-identity-chaining/add-sender-constrained-tokens/draft-ietf-oauth-identity-chaining.html#name-overview",
              "createdAt": "2024-10-03T18:29:21Z",
              "updatedAt": "2024-10-03T18:29:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6L97-w",
          "commit": {
            "abbreviatedOid": "bca89c6"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-04T14:49:25Z",
          "updatedAt": "2024-10-04T14:49:25Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Not sure what you mean. Let's talk next week",
              "createdAt": "2024-10-04T14:49:25Z",
              "updatedAt": "2024-10-04T14:49:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6MX_Xd",
          "commit": {
            "abbreviatedOid": "eafb88b"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-08T17:19:07Z",
          "updatedAt": "2024-10-08T17:19:08Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Maybe just:\r\n```suggestion\r\nThe identity and authorization chaining flow outlined below describes how a combination of OAuth 2.0 Token Exchange {{RFC8693}} and JWT Profile for OAuth 2.0 Client Authentication and Authorization Grants {{RFC7523}} are used to address the use cases identified. (#examples) includes two additional examples that describe how this flow is used. In one example, the resource server acts as the client and in the other, the authorization server acts as the client.\r\n```",
              "createdAt": "2024-10-08T17:19:07Z",
              "updatedAt": "2024-10-08T17:19:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6NmrTi",
          "commit": {
            "abbreviatedOid": "d8aa7c1"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T16:24:15Z",
          "updatedAt": "2024-10-17T16:24:15Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "I think \"authorization server's support for DPoP or mTLS sender constrained tokens\" is much too general ",
              "createdAt": "2024-10-17T16:24:15Z",
              "updatedAt": "2024-10-17T16:24:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6NnqJK",
          "commit": {
            "abbreviatedOid": "d8aa7c1"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-17T18:29:08Z",
          "updatedAt": "2024-10-17T18:29:08Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "similar thoughts about below text too ",
              "createdAt": "2024-10-17T18:29:08Z",
              "updatedAt": "2024-10-17T18:29:08Z"
            }
          ]
        }
      ]
    },
    {
      "number": 96,
      "id": "PR_kwDOJubJxM5-Wwhw",
      "title": "Update affiliation of Arndt",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/96",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Update my affiliation",
      "createdAt": "2024-10-11T15:15:20Z",
      "updatedAt": "2024-10-15T17:13:28Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "598fcb8bff96c3d49c88bd5f2c585089425994e6",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndt/change_org",
      "headRefOid": "21fab94405ec5476bffa88f8e4086ad99c512ace",
      "closedAt": "2024-10-15T17:13:26Z",
      "mergedAt": "2024-10-15T17:13:26Z",
      "mergedBy": "bc-pi",
      "mergeCommit": {
        "oid": "6490de847b5c83cd8f1ce56f6a6ff1ade881ec41"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6NGCWf",
          "commit": {
            "abbreviatedOid": "21fab94"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-14T16:46:35Z",
          "updatedAt": "2024-10-14T16:46:35Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "We should update Pieter's too",
              "createdAt": "2024-10-14T16:46:35Z",
              "updatedAt": "2024-10-14T16:46:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6NRFeC",
          "commit": {
            "abbreviatedOid": "21fab94"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-15T17:12:07Z",
          "updatedAt": "2024-10-15T17:12:07Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "yep - see #97 ",
              "createdAt": "2024-10-15T17:12:07Z",
              "updatedAt": "2024-10-15T17:12:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6NRFl5",
          "commit": {
            "abbreviatedOid": "21fab94"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-15T17:12:23Z",
          "updatedAt": "2024-10-15T17:12:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 97,
      "id": "PR_kwDOJubJxM5-tHDO",
      "title": "Updated affiliation for Pieter",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/97",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-15T16:51:41Z",
      "updatedAt": "2024-10-15T17:12:54Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "598fcb8bff96c3d49c88bd5f2c585089425994e6",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-2",
      "headRefOid": "7cccff6b37593798693ccba33fe13930023deda9",
      "closedAt": "2024-10-15T17:12:52Z",
      "mergedAt": "2024-10-15T17:12:52Z",
      "mergedBy": "bc-pi",
      "mergeCommit": {
        "oid": "7d410af29a6f268e23c41141b8d1d4782431d053"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6NRFro",
          "commit": {
            "abbreviatedOid": "7cccff6"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-15T17:12:36Z",
          "updatedAt": "2024-10-15T17:12:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 102,
      "id": "PR_kwDOJubJxM6Azhzp",
      "title": "Confirmation data transfer",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/102",
      "state": "CLOSED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Adds transfer of confirmation data (concretely the `cnf` claim) across trust domains.",
      "createdAt": "2024-11-04T14:05:40Z",
      "updatedAt": "2024-12-09T14:55:57Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "6490de847b5c83cd8f1ce56f6a6ff1ade881ec41",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndts/add_sender_constraint_tokens",
      "headRefOid": "6a24d4035dcdf1cc6fbdb238d81993d6f73c313d",
      "closedAt": "2024-12-09T14:55:57Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "Succeeds #95",
          "createdAt": "2024-11-04T14:06:07Z",
          "updatedAt": "2024-11-04T14:06:07Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@arndt-s is this PR still something we want to merge? Based on discussions at IETF 121, I think we decided to back this out. We can leave it for the time being, but perhaps not merge it?",
          "createdAt": "2024-12-09T12:29:02Z",
          "updatedAt": "2024-12-09T12:29:02Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6P23Tz",
          "commit": {
            "abbreviatedOid": "6a24d40"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-04T16:23:21Z",
          "updatedAt": "2024-11-04T16:23:21Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Is the \"MAY deny a request without proof of posession\" statement\" needed?\r\n\r\nIs the intent here that an authorization server may insist on both proof of possession and client authentication? Perhaps just say that instead. e.g. \"An authorisation server MAY require both client authentication and proof of possession\"",
              "createdAt": "2024-11-04T16:23:21Z",
              "updatedAt": "2024-11-04T16:23:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6P8wuu",
          "commit": {
            "abbreviatedOid": "6a24d40"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-05T09:24:59Z",
          "updatedAt": "2024-11-05T09:24:59Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Yes. I believe this sentence is from the previous proposal. Can probably be omitted as you suggest.",
              "createdAt": "2024-11-05T09:24:59Z",
              "updatedAt": "2024-11-05T09:24:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6P8xVZ",
          "commit": {
            "abbreviatedOid": "6a24d40"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-05T09:25:57Z",
          "updatedAt": "2024-11-05T09:25:57Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "However, thinking about it a bit more, some AS may completely block requests without proof of possession, even when client authentication is used.",
              "createdAt": "2024-11-05T09:25:57Z",
              "updatedAt": "2024-11-05T09:25:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6P9odh",
          "commit": {
            "abbreviatedOid": "6a24d40"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-05T10:58:55Z",
          "updatedAt": "2024-11-05T10:58:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6QAi_8",
          "commit": {
            "abbreviatedOid": "6a24d40"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-05T16:00:25Z",
          "updatedAt": "2024-11-05T16:00:25Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "In that case, perhaps we make client authentication mandatory and optionally allows proof of posession:\r\n\r\n\"If the request contains a sender-constrained `subject_token` the client MUST use client authentication and MAY provide proof of possession. An authorisation server MAY require both client authentication and proof of possession\"\r\n\r\nor we can also be explicit that you need to provide proof of posession, and if you can't you must do client authentication.\r\n\r\n\"If the request contains a sender-constrained `subject_token` the client MUST use client authentication if it is unable to perform proof of posession of the key used to constrain the 'subject open'. An authorisation server MAY require both client authentication and proof of possession\"\r\n\r\n\r\n\r\n",
              "createdAt": "2024-11-05T16:00:25Z",
              "updatedAt": "2024-11-05T16:00:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 112,
      "id": "PR_kwDOJubJxM6EVdiW",
      "title": "Change text to avoid confusion with federation",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/112",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See issue #103",
      "createdAt": "2024-12-06T14:36:42Z",
      "updatedAt": "2024-12-10T09:58:40Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "6490de847b5c83cd8f1ce56f6a6ff1ade881ec41",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-2",
      "headRefOid": "08c7a78d61f3c2e7128ddad0ecc75363263174ae",
      "closedAt": "2024-12-10T09:58:37Z",
      "mergedAt": "2024-12-10T09:58:37Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "778e7b5ef42418af24b896f004a18406a6cd6c15"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6UHnuP",
          "commit": {
            "abbreviatedOid": "08c7a78"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-06T14:43:49Z",
          "updatedAt": "2024-12-06T14:43:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6UH0hU",
          "commit": {
            "abbreviatedOid": "08c7a78"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-12-06T15:05:52Z",
          "updatedAt": "2024-12-06T15:05:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 113,
      "id": "PR_kwDOJubJxM6EVnum",
      "title": "Clarify text describing Step F in Figure 1",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/113",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See issue #104",
      "createdAt": "2024-12-06T14:58:29Z",
      "updatedAt": "2024-12-10T09:59:03Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "6490de847b5c83cd8f1ce56f6a6ff1ade881ec41",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-3",
      "headRefOid": "9ca21960d9dfeb0cddb97391ddc1f20d0c094d87",
      "closedAt": "2024-12-10T09:59:00Z",
      "mergedAt": "2024-12-10T09:59:00Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "c77faf6c177d01fdf7b862bf5b974b9a3f0a19e3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6UHzWM",
          "commit": {
            "abbreviatedOid": "9ca2196"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-06T15:03:37Z",
          "updatedAt": "2024-12-06T15:03:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6UH0XG",
          "commit": {
            "abbreviatedOid": "9ca2196"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2024-12-06T15:05:34Z",
          "updatedAt": "2024-12-06T15:05:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 114,
      "id": "PR_kwDOJubJxM6EWixX",
      "title": "Clarifying origin of initial client token",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/114",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Proposed text to clarify what \"its token\" might be and where it comes from as raised in issue #75 by @aaronpk",
      "createdAt": "2024-12-06T16:59:58Z",
      "updatedAt": "2024-12-16T12:55:55Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "6490de847b5c83cd8f1ce56f6a6ff1ade881ec41",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-4",
      "headRefOid": "f95b62baccc6b0b149c7076f268ddecc6cae285e",
      "closedAt": "2024-12-16T12:55:53Z",
      "mergedAt": "2024-12-16T12:55:53Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "4e36abe600440f1a85871295ccad954e0790d5ea"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6UhTD_",
          "commit": {
            "abbreviatedOid": "f95b62b"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Thank you! This change makes it much clearer and doesn't leave it to the interpretation of the reader what \"its token\" is.",
          "createdAt": "2024-12-10T10:06:00Z",
          "updatedAt": "2024-12-10T10:06:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6VSQdV",
          "commit": {
            "abbreviatedOid": "f95b62b"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-15T15:56:22Z",
          "updatedAt": "2024-12-15T15:56:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 115,
      "id": "PR_kwDOJubJxM6EWqoq",
      "title": "Editorial clarifications",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/115",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Attempt at addressing issue #107",
      "createdAt": "2024-12-06T17:20:11Z",
      "updatedAt": "2025-01-10T13:05:51Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "6490de847b5c83cd8f1ce56f6a6ff1ade881ec41",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-5",
      "headRefOid": "ad242d6bf1bd30e61f5f529b4506486bf76438d1",
      "closedAt": "2025-01-10T13:05:49Z",
      "mergedAt": "2025-01-10T13:05:49Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "213c3337304de7123351d98210bbe688a675744d"
      },
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@kburgin3 I corrected they Typos, can you approve?",
          "createdAt": "2024-12-16T13:21:02Z",
          "updatedAt": "2024-12-16T13:21:02Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6UJgF0",
          "commit": {
            "abbreviatedOid": "794ec9a"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "The (Appendix, (#Example)) include two additional\r\n\r\nshould be (with the \"s\" at the end of include)\r\n\r\nThe (Appendix, (#Example)) includes two additional",
          "createdAt": "2024-12-06T17:45:16Z",
          "updatedAt": "2024-12-06T17:45:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6UJhkF",
          "commit": {
            "abbreviatedOid": "794ec9a"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Also should be a \"s\" in (Appendix, (#Examples))",
          "createdAt": "2024-12-06T17:46:21Z",
          "updatedAt": "2024-12-06T17:46:21Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6XaNlD",
          "commit": {
            "abbreviatedOid": "ad242d6"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Looks good",
          "createdAt": "2025-01-09T15:26:18Z",
          "updatedAt": "2025-01-09T15:26:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 116,
      "id": "PR_kwDOJubJxM6EXKP1",
      "title": "Editorial change in Claims Transcription",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/116",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-12-06T18:43:02Z",
      "updatedAt": "2024-12-16T12:57:46Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "6490de847b5c83cd8f1ce56f6a6ff1ade881ec41",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-6",
      "headRefOid": "325a500c73cc725d76f3b78a987ba83dd692c6c8",
      "closedAt": "2024-12-16T12:57:43Z",
      "mergedAt": "2024-12-16T12:57:43Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "575184d1170fdda7a08c47387b7006cf3cae93c6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6UJ6k1",
          "commit": {
            "abbreviatedOid": "325a500"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-06T18:45:03Z",
          "updatedAt": "2024-12-06T18:45:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6UhUnt",
          "commit": {
            "abbreviatedOid": "325a500"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-10T10:07:58Z",
          "updatedAt": "2024-12-10T10:07:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 117,
      "id": "PR_kwDOJubJxM6Ec8ei",
      "title": "Update diagram in Overview section",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/117",
      "state": "CLOSED",
      "author": "kburgin3",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "There needs to be a RS in Domain A for the last step to make sense (sending the access token to RS B) in the case that AS A is the Abstract Client",
      "createdAt": "2024-12-08T18:41:55Z",
      "updatedAt": "2025-02-14T15:46:14Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "6490de847b5c83cd8f1ce56f6a6ff1ade881ec41",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "kburgin-diagram",
      "headRefOid": "b477e572a14df62ed7c51cadc9b2fde228187bcb",
      "closedAt": "2025-02-14T15:45:59Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't think the inclusion of the resource server helps clarify the concepts or flows in the main section of the draft.\r\n\r\nThe draft is constructed to describe a generic OAuth flow using existing RFCs. The resource server acting as a client and the authorization server acting as a client are specific instances where the resource server acts as a client, or the Authorization server acts as a client.\r\n\r\nI think we are better served by maintaining the generic flow as the main flow and then referencing specific deployments or profiles of this flow in an appendix or in a separate draft. ",
          "createdAt": "2024-12-09T11:07:21Z",
          "updatedAt": "2024-12-09T11:07:21Z"
        },
        {
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "body": "OK, then I believe the last step (Step (F)) should be removed. AS A (in the case that AS A is acting as the abstract client) does not present the token to RS B",
          "createdAt": "2024-12-09T11:31:03Z",
          "updatedAt": "2024-12-09T11:31:03Z"
        },
        {
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Back to needing RS A in Figure 1: Figure 7 (Authorization server acting as client use case) requires RS A to be present. @PieterKas can you explain further your issue with including RS A in Figure 1?",
          "createdAt": "2024-12-09T11:54:09Z",
          "updatedAt": "2024-12-09T11:54:09Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> OK, then I believe the last step (Step (F)) should be removed. AS A (in the case that AS A is acting as the abstract client) does not present the token to RS B\r\n\r\nI am not sure I follow why Step F should be removed from Figure 1. It is the client that obtains an access token and then presents it to the resource server. The AS and the RS acting as clients are not described in this part of the document. The structure we adopted is that we describe the flow in the context of an OAuth client, and then we describe the AS and RS use cases seperately.",
          "createdAt": "2024-12-09T12:22:47Z",
          "updatedAt": "2024-12-09T12:22:47Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Figure 7 (Authorization server acting as client use case) requires RS A to be present. @PieterKas can you explain further your issue with including RS A in Figure 1?\r\n\r\nThe figures and descriptions in the appendix should include the AS and RS acting as clients. I created two pull PRs to describe each of those a bit more. Hopefully that helps.\r\n\r\nRegular OAuth client may want to use this specification as well. Aaron's draft that profiles this flow is a good example of other uses, so the RS or AS acting as clients are really two use cases, but the primary task of this draft is to provide a framework for cross domain identity and authorization chaining. Consequently we should describe the generic case where there is an OAuth Client, and then have specific instances such as RS and AS as clients. ",
          "createdAt": "2024-12-09T12:27:09Z",
          "updatedAt": "2024-12-09T12:27:09Z"
        },
        {
          "author": "bergtau",
          "authorAssociation": "NONE",
          "body": "A picture may paint a thousand words, but it can be challenging to make a single picture paint the same thousand words for everyone. I think maybe using a detailed flow diagram to convey what's in the draft before having introduced the new ideas is asking it to do too much. I might suggest removing the diagram entirely. Here's some suggested Overview text that doesn't refer to a diagram. I expect its not quite what anyone wants, but it's simpler.\r\n \r\n=-=-=-=-=-=-=\r\nThis document describes how to use OAuth exchanges to effect RS-to-RS requests, where the RSes are subject to separate and independent authorities. No assumption is made regarding the trust relationships between the RSes (or their associated ASes) until certain implementation details are decided. However, in every case the identity of the original requester is carried through to the RS that renders the requested data.\r\n\r\nThe general flow is as follows:\r\n\r\n   o A client requests a resource from an RS in Domain A (RS-A), as in a normal OAuth flow.\r\n\r\n   o To complete the request, RS-A needs data from an RS in Domain B (RS-B). That is, RS-A must act as a Client to RS-B. It must obtain a token to complete this request. \r\n\r\n   o Having obtained a valid token, RS-A requests data from RS-B.\r\n\r\nThe details of the token request in the second bullet will depend on the trust relationship between the two domains. Two cases are summarized here, and presented in detail in appendixes. \r\n\r\n   (1) RSes can request tokens from ASes in multiple domains.\r\n      > RS-A asks AS-A for a token to introduce RS-A to AS-B, and receives one.\r\n      > RS-A presents that token to AS-B, and requests a token with RS-A as requester and RS-B as responder, and receives one.\r\n      > RS-A presents the subsequent token to RS-B and obtains data.\r\n\r\n   (2) RSes can request tokens only from the AS in its own domain.\r\n      > RS-A asks AS-A for a token to access RS-B.\r\n      > AS-A asks AS-B for a token with RS-A as requester and RS-B as responder, and receives one.\r\n      > AS-A returns the subsequent token to RS-A.\r\n      > RS-A presents the subsequent token to RS-B and obtains data.\r\n\r\nThe following sections define the tokens, grants, and claims to acheive this flow. Proper understanding and implementation of this document depends on familiarity with OAuth 2.0 Token Exchange [RFC8693] and JWT Profile for OAuth 2.0 Client Authentication and Authorization Grants [RFC7523] etc etc.\r\n=-=-=-=-=-=-=",
          "createdAt": "2024-12-13T02:03:44Z",
          "updatedAt": "2024-12-13T02:03:44Z"
        },
        {
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> A picture may paint a thousand words, but it can be challenging to make a single picture paint the same thousand words for everyone. I think maybe using a detailed flow diagram to convey what's in the draft before having introduced the new ideas is asking it to do too much. I might suggest removing the diagram entirely. Here's some suggested Overview text that doesn't refer to a diagram. I expect its not quite what anyone wants, but it's simpler.\r\n> \r\n> =-=-=-=-=-=-= This document describes how to use OAuth exchanges to effect RS-to-RS requests, where the RSes are subject to separate and independent authorities. No assumption is made regarding the trust relationships between the RSes (or their associated ASes) until certain implementation details are decided. However, in every case the identity of the original requester is carried through to the RS that renders the requested data.\r\n> \r\n> The general flow is as follows:\r\n> \r\n> o A client requests a resource from an RS in Domain A (RS-A), as in a normal OAuth flow.\r\n> \r\n> o To complete the request, RS-A needs data from an RS in Domain B (RS-B). That is, RS-A must act as a Client to RS-B. It must obtain a token to complete this request.\r\n> \r\n> o Having obtained a valid token, RS-A requests data from RS-B.\r\n> \r\n> The details of the token request in the second bullet will depend on the trust relationship between the two domains. Two cases are summarized here, and presented in detail in appendixes.\r\n> \r\n> (1) RSes can request tokens from ASes in multiple domains. > RS-A asks AS-A for a token to introduce RS-A to AS-B, and receives one. > RS-A presents that token to AS-B, and requests a token with RS-A as requester and RS-B as responder, and receives one. > RS-A presents the subsequent token to RS-B and obtains data.\r\n> \r\n> (2) RSes can request tokens only from the AS in its own domain. > RS-A asks AS-A for a token to access RS-B. > AS-A asks AS-B for a token with RS-A as requester and RS-B as responder, and receives one. > AS-A returns the subsequent token to RS-A. > RS-A presents the subsequent token to RS-B and obtains data.\r\n> \r\n> The following sections define the tokens, grants, and claims to acheive this flow. Proper understanding and implementation of this document depends on familiarity with OAuth 2.0 Token Exchange [RFC8693] and JWT Profile for OAuth 2.0 Client Authentication and Authorization Grants [RFC7523] etc etc. =-=-=-=-=-=-=\r\n\r\nI also like the idea of removing Figure 1 in the Overview section. To get it right is too complicated to begin the doc so just leave the steps (A) - (F) in text and point to the appendix for specific use cases (RS as client, AS as client)",
          "createdAt": "2024-12-14T15:32:04Z",
          "updatedAt": "2024-12-14T15:32:04Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I disagree, the figure used to illustrate the flows is often the first thing a reader looks at to try and get a sense of what the document is trying to accomplish and to get a sense of the flows. \r\n\r\nFigure 1 in this draft should represent the flow described in the normative section of the draft. The normative section of the draft describes the interaction between a client in domain A, accessing a resource server in domain B. The current Figure 1 already describes this flow.\r\n\r\nThe non-normative appendix describes use cases where a resources server in Domain A needs to access a resource server in Domain B. There are two variants - with the RS in domain A accessing the AS in domain B directly, and the AS in domain A acting as proxy for all clients (including the RS) in domain A. We have diagrams to explain those flows, and we should make changes to those diagrams to highlight any peculiarities of the those use cases. \r\n\r\n",
          "createdAt": "2024-12-16T13:35:23Z",
          "updatedAt": "2024-12-16T13:35:23Z"
        },
        {
          "author": "bergtau",
          "authorAssociation": "NONE",
          "body": "I'm not against the diagram per se. I'm now reading a TLS draft, the Overview of which refers to data structures defined within the draft itself. I'm finding that I have to drill down into the body of the draft to make sense of the Overview. I got the sense that the same problem was coming up with this diagram. ",
          "createdAt": "2024-12-16T15:42:12Z",
          "updatedAt": "2024-12-16T15:42:12Z"
        },
        {
          "author": "gffletch",
          "authorAssociation": "NONE",
          "body": "Personally, trying to pull in the OAuth client as an abstract concept I think adds confusion to the diagram. Wouldn't it just be easier to change the label of the original diagram from \"Client Domain A\" to \"Protected Resource Domain A\"?  \r\n\r\nThere is a client in play as well but it doesn't matter for the spec. It's the entity that invokes the Protected Resource in Domain A. ",
          "createdAt": "2025-01-10T22:25:28Z",
          "updatedAt": "2025-01-10T22:25:28Z"
        },
        {
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I don't want to die on this hill. I still don't agree, but don't want to hold things up",
          "createdAt": "2025-02-14T15:18:46Z",
          "updatedAt": "2025-02-14T15:18:46Z"
        },
        {
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Diagram is fine as is",
          "createdAt": "2025-02-14T15:46:11Z",
          "updatedAt": "2025-02-14T15:46:11Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 118,
      "id": "PR_kwDOJubJxM6EhfIm",
      "title": "Clarify resource server as client",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/118",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Modified diagram and added additional text to describe the resource server acting as a client.\r\n\r\n",
      "createdAt": "2024-12-09T11:29:22Z",
      "updatedAt": "2025-01-09T15:23:07Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "6490de847b5c83cd8f1ce56f6a6ff1ade881ec41",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-7",
      "headRefOid": "c8af9785b5d33300c13429f0d1ddf13756a54801",
      "closedAt": "2025-01-09T15:23:04Z",
      "mergedAt": "2025-01-09T15:23:04Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "9f85675b4c48477904e446270cf5143e2198014d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6VPoz0",
          "commit": {
            "abbreviatedOid": "29f8939"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-14T15:27:26Z",
          "updatedAt": "2024-12-14T15:27:27Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Same comment as in the AS as OAuth client PR. \r\n'a resource server in one domain (Domain A) may need to access a resource server in another domain (Domain B).' \r\nSuggest eliminating the generic Authorization Servers:\r\n'a resource server in **Domain A** may need to access a resource server in **Domain B**.'",
              "createdAt": "2024-12-14T15:27:27Z",
              "updatedAt": "2024-12-14T15:27:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6VPo5S",
          "commit": {
            "abbreviatedOid": "29f8939"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-14T15:28:50Z",
          "updatedAt": "2024-12-14T15:28:50Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Can we make the box containing 'RS Domain A acting as client' wider so it's not so tall?",
              "createdAt": "2024-12-14T15:28:50Z",
              "updatedAt": "2024-12-14T15:28:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6VSP7k",
          "commit": {
            "abbreviatedOid": "29f8939"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-15T15:46:24Z",
          "updatedAt": "2024-12-15T15:46:24Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Also, in the sentence that starts 'A Resource server may use...', we are talking about the resource server in Domain A, so suggest changing to 'The resource server in Domain A may use...'\r\n\r\nAnd the last sentence, should we say 'OAuth clients' instead of just 'clients' since that's what we said in the previous sentence?",
              "createdAt": "2024-12-15T15:46:24Z",
              "updatedAt": "2024-12-15T15:46:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6VYjBe",
          "commit": {
            "abbreviatedOid": "29f8939"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-16T13:49:16Z",
          "updatedAt": "2024-12-16T13:49:16Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Update made/box widened.",
              "createdAt": "2024-12-16T13:49:16Z",
              "updatedAt": "2024-12-16T13:49:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6VYj2L",
          "commit": {
            "abbreviatedOid": "29f8939"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-16T13:50:29Z",
          "updatedAt": "2024-12-16T13:50:29Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "changes made\r\n\r\nSince we never explicitly reference the OAuth client or introduce any clients that are not OAuth clients, I removed the reference to an OAuth client and simply used client as we do throughout the draft.",
              "createdAt": "2024-12-16T13:50:29Z",
              "updatedAt": "2024-12-16T13:50:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6XaKDv",
          "commit": {
            "abbreviatedOid": "c8af978"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Thanks Pieter. Looks good",
          "createdAt": "2025-01-09T15:21:09Z",
          "updatedAt": "2025-01-09T15:21:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 119,
      "id": "PR_kwDOJubJxM6EhnCN",
      "title": "Clarify AS-as-Client",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/119",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Added text and diagrams to clarify Authorization-server-as-aclient flows.",
      "createdAt": "2024-12-09T11:44:27Z",
      "updatedAt": "2025-01-09T14:28:40Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "36cc6a9e9eb7dc5bf98db2f5845425afa92ffe74",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-8",
      "headRefOid": "ac9c2a6e465ad9121d3f8f08903e396fa381e1ed",
      "closedAt": "2025-01-09T14:28:37Z",
      "mergedAt": "2025-01-09T14:28:37Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "6be8a31242593e760733aaf5057dc74bda35cc96"
      },
      "comments": [
        {
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Why do we say 'resource server' in Domain A and 'protected resource' in Domain B? If the resource server in Domain B needs to chain again (to Domain C) it will become a resource server in the current terminology",
          "createdAt": "2024-12-15T15:43:02Z",
          "updatedAt": "2024-12-15T15:43:02Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Why do we say 'resource server' in Domain A and 'protected resource' in Domain B? If the resource server in Domain B needs to chain again (to Domain C) it will become a resource server in the current terminology\r\n\r\nThe only relevant interaction is when crossing from one domain to the next. We use domain A/Domain B to distinguish between those. \r\n\r\nIf Domain B needs to go to Domain C, Domain B would effectively become Domain A and at a protocol and interaction level everything remains the same. The key is that we are describing what you do when you cross a trust boundary, and you do it the same way, whenever you cross that trust boundary.",
          "createdAt": "2024-12-16T13:19:33Z",
          "updatedAt": "2024-12-16T13:19:33Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6UhKKp",
          "commit": {
            "abbreviatedOid": "e1c9f71"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T09:52:03Z",
          "updatedAt": "2024-12-10T09:53:25Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```on-behalf-of the resource server in Domain A```\r\nAccording to our discussion yesterday this should be something like\r\n```on-behalf-of any client in Domain A (e.g. a resource server)```",
              "createdAt": "2024-12-10T09:52:03Z",
              "updatedAt": "2024-12-10T09:53:25Z"
            },
            {
              "originalPosition": 12,
              "body": "nit: I would have put `acting as client` in brackets.",
              "createdAt": "2024-12-10T09:53:15Z",
              "updatedAt": "2024-12-10T09:53:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6Uia0M",
          "commit": {
            "abbreviatedOid": "e1c9f71"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T11:45:40Z",
          "updatedAt": "2024-12-10T11:45:40Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Agreed +1 - changes made. @arndt-s and @kburgin3 please review.",
              "createdAt": "2024-12-10T11:45:40Z",
              "updatedAt": "2024-12-10T11:45:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6Uia9E",
          "commit": {
            "abbreviatedOid": "e1c9f71"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T11:45:52Z",
          "updatedAt": "2024-12-10T11:45:52Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "change made.",
              "createdAt": "2024-12-10T11:45:52Z",
              "updatedAt": "2024-12-10T11:45:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6VJ2md",
          "commit": {
            "abbreviatedOid": "06e51bb"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-13T14:10:40Z",
          "updatedAt": "2024-12-13T14:10:50Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I think we should settle on the terminology first before merging this.",
              "createdAt": "2024-12-13T14:10:40Z",
              "updatedAt": "2024-12-13T14:11:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6VMI0M",
          "commit": {
            "abbreviatedOid": "a34fc09"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-13T19:28:11Z",
          "updatedAt": "2024-12-13T19:28:11Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "We could also change it later if we decide we want to change terminology - it is consistent with the current terminology and may help people better understand, parse the spec until such time as we decide to change terminology (or not).\r\n\r\n@kburgin3 would love your thoughts on whether it is worth adding this clarification.",
              "createdAt": "2024-12-13T19:28:11Z",
              "updatedAt": "2024-12-13T19:28:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6VPoMN",
          "commit": {
            "abbreviatedOid": "e1c9f71"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-14T15:17:56Z",
          "updatedAt": "2024-12-14T15:17:56Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Why say 'one domain' and 'another domain'? Could just say \r\n\r\n'Under these conditions, an authorization server in **Domain A** may obtain an Access Token from an authorization server in **Domain B** on-behalf-of the resource server in Domain A'",
              "createdAt": "2024-12-14T15:17:56Z",
              "updatedAt": "2024-12-14T15:17:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6VPoP6",
          "commit": {
            "abbreviatedOid": "a34fc09"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-14T15:19:20Z",
          "updatedAt": "2024-12-14T15:19:20Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "> We could also change it later if we decide we want to change terminology - it is consistent with the current terminology and may help people better understand, parse the spec until such time as we decide to change terminology (or not).\r\n> \r\n> @kburgin3 would love your thoughts on whether it is worth adding this clarification.\r\n\r\nSame comment as before. Why not just say \r\n\r\n'...an authorization server in **Domain A** may obtain an Access Token from an authorization server in **Domain B**'\r\n\r\nAlso, in 'This enables clients in Domain A to access a protected resource server in Domain B.' isn't it always the resource server in domain A (not 'clients') who accesses the resource server in Domain B? The AS in domain A does not present the token to the resource server in Domain B.",
              "createdAt": "2024-12-14T15:19:20Z",
              "updatedAt": "2024-12-14T15:22:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6VXZAD",
          "commit": {
            "abbreviatedOid": "3497216"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-16T11:35:32Z",
          "updatedAt": "2024-12-16T11:35:32Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Agreed - made the change. We use the \"one domain\"/\"another domain\" language throughout the doc. I created another issue to review usage and consider replacing them with Domain A/Domain B language.",
              "createdAt": "2024-12-16T11:35:32Z",
              "updatedAt": "2024-12-16T11:35:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6XZKs0",
          "commit": {
            "abbreviatedOid": "ac9c2a6"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-09T13:44:27Z",
          "updatedAt": "2025-01-09T13:44:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 121,
      "id": "PR_kwDOJubJxM6EsQEH",
      "title": "Use \"Actor\" instead of \"(abstract) Client\"",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/121",
      "state": "CLOSED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "The term \"Client\" or \"abstract client\" is very confusing. Based on the point of view and context the term \"client\" can mean very different things.\n\n|Point of view|Context|Who is \"client\"?|\n|----|-----|-----|\n|AS Domain A|OAuth|Any OAuth client|\n|AS Domain A|ID chaining|Either itself, a resource server or any arbitrary OAuth Client|\n|RS Domain A|OAuth|Itself or another client that is calling it|\n|RS Domain A|ID chaining|Itself or its AS|\n|AS Domain B|-|AS or RS in Domain A|\n|RS Domain B|OAuth|Itself|\n|RS Domain B|ID chaining|AS or RS in Domain A|\n\nIf we would continue with the term \"client\" we would need to always specify exactly from what POV and context. Thus, introducing the role of \"actor\".",
      "createdAt": "2024-12-10T11:29:29Z",
      "updatedAt": "2025-02-18T13:26:42Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "c77faf6c177d01fdf7b862bf5b974b9a3f0a19e3",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndt/rename_client_to_actor",
      "headRefOid": "efc828de361786e03ca3dfe545cdff9293dbd9e8",
      "closedAt": "2025-02-18T13:26:42Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> If we would continue with the term \"client\" we would need to always specify exactly from what POV and context. Thus, introducing the role of \"actor\".\r\n\r\nThanks for creating the PR to give an alternative view of how we might describe these concepts. \r\n\r\nThe term \"actor\" was not all that helpful as I ended up having to decode it back to \"who is the client, what is the POV and what is the context\". This introduces an extra layer of indirection that an implementor may get wrong as they figure out the mapping from actor to client. Specifying the POV and the context upfront removes that risk of renewed ambiguity - it is hard to write this down clearly, but I would rather that we try and be clear in the spec, than leaving it to the implementor to figure out (given our own tussles with this topic, I feel the community will benefit from that precision).\r\n\r\nIt also risks introducing a new concept that is not immediately relatable to the existing OAuth specification eco-system and sticking to the existing system allows us to more easily re-use existing drafts that were written for resource owners, clients, authorization servers and resource providers. \r\n\r\nOther editors need to weigh in as well here.",
          "createdAt": "2024-12-10T12:10:09Z",
          "updatedAt": "2024-12-10T12:10:09Z"
        },
        {
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "body": "> This introduces an extra layer of indirection that an implementor may get wrong as they figure out the mapping from actor to client.\r\n\r\nI believe this is only relevant to us as our mental models are based on the client. Generally, I don't think readers need to map from actor to client.\r\n\r\n> It also risks introducing a new concept that is not immediately relatable to the existing OAuth specification eco-system and sticking to the existing system allows us to more easily re-use existing drafts that were written for resource owners, clients, authorization servers and resource providers.\r\n\r\nIn my opinion it's the opposite. Using \"client\" conflicts with the OAuth term, which is different. By using a different term (in the context of this doc only!) we don't overload existing terminology.",
          "createdAt": "2024-12-10T12:31:39Z",
          "updatedAt": "2024-12-10T12:37:57Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": ">In my opinion it's the opposite. Using \"client\" conflicts with the OAuth term, which is different. By using a different term (in the context of this doc only!) we don't overload existing terminology.\r\n\r\nAdding the definition of \"client\" from RFC 6749 for convenience:\r\n\r\n      An application making protected resource requests on behalf of the\r\n      resource owner and with its authorization.  The term \"client\" does\r\n      not imply any particular implementation characteristics (e.g.,\r\n      whether the application executes on a server, a desktop, or other\r\n      devices).\r\n\r\nI believe we are using client in the context of how it was meant to be used. The main draft should stick to using \"client\" since it also allows us to profile and use existing specifications that uses this definition. \r\n\r\nThe fact that a piece of software can act as both resource server and client, or as authorization server and client is something we need to describe, and given how the specification is structures, we only need to define this in the appendix (or maybe not at all, leaving that as an exercise for a profile). \r\n\r\n",
          "createdAt": "2024-12-10T13:14:50Z",
          "updatedAt": "2024-12-10T13:17:10Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> I believe this is only relevant to us as our mental models are based on the client. Generally, I don't think readers need to map from actor to client.\r\n> \r\nIt is crucial that this mapping takes place, otherwise, the implementor cannot use the Oauth specifications we are or re-using here. There is no notion of \"actor\" in any of those drafts - it only describes client, resource server and authorization server behaviour\r\n\r\n",
          "createdAt": "2024-12-10T13:16:40Z",
          "updatedAt": "2024-12-10T13:16:40Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Capturing a few notes from a discussion with @jricher:\r\n\r\n1. Suggested to stick to standard terminology over introducing new concepts.\r\n2. Consider writing use cases as worked examples (e.g. payment gateway accessing information in another domain) and then describe the payment gateway acting as resource server on receiving a request and as client to the authorisation server in their trust domain to get an assertion grant and then as a client to an authorisation server in another trust domain to get an access token).",
          "createdAt": "2024-12-12T15:12:11Z",
          "updatedAt": "2024-12-12T15:12:11Z"
        },
        {
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > If we would continue with the term \"client\" we would need to always specify exactly from what POV and context. Thus, introducing the role of \"actor\".\r\n> \r\n> Thanks for creating the PR to give an alternative view of how we might describe these concepts.\r\n> \r\n> The term \"actor\" was not all that helpful as I ended up having to decode it back to \"who is the client, what is the POV and what is the context\". This introduces an extra layer of indirection that an implementor may get wrong as they figure out the mapping from actor to client. Specifying the POV and the context upfront removes that risk of renewed ambiguity - it is hard to write this down clearly, but I would rather that we try and be clear in the spec, than leaving it to the implementor to figure out (given our own tussles with this topic, I feel the community will benefit from that precision).\r\n> \r\n> It also risks introducing a new concept that is not immediately relatable to the existing OAuth specification eco-system and sticking to the existing system allows us to more easily re-use existing drafts that were written for resource owners, clients, authorization servers and resource providers.\r\n> \r\n> Other editors need to weigh in as well here.\r\n\r\nI'm concerned that using 'Actor' overloads the \"actor\" claim defined in Token Exchange \r\nhttps://datatracker.ietf.org/doc/html/rfc8693\r\n\r\nIf sticking with 'Client', we could say 'OAuth Client' instead of just 'Client'\r\n\r\nI guess I have concerns about both 'Actor' and 'Client'. My suggestion was 'Abstract Client' which didn't seem to get support. \r\n",
          "createdAt": "2024-12-14T15:15:10Z",
          "updatedAt": "2024-12-14T15:15:10Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6Uifdh",
          "commit": {
            "abbreviatedOid": "c65a019"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T11:51:49Z",
          "updatedAt": "2024-12-10T11:51:50Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "The actor in Domain A.",
              "createdAt": "2024-12-10T11:51:49Z",
              "updatedAt": "2024-12-10T11:51:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6UigGR",
          "commit": {
            "abbreviatedOid": "c65a019"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T11:52:49Z",
          "updatedAt": "2024-12-10T11:52:49Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "perhaps delete the (e.g. federation) clause.",
              "createdAt": "2024-12-10T11:52:49Z",
              "updatedAt": "2024-12-10T11:52:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6Uiip7",
          "commit": {
            "abbreviatedOid": "c65a019"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T11:55:05Z",
          "updatedAt": "2024-12-10T11:55:06Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "I think there might be other constraints on the authorization grant beyond scoping the audience (which seems sensible). The concern I have with only addressing the audience is that each AS may have some specific claims it may be looking for in an authorization grant. Happy to hear from others that I am unduly concerned.",
              "createdAt": "2024-12-10T11:55:05Z",
              "updatedAt": "2024-12-10T11:55:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6Uiju0",
          "commit": {
            "abbreviatedOid": "c65a019"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T11:56:00Z",
          "updatedAt": "2024-12-10T11:56:00Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "actor",
              "createdAt": "2024-12-10T11:56:00Z",
              "updatedAt": "2024-12-10T11:56:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6UkVjQ",
          "commit": {
            "abbreviatedOid": "efc828d"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-10T14:43:50Z",
          "updatedAt": "2024-12-10T14:43:50Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "If we are going to use this framing, perhaps we should do it the other way round. The Actor is a component in the system (e.g. software) and it may take on one or more OAuth roles (RFC 6749 describes roles, not components) https://datatracker.ietf.org/doc/html/rfc6749\r\n\r\nIt does raise another question  - what if we have multiple actors taking on different roles, then we have to describe those difference as well. \r\n\r\nThe role vs component distinction is interesting though - we often talk about the as the same, but I don't believe there is any prohibition against a component taking on multiple roles. \r\n\r\nAnother thought - perhaps we only need the Agent concept when we need to describe multiple roles being assumed, which is something we only do in the Appendix, so perhaps the concept of Actor is only used to help illustrate how an Actor can have both Resource Server and Client roles, or an Agent can have both Authorization Server and Client roles (and the context of those roles).\r\n\r\nThe key insight from this exercise is that we need to be specific about the roles assumed and how it relates toothed entities (I think you call this POV and context). I think we also only need this for the appendix. ",
              "createdAt": "2024-12-10T14:43:50Z",
              "updatedAt": "2024-12-10T14:59:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6VJ_65",
          "commit": {
            "abbreviatedOid": "efc828d"
          },
          "author": "gffletch",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-13T14:28:08Z",
          "updatedAt": "2024-12-13T14:28:08Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "I like this framing Pieter. An Actor is a software component in the system that can perform multiple OAuth related roles (e.g. `client` , `authorization server`) within the context of this specification.",
              "createdAt": "2024-12-13T14:28:08Z",
              "updatedAt": "2024-12-13T14:28:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6VKAu0",
          "commit": {
            "abbreviatedOid": "efc828d"
          },
          "author": "gffletch",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "I not sure using a generic term like Actor to really mean a specific software component in the flow is the correct term.",
          "createdAt": "2024-12-13T14:29:36Z",
          "updatedAt": "2024-12-13T14:41:40Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "I'm not sure the last sentence is correct. The software component, or Actor, can perform both the `resource server` OAuth role and the `client` OAuth role.",
              "createdAt": "2024-12-13T14:29:36Z",
              "updatedAt": "2024-12-13T14:41:40Z"
            },
            {
              "originalPosition": 33,
              "body": "Aren't each of these software components Actor's? ",
              "createdAt": "2024-12-13T14:30:50Z",
              "updatedAt": "2024-12-13T14:41:40Z"
            },
            {
              "originalPosition": 56,
              "body": "I'm not sure this `actor` terminology helps as we are using it to explicitly rename just one component in the flow. Yet the Authorization Server in Domain A also acts in multiple roles but we don't label it an \"actor\".",
              "createdAt": "2024-12-13T14:38:10Z",
              "updatedAt": "2024-12-13T14:41:40Z"
            },
            {
              "originalPosition": 61,
              "body": "I'm not sure I understand the intent of this new paragraph. Is it to say that there are two flows by which the access_token can be retrieved?",
              "createdAt": "2024-12-13T14:39:16Z",
              "updatedAt": "2024-12-13T14:41:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6VSQYu",
          "commit": {
            "abbreviatedOid": "c65a019"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-15T15:54:39Z",
          "updatedAt": "2024-12-15T15:54:39Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "> I think there might be other constraints on the authorization grant beyond scoping the audience (which seems sensible). The concern I have with only addressing the audience is that each AS may have some specific claims it may be looking for in an authorization grant. Happy to hear from others that I am unduly concerned.\r\n\r\nDo you have specific other claims that should be added?\r\n\r\nAlso, 'JWT authorization grant  that is audienced to the' sounds weird. How about '...JWT authorization grant that is **audience-restricted** to the...'?",
              "createdAt": "2024-12-15T15:54:39Z",
              "updatedAt": "2024-12-15T15:54:39Z"
            }
          ]
        }
      ]
    },
    {
      "number": 123,
      "id": "PR_kwDOJubJxM6FWpcn",
      "title": "Update Document History",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/123",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-12-16T13:00:13Z",
      "updatedAt": "2024-12-16T13:03:14Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "575184d1170fdda7a08c47387b7006cf3cae93c6",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-2",
      "headRefOid": "f1d4cd9dffd285aa2959d7bbb21879d3094187f5",
      "closedAt": "2024-12-16T13:03:12Z",
      "mergedAt": "2024-12-16T13:03:11Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "36cc6a9e9eb7dc5bf98db2f5845425afa92ffe74"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6VYIk6",
          "commit": {
            "abbreviatedOid": "f1d4cd9"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-16T13:00:57Z",
          "updatedAt": "2024-12-16T13:00:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 124,
      "id": "PR_kwDOJubJxM6HVnDs",
      "title": "Added delegated key binding",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/124",
      "state": "MERGED",
      "author": "kburgin3",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Added a section to the examples section in the appendix that describes how to perform delegated key binding when the AS in Domain A is acting as the client.",
      "createdAt": "2025-01-10T14:13:57Z",
      "updatedAt": "2025-02-14T15:41:55Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "82a0b0d0d0f701c0a61fcdca2ea977a8ebfde3a6",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "kburgin3-delegated-key-binding",
      "headRefOid": "f98805c763d10886bcce1afa9203389495e23278",
      "closedAt": "2025-02-14T15:41:51Z",
      "mergedAt": "2025-02-14T15:41:51Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "a6b9a0215f5370beeeb67d9627f25beb2ce5750d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6Xo3Cn",
          "commit": {
            "abbreviatedOid": "198933f"
          },
          "author": "gffletch",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-10T22:09:23Z",
          "updatedAt": "2025-01-10T22:09:23Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Maybe change to \"For the case...\" or \"In the case...\"",
              "createdAt": "2025-01-10T22:09:23Z",
              "updatedAt": "2025-01-10T22:09:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6Xo6vQ",
          "commit": {
            "abbreviatedOid": "198933f"
          },
          "author": "gffletch",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-10T22:15:20Z",
          "updatedAt": "2025-01-10T22:15:20Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "In some environments, there is a need to bind the final access token to a private key held by the Resource Server in Domain A. This is so that the Resource Server in Domain B can verify the proof of possession of the private key of the Resource Server in Domain A. The proof of possession is sent when the Resource Server in Domain A makes a request of the Resource Server in Domain B using the issued access token.\r\n\r\nI'm not sure that's better but maybe it will be useful :)",
              "createdAt": "2025-01-10T22:15:20Z",
              "updatedAt": "2025-01-10T22:15:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6X0oJx",
          "commit": {
            "abbreviatedOid": "198933f"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-13T16:21:30Z",
          "updatedAt": "2025-01-13T16:21:31Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "couple of observations:\r\n\r\n1. instead of \"final token\" be explicit that this is the access token issued by the authorization server in Domain B.\r\n2. instead of the resource server sending the token, talk about the resource server acting as a client in domain B. alternatively talk about the application that is acting as a resource server, or as a client.\r\n\r\nSome suggestions below:\r\n\r\nIn some environments, there is a need to bind the access token issued by the authorization server in Domain B to a private key held by the Resource Server in Domain A. This is so that the Resource Server in Domain B can verify the proof of possession of the private key of the client in Domain A when the client in Domain A presents the token to the Resource Server in Domain B. Any application in Domain A may act as a client, including applications that are resource servers in Domain A and need to access resource servers in Domain B in order to complete a request.",
              "createdAt": "2025-01-13T16:21:30Z",
              "updatedAt": "2025-01-13T16:21:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6X0qa5",
          "commit": {
            "abbreviatedOid": "198933f"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-13T16:25:22Z",
          "updatedAt": "2025-01-13T16:25:23Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "In the case where the Resource Server is acting as the client, the access token may be constrained using existing techniques as described in Security Considerations (add reference once it is merged)",
              "createdAt": "2025-01-13T16:25:22Z",
              "updatedAt": "2025-01-13T16:25:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6X02yX",
          "commit": {
            "abbreviatedOid": "198933f"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-13T16:45:36Z",
          "updatedAt": "2025-01-13T16:45:36Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "In the case where the Authorization Server is acting as a client is more complicated since the authorisation server in domain A acting as client does not have access to the key material of the client on whose behalf the access token is being requested. \r\n\r\nHowever, the trust relationship between the authorisation server in domain A and the authorization server in domain B can be leveraged to sender constrain the access token issued by the authorisation server in domain B. This can be achieved as follows. The Authorization Server in Domain A verifies proof of posession of the key presented by the client. It then includes the \"cnf\" claim of the client in Domain A in the token request sent to the Authorization Server in Domain B. This can, for example, be accomplished by including a \"requested_cnf\" claim, that contains the \"cnf\" claim of the Resource Server in Domain A, in the assertion authorization grant sent to the Authorization Server in Domain B  The Authorization Server in Domain B then includes a \"cnf\" claim that matches the value of the \"requested_cnf\" claim in the authorization grant in the returned access token. The client in domain A that presents the access token must use the key matching the \"cnf\" claim to generate a DPoP proof or setup a MTLS session when presenting the access token to a resource server in Domain B. ",
              "createdAt": "2025-01-13T16:45:36Z",
              "updatedAt": "2025-01-13T16:45:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6aNHhB",
          "commit": {
            "abbreviatedOid": "c0de84f"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-31T15:47:42Z",
          "updatedAt": "2025-01-31T15:47:42Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "to a private key held by the Resource Server in Domain A -> to a private key held by a Client in Domain A",
              "createdAt": "2025-01-31T15:47:42Z",
              "updatedAt": "2025-01-31T15:47:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6aOfjC",
          "commit": {
            "abbreviatedOid": "9a901c9"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-31T18:14:14Z",
          "updatedAt": "2025-01-31T18:14:14Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "suggested suggestions:\r\n```suggestion\r\nHowever, the trust relationship between the Authorization Server in Domain A and the Authorization Server in Domain B can be leveraged to sender constrain the access token issued by the Authorization Server in domain B. This can be achieved as follows. The Authorization Server in Domain A verifies proof of possession of the key presented by the client. It then conveys the key of the client in Domain A in the token request sent to the Authorization Server in Domain B. This can, for example, be accomplished by including a \"requested_cnf\" claim that contains the \"cnf\" claim of the Resource Server in Domain A, in the assertion authorization grant sent to the Authorization Server in Domain B. The Authorization Server in Domain B then includes a \"cnf\" claim that matches the value of the \"requested_cnf\" claim in the authorization grant in the returned access token. The client in domain A that presents the access token must use the key matching the \"cnf\" claim to generate a DPoP proof or setup a MTLS session when presenting the access token to a resource server in Domain B.\r\n```",
              "createdAt": "2025-01-31T18:14:14Z",
              "updatedAt": "2025-01-31T18:14:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6bFYVC",
          "commit": {
            "abbreviatedOid": "9a901c9"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "DISMISSED",
          "body": "https://github.com/oauth-wg/oauth-identity-chaining/pull/124/files#r1937735575 ",
          "createdAt": "2025-02-07T14:26:24Z",
          "updatedAt": "2025-02-14T15:40:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6bFc5u",
          "commit": {
            "abbreviatedOid": "9a901c9"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Looks good",
          "createdAt": "2025-02-07T14:32:19Z",
          "updatedAt": "2025-02-07T14:32:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6cDZpN",
          "commit": {
            "abbreviatedOid": "f98805c"
          },
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-14T15:37:15Z",
          "updatedAt": "2025-02-14T15:37:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 127,
      "id": "PR_kwDOJubJxM6HWnyA",
      "title": "Remove reference to sd-jwt",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/127",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As described in issue #108, the use of sd-jwt as either an access token or as an assertion grant is undefined and possibly at odds with those drafts and out of scope for the protocol we intend to describe here.",
      "createdAt": "2025-01-10T16:26:41Z",
      "updatedAt": "2025-01-10T19:59:44Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "213c3337304de7123351d98210bbe688a675744d",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-2",
      "headRefOid": "9684e03fc0d544ecc87b96ab14f25ddf9ce33abc",
      "closedAt": "2025-01-10T19:59:43Z",
      "mergedAt": "2025-01-10T19:59:43Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "a7fb5ae19e7e7b848dd9ed635cfc03b39835e6ce"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6Xkt8n",
          "commit": {
            "abbreviatedOid": "9684e03"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-10T17:02:05Z",
          "updatedAt": "2025-01-10T17:02:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 128,
      "id": "PR_kwDOJubJxM6I5Lv1",
      "title": "Security Considerations - Sender Constrain Option 1",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/128",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "First option for security consideration recommending sender constraining tokens: (#125 )",
      "createdAt": "2025-01-24T12:31:31Z",
      "updatedAt": "2025-02-13T15:28:40Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "a7fb5ae19e7e7b848dd9ed635cfc03b39835e6ce",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-2",
      "headRefOid": "fa597057466bbbe5ac40ef2c81e9832a3334e072",
      "closedAt": "2025-02-13T15:28:40Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Comment from Brian, remove reference to refresh tokens.",
          "createdAt": "2025-01-24T15:44:43Z",
          "updatedAt": "2025-01-24T15:44:43Z"
        },
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Comment from Aaron - maybe just link to OAuth 2.1 draft.",
          "createdAt": "2025-01-24T15:46:12Z",
          "updatedAt": "2025-01-24T15:46:12Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 129,
      "id": "PR_kwDOJubJxM6I5N-R",
      "title": "Security Considerations - Sender Constrain Option 2",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/129",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Second option for security consideration recommending sender constraining tokens: (#125 )",
      "createdAt": "2025-01-24T12:35:38Z",
      "updatedAt": "2025-02-13T15:28:30Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "a7fb5ae19e7e7b848dd9ed635cfc03b39835e6ce",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-3",
      "headRefOid": "00f59145fd5df0b68d689bdb1d4e1e1594ea1838",
      "closedAt": "2025-02-13T15:28:30Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 132,
      "id": "PR_kwDOJubJxM6I7Inm",
      "title": "Security Considerations - Sender Constrain Option 3",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/132",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Third variant explicitly referencing OAuth 2.1 (see issue #125)",
      "createdAt": "2025-01-24T17:07:19Z",
      "updatedAt": "2025-02-13T15:27:16Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "d91de074f900ff02eef37b8eaead5aa86b74196f",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-4",
      "headRefOid": "7dc8d6658e59a6572ad2c5f422b7a619e8cab446",
      "closedAt": "2025-02-13T15:27:13Z",
      "mergedAt": "2025-02-13T15:27:13Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "82a0b0d0d0f701c0a61fcdca2ea977a8ebfde3a6"
      },
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@bc-pi - please take look. The intent here is that the reader SHOULD do whatever OAuth 2.1 says to do about sender constraining tokens, so no new requirements are really created (apart from aligning with OAuth 2.1).",
          "createdAt": "2025-01-24T17:10:03Z",
          "updatedAt": "2025-01-24T17:10:03Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6aL1Wr",
          "commit": {
            "abbreviatedOid": "dfbc087"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "I like this one best",
          "createdAt": "2025-01-31T13:42:06Z",
          "updatedAt": "2025-02-13T13:55:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6aOlCx",
          "commit": {
            "abbreviatedOid": "cfaf5d0"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-01-31T18:28:09Z",
          "updatedAt": "2025-01-31T18:28:09Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I think you can and probably should leave the draft # off and the tooling will do more or less what you'd want \r\n```suggestion\r\n  I-D.draft-ietf-oauth-v2-1:\r\n```",
              "createdAt": "2025-01-31T18:28:09Z",
              "updatedAt": "2025-01-31T18:28:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6aOlGc",
          "commit": {
            "abbreviatedOid": "dfbc087"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-01-31T18:28:17Z",
          "updatedAt": "2025-02-13T13:55:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 133,
      "id": "PR_kwDOJubJxM6JqI1r",
      "title": "Update publish.yml",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/133",
      "state": "MERGED",
      "author": "kburgin3",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "v3 to v4",
      "createdAt": "2025-01-31T15:42:28Z",
      "updatedAt": "2025-01-31T15:43:25Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "a7fb5ae19e7e7b848dd9ed635cfc03b39835e6ce",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "kburgin3-patch-1",
      "headRefOid": "251958027ca7c23ca8b7f5fdbf5165907b847f22",
      "closedAt": "2025-01-31T15:43:23Z",
      "mergedAt": "2025-01-31T15:43:23Z",
      "mergedBy": "aaronpk",
      "mergeCommit": {
        "oid": "b8f442f3669c84014b198b953510ece229f0b2f4"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 134,
      "id": "PR_kwDOJubJxM6JqI-E",
      "title": "Update archive.yml",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/134",
      "state": "MERGED",
      "author": "kburgin3",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "v3 to v4",
      "createdAt": "2025-01-31T15:42:46Z",
      "updatedAt": "2025-01-31T15:43:41Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "a7fb5ae19e7e7b848dd9ed635cfc03b39835e6ce",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "kburgin3-patch-2",
      "headRefOid": "f22c6939447a0776856a4355c6b9f6370c0027f9",
      "closedAt": "2025-01-31T15:43:39Z",
      "mergedAt": "2025-01-31T15:43:39Z",
      "mergedBy": "aaronpk",
      "mergeCommit": {
        "oid": "e6e2fdc75f2bffcd65f70e5ed1321e4a6bef8270"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 135,
      "id": "PR_kwDOJubJxM6JqKrF",
      "title": "Update ghpages.yml",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/135",
      "state": "MERGED",
      "author": "kburgin3",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "v3 to v4",
      "createdAt": "2025-01-31T15:46:17Z",
      "updatedAt": "2025-01-31T15:46:36Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "e6e2fdc75f2bffcd65f70e5ed1321e4a6bef8270",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "kburgin3-patch-2",
      "headRefOid": "29efb5262dfe9b154c53574cbc289471aa80af8b",
      "closedAt": "2025-01-31T15:46:34Z",
      "mergedAt": "2025-01-31T15:46:34Z",
      "mergedBy": "aaronpk",
      "mergeCommit": {
        "oid": "d91de074f900ff02eef37b8eaead5aa86b74196f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 138,
      "id": "PR_kwDOJubJxM6LQP3o",
      "title": "Consistent use of \"trust domain\" - Main text only",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/138",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Cleaning up language to be explicit about which trust domain an authorization server and client is active in. Changes are limited to the main text. Separate PRs need to be created for appendixes and use cases.",
      "createdAt": "2025-02-14T14:23:35Z",
      "updatedAt": "2025-02-27T09:44:55Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "82a0b0d0d0f701c0a61fcdca2ea977a8ebfde3a6",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-4",
      "headRefOid": "c63a1d3cf383a57ecd56344643ed89d685146b97",
      "closedAt": "2025-02-27T09:44:52Z",
      "mergedAt": "2025-02-27T09:44:52Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "eb278a45fb6937b6709f7092098f2eb811ad74d0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6cCr5A",
          "commit": {
            "abbreviatedOid": "ee18dff"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Thanks for cleaning things up",
          "createdAt": "2025-02-14T14:26:17Z",
          "updatedAt": "2025-02-14T14:26:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6cYCNh",
          "commit": {
            "abbreviatedOid": "46c1082"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-18T13:19:05Z",
          "updatedAt": "2025-02-18T13:26:30Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I'm not sure on the \"profile\" term here, do you feel like we actually profile those? But tbh, I never really got the concept of \"profile\" - so good chance I'm wrong here.",
              "createdAt": "2025-02-18T13:19:05Z",
              "updatedAt": "2025-02-18T13:26:30Z"
            },
            {
              "originalPosition": 77,
              "body": "```suggestion\r\nThe client in trust domain A performs token exchange as defined in {{RFC8693}} with the authorization server in trust domain A in order to obtain a JWT authorization grant that can be used with the authorization server of trust domain B as specified in section 1.3 of {{RFC6749}}.\r\n```",
              "createdAt": "2025-02-18T13:21:47Z",
              "updatedAt": "2025-02-18T13:26:30Z"
            },
            {
              "originalPosition": 134,
              "body": "```suggestion\r\n: REQUIRED. Authorization grant returned by the authorization server for domain A (see [Token Exchange](#token-exchange) response).\r\n```",
              "createdAt": "2025-02-18T13:23:53Z",
              "updatedAt": "2025-02-18T13:26:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6c8RCK",
          "commit": {
            "abbreviatedOid": "46c1082"
          },
          "author": "PieterKas",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-21T13:28:50Z",
          "updatedAt": "2025-02-21T13:28:50Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "We are taking existing specifications and restricting how they should be used, so that feels like a profile (as opposed to an extension where we add things).",
              "createdAt": "2025-02-21T13:28:50Z",
              "updatedAt": "2025-02-21T13:28:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6drF2R",
          "commit": {
            "abbreviatedOid": "c63a1d3"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-26T17:41:38Z",
          "updatedAt": "2025-02-26T17:41:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6dx2bG",
          "commit": {
            "abbreviatedOid": "c63a1d3"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-27T09:05:46Z",
          "updatedAt": "2025-02-27T09:05:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 140,
      "id": "PR_kwDOJubJxM6MD8s9",
      "title": "Security Considerations: subject token",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/140",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See #98",
      "createdAt": "2025-02-21T14:54:02Z",
      "updatedAt": "2025-02-27T09:47:26Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "eb278a45fb6937b6709f7092098f2eb811ad74d0",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-5",
      "headRefOid": "65fda0f7357447dfb46790c0e0c9a3461838c9ef",
      "closedAt": "2025-02-27T09:47:25Z",
      "mergedAt": "2025-02-27T09:47:25Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "63a8df00e917130349e18d0e23c275d3a3d6ae50"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6dC7y7",
          "commit": {
            "abbreviatedOid": "e78cb10"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-22T12:30:07Z",
          "updatedAt": "2025-02-22T12:30:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6dq5dH",
          "commit": {
            "abbreviatedOid": "92ce278"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-26T17:23:23Z",
          "updatedAt": "2025-02-26T17:23:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6dx22G",
          "commit": {
            "abbreviatedOid": "92ce278"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-27T09:06:24Z",
          "updatedAt": "2025-02-27T09:06:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 141,
      "id": "PR_kwDOJubJxM6MFR7y",
      "title": "Recommendation on media types",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/141",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See issue #85\r\n\r\n@aaronpk please review",
      "createdAt": "2025-02-21T17:40:01Z",
      "updatedAt": "2025-02-27T09:49:45Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "63a8df00e917130349e18d0e23c275d3a3d6ae50",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-6",
      "headRefOid": "c5ea027126497e0ce9e3851aa7eea4c8680c0045",
      "closedAt": "2025-02-27T09:49:43Z",
      "mergedAt": "2025-02-27T09:49:43Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "aadea3c3f926864663954afa4705cdd8f498f564"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6c_PYR",
          "commit": {
            "abbreviatedOid": "9033405"
          },
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-21T17:49:27Z",
          "updatedAt": "2025-02-21T17:49:28Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nIt is RECOMMENDED that any profile or deployment-specific implementation adopt explicit typing as defined in JSON Web Token Best Current Practices {{RFC8725}} and define a new media type {{RFC2046}} in the \"Media Types\" registry {{IANA.MediaTypes}} in the manner described in {{RFC6838}}.\r\n```",
              "createdAt": "2025-02-21T17:49:27Z",
              "updatedAt": "2025-02-21T17:49:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6c_PyY",
          "commit": {
            "abbreviatedOid": "82c2ad7"
          },
          "author": "aaronpk",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "works for me!",
          "createdAt": "2025-02-21T17:50:22Z",
          "updatedAt": "2025-02-21T17:50:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6dC7H8",
          "commit": {
            "abbreviatedOid": "3b9c926"
          },
          "author": "kburgin3",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Looks good",
          "createdAt": "2025-02-22T12:28:23Z",
          "updatedAt": "2025-02-22T12:28:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6dq4eG",
          "commit": {
            "abbreviatedOid": "3b9c926"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-26T17:22:28Z",
          "updatedAt": "2025-02-26T17:22:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJubJxM6dx3E-",
          "commit": {
            "abbreviatedOid": "3b9c926"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-27T09:06:46Z",
          "updatedAt": "2025-02-27T09:06:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 142,
      "id": "PR_kwDOJubJxM6Myj3Y",
      "title": "Prepare changelog for -04 release",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/142",
      "state": "MERGED",
      "author": "arndt-s",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Move current changes to -04 release.",
      "createdAt": "2025-02-27T12:21:27Z",
      "updatedAt": "2025-02-27T12:22:08Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "aadea3c3f926864663954afa4705cdd8f498f564",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "arndt/prepare-04",
      "headRefOid": "e885f2009eae5b0d3748b75af643bede271aa6b3",
      "closedAt": "2025-02-27T12:22:07Z",
      "mergedAt": "2025-02-27T12:22:07Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "ffb7d9de01dcca08c0f3a2095575ab63bddc1c38"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 144,
      "id": "PR_kwDOJubJxM6Q-sB6",
      "title": "Nit: Swap Domain B for Domain A",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/144",
      "state": "MERGED",
      "author": "dhs-BI",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The text inadvertently swapped Domain B and Domain A when talking about the RS acting as a client.",
      "createdAt": "2025-04-01T18:46:16Z",
      "updatedAt": "2025-04-09T16:55:07Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "ffb7d9de01dcca08c0f3a2095575ab63bddc1c38",
      "headRepository": "dhs-BI/oauth-identity-chaining",
      "headRefName": "patch-1",
      "headRefOid": "e1949e9ba144cf161c9575e20c5d6971d8f5f0c5",
      "closedAt": "2025-04-09T16:55:07Z",
      "mergedAt": "2025-04-09T16:55:07Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "70652b6a9e35f962d7ae140f64d5d95c4f9e27fd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6jgYje",
          "commit": {
            "abbreviatedOid": "e1949e9"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-04-04T14:22:11Z",
          "updatedAt": "2025-04-04T14:22:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 145,
      "id": "PR_kwDOJubJxM6Q--94",
      "title": "Clarity for Appendix B1",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/145",
      "state": "MERGED",
      "author": "dhs-BI",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I found myself struggling with the language in B1, so I reworked the diagrams to label the AS and RS in their respective domains.  The language has been carried into the text, as well.\r\n\r\nIf this is helpful, I'll make the same changes for B2 and other places in the text where more clarity is required.",
      "createdAt": "2025-04-01T19:25:29Z",
      "updatedAt": "2025-04-09T16:55:19Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "ffb7d9de01dcca08c0f3a2095575ab63bddc1c38",
      "headRepository": "dhs-BI/oauth-identity-chaining",
      "headRefName": "patch-2",
      "headRefOid": "38da9d96fc0122e7eed7318d0e266c2d8b1a451f",
      "closedAt": "2025-04-09T16:55:18Z",
      "mergedAt": "2025-04-09T16:55:18Z",
      "mergedBy": "arndt-s",
      "mergeCommit": {
        "oid": "64373c85ab5f21887d0b8b14e38e75666c5b6c5d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6jgbTk",
          "commit": {
            "abbreviatedOid": "4db4d58"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-04T14:25:40Z",
          "updatedAt": "2025-04-04T14:26:40Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\n(F) The resource server in Domain A (RS\u1d2c) uses the access token to access the protected resource at Domain B (RS\u1d2e).\r\n```",
              "createdAt": "2025-04-04T14:25:41Z",
              "updatedAt": "2025-04-04T14:26:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJubJxM6kKPIm",
          "commit": {
            "abbreviatedOid": "38da9d9"
          },
          "author": "arndt-s",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-04-09T16:54:23Z",
          "updatedAt": "2025-04-09T16:54:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 148,
      "id": "PR_kwDOJubJxM6TwK7H",
      "title": "Clarify Introduction",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/148",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses Feedback in #143 to provide context that this draft codifies the pattern of combining RFC8693 and RFC7523 for cross-domain access. ",
      "createdAt": "2025-04-24T11:48:02Z",
      "updatedAt": "2025-04-25T18:16:47Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "64373c85ab5f21887d0b8b14e38e75666c5b6c5d",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-4",
      "headRefOid": "1cf411022eba063ea00bc6110e9847ad34720edc",
      "closedAt": "2025-04-25T18:16:45Z",
      "mergedAt": "2025-04-25T18:16:45Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "5a3ad9998b27abe0d9b2334677b8c85049c154d9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJubJxM6mlmnj",
          "commit": {
            "abbreviatedOid": "1cf4110"
          },
          "author": "bc-pi",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-04-25T17:49:48Z",
          "updatedAt": "2025-04-25T17:49:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 149,
      "id": "PR_kwDOJubJxM6Tw5T6",
      "title": "Editorial pass for consistency with the main document.",
      "url": "https://github.com/oauth-wg/oauth-identity-chaining/pull/149",
      "state": "OPEN",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Editorial pass (see issue #122)",
      "createdAt": "2025-04-24T12:59:22Z",
      "updatedAt": "2025-04-24T13:02:48Z",
      "baseRepository": "oauth-wg/oauth-identity-chaining",
      "baseRefName": "main",
      "baseRefOid": "64373c85ab5f21887d0b8b14e38e75666c5b6c5d",
      "headRepository": "oauth-wg/oauth-identity-chaining",
      "headRefName": "PieterKas-patch-5",
      "headRefOid": "4317ed2f7145b9630b0998cc5a6b8e3af728c703",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}